<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.5.1" created="2013-05-24 18:18" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Bioops</title>
	<link>http://128.192.66.53/wordpress</link>
	<description>Bioinformatics=(ACGAAG-&#62;AK)+(#!/bin/sh)+(P(A&#124;B)=P(B&#124;A)*P(A)/P(B)). OOOOOOOOPS!!!</description>
	<pubDate>Fri, 24 May 2013 18:18:22 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://128.192.66.53/wordpress</wp:base_site_url>
	<wp:base_blog_url>http://128.192.66.53/wordpress</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>bioops</wp:author_login><wp:author_email>bioops.info@gmail.com</wp:author_email><wp:author_display_name><![CDATA[bioops]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>bioinformatics</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Bioinformatics]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>genomics</wp:category_nicename><wp:category_parent>bioinformatics</wp:category_parent><wp:cat_name><![CDATA[Genomics]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>life</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Life]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>109</wp:term_id><wp:category_nicename>news</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[News]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>next-generation-sequencing</wp:category_nicename><wp:category_parent>bioinformatics</wp:category_parent><wp:cat_name><![CDATA[NGS]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>95</wp:term_id><wp:category_nicename>os</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[OS]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>paper</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Paper]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>49</wp:term_id><wp:category_nicename>programming</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Programming]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>152</wp:term_id><wp:category_nicename>r</wp:category_nicename><wp:category_parent>programming</wp:category_parent><wp:cat_name><![CDATA[R]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>96</wp:term_id><wp:category_nicename>software</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Software]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>156</wp:term_id><wp:category_nicename>systems-biology</wp:category_nicename><wp:category_parent>bioinformatics</wp:category_parent><wp:cat_name><![CDATA[Systems Biology]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>106</wp:term_id><wp:category_nicename>bioperl-howto-translation</wp:category_nicename><wp:category_parent>programming</wp:category_parent><wp:cat_name><![CDATA[Bioperl HOWTO翻译]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>93</wp:term_id><wp:category_nicename>cplusplus</wp:category_nicename><wp:category_parent>programming</wp:category_parent><wp:cat_name><![CDATA[C++]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>java</wp:category_nicename><wp:category_parent>programming</wp:category_parent><wp:cat_name><![CDATA[Java]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>linux</wp:category_nicename><wp:category_parent>os</wp:category_parent><wp:cat_name><![CDATA[Linux]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>68</wp:term_id><wp:category_nicename>mac</wp:category_nicename><wp:category_parent>os</wp:category_parent><wp:cat_name><![CDATA[Mac]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>perl</wp:category_nicename><wp:category_parent>programming</wp:category_parent><wp:cat_name><![CDATA[Perl]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>119</wp:term_id><wp:tag_slug>1000-genome</wp:tag_slug><wp:tag_name><![CDATA[$1000 genome]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>11</wp:term_id><wp:tag_slug>000webhost</wp:tag_slug><wp:tag_name><![CDATA[000webhost]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>127</wp:term_id><wp:tag_slug>454</wp:tag_slug><wp:tag_name><![CDATA[454]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>90</wp:term_id><wp:tag_slug>abroad</wp:tag_slug><wp:tag_name><![CDATA[Abroad]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>12</wp:term_id><wp:tag_slug>abyss</wp:tag_slug><wp:tag_name><![CDATA[ABySS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>13</wp:term_id><wp:tag_slug>ad</wp:tag_slug><wp:tag_name><![CDATA[AD]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>alignment</wp:tag_slug><wp:tag_name><![CDATA[Alignment]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>87</wp:term_id><wp:tag_slug>angry</wp:tag_slug><wp:tag_name><![CDATA[Angry]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>132</wp:term_id><wp:tag_slug>annotation</wp:tag_slug><wp:tag_name><![CDATA[Annotation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>73</wp:term_id><wp:tag_slug>apple</wp:tag_slug><wp:tag_name><![CDATA[Apple]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>70</wp:term_id><wp:tag_slug>apt-get</wp:tag_slug><wp:tag_name><![CDATA[apt-get]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>71</wp:term_id><wp:tag_slug>array</wp:tag_slug><wp:tag_name><![CDATA[Array]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>assembly</wp:tag_slug><wp:tag_name><![CDATA[Assembly]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>169</wp:term_id><wp:tag_slug>bamboo</wp:tag_slug><wp:tag_name><![CDATA[bamboo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>165</wp:term_id><wp:tag_slug>barley</wp:tag_slug><wp:tag_name><![CDATA[Barley]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>112</wp:term_id><wp:tag_slug>bgi</wp:tag_slug><wp:tag_name><![CDATA[BGI]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>3</wp:term_id><wp:tag_slug>bioinformatics</wp:tag_slug><wp:tag_name><![CDATA[Bioinformatics]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug>bioperl</wp:tag_slug><wp:tag_name><![CDATA[Bioperl]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug>bl2seq</wp:tag_slug><wp:tag_name><![CDATA[Bl2seq]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug>blast</wp:tag_slug><wp:tag_name><![CDATA[Blast]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>76</wp:term_id><wp:tag_slug>busy</wp:tag_slug><wp:tag_name><![CDATA[Busy]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>92</wp:term_id><wp:tag_slug>c</wp:tag_slug><wp:tag_name><![CDATA[C++]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>134</wp:term_id><wp:tag_slug>cancer</wp:tag_slug><wp:tag_name><![CDATA[Cancer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>cluster</wp:tag_slug><wp:tag_name><![CDATA[Cluster]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>154</wp:term_id><wp:tag_slug>clustering</wp:tag_slug><wp:tag_name><![CDATA[Clustering]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>clusterw</wp:tag_slug><wp:tag_name><![CDATA[ClusterW]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>94</wp:term_id><wp:tag_slug>coder</wp:tag_slug><wp:tag_name><![CDATA[Coder]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>command</wp:tag_slug><wp:tag_name><![CDATA[Command]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>171</wp:term_id><wp:tag_slug>company</wp:tag_slug><wp:tag_name><![CDATA[Company]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>comparative-genomics</wp:tag_slug><wp:tag_name><![CDATA[Comparative Genomics]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>contig</wp:tag_slug><wp:tag_name><![CDATA[Contig]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>116</wp:term_id><wp:tag_slug>cortex</wp:tag_slug><wp:tag_name><![CDATA[Cortex]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>102</wp:term_id><wp:tag_slug>data-processing</wp:tag_slug><wp:tag_name><![CDATA[Data Processing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>75</wp:term_id><wp:tag_slug>die</wp:tag_slug><wp:tag_name><![CDATA[Die]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>130</wp:term_id><wp:tag_slug>elife</wp:tag_slug><wp:tag_name><![CDATA[eLife]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>108</wp:term_id><wp:tag_slug>elite</wp:tag_slug><wp:tag_name><![CDATA[Elite]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug>evolution</wp:tag_slug><wp:tag_name><![CDATA[Evolution]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>101</wp:term_id><wp:tag_slug>excel</wp:tag_slug><wp:tag_name><![CDATA[Excel]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>food</wp:tag_slug><wp:tag_name><![CDATA[Food]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>functional-genomics</wp:tag_slug><wp:tag_name><![CDATA[Functional Genomics]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>gatk</wp:tag_slug><wp:tag_name><![CDATA[GATK]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>82</wp:term_id><wp:tag_slug>genbank</wp:tag_slug><wp:tag_name><![CDATA[Genbank]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>gene-family</wp:tag_slug><wp:tag_name><![CDATA[Gene family]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>99</wp:term_id><wp:tag_slug>gene-ontology</wp:tag_slug><wp:tag_name><![CDATA[Gene Ontology]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>161</wp:term_id><wp:tag_slug>genome-browser</wp:tag_slug><wp:tag_name><![CDATA[Genome Browser]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>4</wp:term_id><wp:tag_slug>genomics</wp:tag_slug><wp:tag_name><![CDATA[Genomics]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>gff3</wp:tag_slug><wp:tag_name><![CDATA[GFF3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>158</wp:term_id><wp:tag_slug>github</wp:tag_slug><wp:tag_name><![CDATA[github]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>google</wp:tag_slug><wp:tag_name><![CDATA[Google]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>google-search</wp:tag_slug><wp:tag_name><![CDATA[Google Search]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>113</wp:term_id><wp:tag_slug>gpu</wp:tag_slug><wp:tag_name><![CDATA[GPU]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>66</wp:term_id><wp:tag_slug>gwas</wp:tag_slug><wp:tag_name><![CDATA[GWAS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>115</wp:term_id><wp:tag_slug>hacker</wp:tag_slug><wp:tag_name><![CDATA[Hacker]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>153</wp:term_id><wp:tag_slug>high-performance-computing</wp:tag_slug><wp:tag_name><![CDATA[High-performance computing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>72</wp:term_id><wp:tag_slug>histogram</wp:tag_slug><wp:tag_name><![CDATA[Histogram]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>122</wp:term_id><wp:tag_slug>howto</wp:tag_slug><wp:tag_name><![CDATA[HOWTO]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>117</wp:term_id><wp:tag_slug>illumina</wp:tag_slug><wp:tag_name><![CDATA[Illumina]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>123</wp:term_id><wp:tag_slug>index</wp:tag_slug><wp:tag_name><![CDATA[Index]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>interpro</wp:tag_slug><wp:tag_name><![CDATA[InterPro]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>83</wp:term_id><wp:tag_slug>introduction</wp:tag_slug><wp:tag_name><![CDATA[Introduction]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>118</wp:term_id><wp:tag_slug>ion-torrent</wp:tag_slug><wp:tag_name><![CDATA[Ion Torrent]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>5</wp:term_id><wp:tag_slug>java</wp:tag_slug><wp:tag_name><![CDATA[Java]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>172</wp:term_id><wp:tag_slug>job</wp:tag_slug><wp:tag_name><![CDATA[Job]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>kegg</wp:tag_slug><wp:tag_name><![CDATA[KEGG]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>168</wp:term_id><wp:tag_slug>lamprey</wp:tag_slug><wp:tag_name><![CDATA[lamprey]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>life</wp:tag_slug><wp:tag_name><![CDATA[Life]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>126</wp:term_id><wp:tag_slug>life-tech</wp:tag_slug><wp:tag_name><![CDATA[Life Tech]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug>linux</wp:tag_slug><wp:tag_name><![CDATA[Linux]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>local</wp:tag_slug><wp:tag_name><![CDATA[Local]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>68</wp:term_id><wp:tag_slug>mac</wp:tag_slug><wp:tag_name><![CDATA[Mac]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>69</wp:term_id><wp:tag_slug>macports</wp:tag_slug><wp:tag_name><![CDATA[MacPorts]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>mcl</wp:tag_slug><wp:tag_name><![CDATA[MCL]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>131</wp:term_id><wp:tag_slug>miseq</wp:tag_slug><wp:tag_name><![CDATA[MiSeq]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>38</wp:term_id><wp:tag_slug>mizbee</wp:tag_slug><wp:tag_name><![CDATA[Mizbee]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>157</wp:term_id><wp:tag_slug>modeling</wp:tag_slug><wp:tag_name><![CDATA[Modeling]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>mpi</wp:tag_slug><wp:tag_name><![CDATA[MPI]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug>multi-threads</wp:tag_slug><wp:tag_name><![CDATA[Multi-threads]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>mysql</wp:tag_slug><wp:tag_name><![CDATA[Mysql]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>42</wp:term_id><wp:tag_slug>n50</wp:tag_slug><wp:tag_name><![CDATA[N50]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>128</wp:term_id><wp:tag_slug>nanopore</wp:tag_slug><wp:tag_name><![CDATA[Nanopore]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>43</wp:term_id><wp:tag_slug>nature</wp:tag_slug><wp:tag_name><![CDATA[Nature]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>155</wp:term_id><wp:tag_slug>network</wp:tag_slug><wp:tag_name><![CDATA[Network]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>109</wp:term_id><wp:tag_slug>news</wp:tag_slug><wp:tag_name><![CDATA[News]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>8</wp:term_id><wp:tag_slug>next-generation-sequencing</wp:tag_slug><wp:tag_name><![CDATA[NGS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>44</wp:term_id><wp:tag_slug>note</wp:tag_slug><wp:tag_name><![CDATA[Note]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>162</wp:term_id><wp:tag_slug>orange</wp:tag_slug><wp:tag_name><![CDATA[Orange]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>129</wp:term_id><wp:tag_slug>pacbio</wp:tag_slug><wp:tag_name><![CDATA[PacBio]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>paper</wp:tag_slug><wp:tag_name><![CDATA[Paper]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>45</wp:term_id><wp:tag_slug>parallel</wp:tag_slug><wp:tag_name><![CDATA[Parallel]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug>pbs</wp:tag_slug><wp:tag_name><![CDATA[PBS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>perl</wp:tag_slug><wp:tag_name><![CDATA[Perl]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>78</wp:term_id><wp:tag_slug>perl-module</wp:tag_slug><wp:tag_name><![CDATA[Perl module]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>167</wp:term_id><wp:tag_slug>photo</wp:tag_slug><wp:tag_name><![CDATA[Photo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>91</wp:term_id><wp:tag_slug>pigeonpea</wp:tag_slug><wp:tag_name><![CDATA[Pigeonpea]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>49</wp:term_id><wp:tag_slug>programming</wp:tag_slug><wp:tag_name><![CDATA[Programming]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>104</wp:term_id><wp:tag_slug>protein</wp:tag_slug><wp:tag_name><![CDATA[protein.]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>159</wp:term_id><wp:tag_slug>qc</wp:tag_slug><wp:tag_name><![CDATA[QC]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>152</wp:term_id><wp:tag_slug>r</wp:tag_slug><wp:tag_name><![CDATA[R]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>84</wp:term_id><wp:tag_slug>regular-expression</wp:tag_slug><wp:tag_name><![CDATA[Regular Expression]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>133</wp:term_id><wp:tag_slug>resequencing</wp:tag_slug><wp:tag_name><![CDATA[Resequencing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>89</wp:term_id><wp:tag_slug>return</wp:tag_slug><wp:tag_name><![CDATA[Return]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>52</wp:term_id><wp:tag_slug>rna-seq</wp:tag_slug><wp:tag_name><![CDATA[RNA-Seq]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>120</wp:term_id><wp:tag_slug>science</wp:tag_slug><wp:tag_name><![CDATA[Science]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>80</wp:term_id><wp:tag_slug>seq</wp:tag_slug><wp:tag_name><![CDATA[Seq]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>81</wp:term_id><wp:tag_slug>seqio</wp:tag_slug><wp:tag_name><![CDATA[SeqIO]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>85</wp:term_id><wp:tag_slug>short-reads</wp:tag_slug><wp:tag_name><![CDATA[Short reads]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>98</wp:term_id><wp:tag_slug>shortcut</wp:tag_slug><wp:tag_name><![CDATA[Shortcut]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>121</wp:term_id><wp:tag_slug>single-cell-sequencing</wp:tag_slug><wp:tag_name><![CDATA[Single-cell sequencing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>67</wp:term_id><wp:tag_slug>snp</wp:tag_slug><wp:tag_name><![CDATA[SNP]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>96</wp:term_id><wp:tag_slug>software</wp:tag_slug><wp:tag_name><![CDATA[Software]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>105</wp:term_id><wp:tag_slug>statistics</wp:tag_slug><wp:tag_name><![CDATA[Statistics]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>74</wp:term_id><wp:tag_slug>steve-jobs</wp:tag_slug><wp:tag_name><![CDATA[Steve Jobs]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>56</wp:term_id><wp:tag_slug>structural-variation</wp:tag_slug><wp:tag_name><![CDATA[Structural Variation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>88</wp:term_id><wp:tag_slug>stupid</wp:tag_slug><wp:tag_name><![CDATA[Stupid]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>77</wp:term_id><wp:tag_slug>subset</wp:tag_slug><wp:tag_name><![CDATA[Subset]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>110</wp:term_id><wp:tag_slug>supercomputing</wp:tag_slug><wp:tag_name><![CDATA[Supercomputing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>57</wp:term_id><wp:tag_slug>synteny</wp:tag_slug><wp:tag_name><![CDATA[Synteny]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>58</wp:term_id><wp:tag_slug>system</wp:tag_slug><wp:tag_name><![CDATA[System]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>156</wp:term_id><wp:tag_slug>systems-biology</wp:tag_slug><wp:tag_name><![CDATA[Systems Biology]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>59</wp:term_id><wp:tag_slug>terminal</wp:tag_slug><wp:tag_name><![CDATA[Terminal]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>60</wp:term_id><wp:tag_slug>transcriptome</wp:tag_slug><wp:tag_name><![CDATA[Transcriptome]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>103</wp:term_id><wp:tag_slug>translating</wp:tag_slug><wp:tag_name><![CDATA[Translating]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>61</wp:term_id><wp:tag_slug>translation</wp:tag_slug><wp:tag_name><![CDATA[Translation]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>62</wp:term_id><wp:tag_slug>ubuntu</wp:tag_slug><wp:tag_name><![CDATA[Ubuntu]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>160</wp:term_id><wp:tag_slug>ucsc</wp:tag_slug><wp:tag_name><![CDATA[UCSC]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>166</wp:term_id><wp:tag_slug>uga</wp:tag_slug><wp:tag_name><![CDATA[UGA]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>63</wp:term_id><wp:tag_slug>variation-discovery</wp:tag_slug><wp:tag_name><![CDATA[Variation Discovery]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>64</wp:term_id><wp:tag_slug>vim</wp:tag_slug><wp:tag_name><![CDATA[Vim]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>65</wp:term_id><wp:tag_slug>vnc-server</wp:tag_slug><wp:tag_name><![CDATA[VNC Server]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>163</wp:term_id><wp:tag_slug>watermelon</wp:tag_slug><wp:tag_name><![CDATA[Watermelon]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>151</wp:term_id><wp:tag_slug>weibo</wp:tag_slug><wp:tag_name><![CDATA[Weibo]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>164</wp:term_id><wp:tag_slug>wheat</wp:tag_slug><wp:tag_name><![CDATA[Wheat]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>86</wp:term_id><wp:tag_slug>yum</wp:tag_slug><wp:tag_name><![CDATA[yum]]></wp:tag_name></wp:tag>
	<wp:term><wp:term_id>125</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>def</wp:term_slug><wp:term_name><![CDATA[def]]></wp:term_name></wp:term>

	<generator>http://wordpress.org/?v=3.5.1</generator>

	<item>
		<title>data lost</title>
		<link>http://128.192.66.53/wordpress/?p=23</link>
		<pubDate>Thu, 17 Feb 2011 19:25:32 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=23</guid>
		<description></description>
		<content:encoded><![CDATA[<div>My previous posts are all lost during transferring server. Sorry!</div>
<div>I am trying to recover them as much as I can. Thanks!</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2011-02-17 14:25:32</wp:post_date>
		<wp:post_date_gmt>2011-02-17 19:25:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>data-lost</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[308]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>本地blast</title>
		<link>http://128.192.66.53/wordpress/?p=41</link>
		<pubDate>Thu, 17 Feb 2011 22:39:31 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=41</guid>
		<description></description>
		<content:encoded><![CDATA[<div>

<strong><span style="text-decoration: underline;">1.Blast程序下载和安装</span></strong>
<a href="ftp://ftp.ncbi.nlm.nih.gov/blast/executables/release/LATEST" target="_blank">ftp://ftp.ncbi.nlm.nih.gov/blast/executables/release/LATEST</a>在该目录中选择需要的blast程序，下载.
windows用户: 双击，在该文件所在目录下会生成一系列文件。在c:windows下创建名为NCBI.ini的配置文件，用记事本写入：

[NCBI]
Data ="pathdata"
（注意：path代表你电脑上blast的安装目录）

Linux 用户:直接解压

<strong><span style="text-decoration: underline;">2.下载数据库
</span></strong><a href="ftp://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/">ftp://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/</a>
也可以用fasta文件创建自己的数据库

<strong><span style="text-decoration: underline;">3.格式化数据库
</span></strong>windows用户: 进入cmd，使用cd /d 命令打开blast程序所在文件夹。
linux用户，也需要在终端内进入/blast/bin/ 文件夹, 也可使用export PATH=$PATH:/path/to/blast/bin/ 省去进入blast文件夹
输入：formatdb -i databasename -p F -o T
databasename表示自己选择的数据库（最好使用绝对路径）
-i input file 参数用于指定需要格式的数据库
-p type of file 用于指定文件类型，T 为蛋白质，F为核酸，默认为 T
-o parse options 用于指定是否解析序列ID并创建索引 T 为创建，F为不创建，默认为F。如果不用T，会提示[NULL_Caption] WARNING: "inputseq": Could not find index files for database "databasename"
可以输入formatdb --help 来获取相关参数的解释和帮助。

<strong><span style="text-decoration: underline;">4.blastall</span></strong>
windows用户: 进入cmd，使用cd /d 命令打开blast程序所在文件夹。
linux用户，也需要在终端内进入/blast/bin/ 文件夹。
输入：blastall -p blastn -d databasename -i inputfile -o outputfile
-p program name 为需要使用的程序名
blastn 为核酸序列对比搜索
blastp 为蛋白质序列对比搜索
blastx 为用被翻译的核酸序列在蛋白质数据库中搜索
tblastn 为 用蛋白质序列在 [核酸序列翻译后数据库] 中搜索
tblastx 为用翻译后的核酸序列 在 核酸序列翻译后数据库中搜索
可以输入blastall - 来获取相关参数的解释和帮助。
-d databasename 指定所使用的数据库名称
-i inputfile 待搜索的序列文件（最好使用绝对路径）
-o outputfile 指定保存结果的文件（最好使用绝对路径）

<strong>注：通过Perl 脚本实现本地化运行BLAST</strong>

<script src="https://gist.github.com/4165092.js?file=local_blast.pl"></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2011-02-17 17:39:31</wp:post_date>
		<wp:post_date_gmt>2011-02-17 22:39:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>windows-perl-blast</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="blast"><![CDATA[Blast]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="local"><![CDATA[Local]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[windows-perl-bl2seq]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1682]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:2:"50";s:10:"post_title";s:50:"windows下用perl操作bl2seq进行两序列比对";s:7:"matches";s:1:"3";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/02/perl-bl2seq/";}i:1;a:4:{s:2:"ID";s:3:"524";s:10:"post_title";s:61:"perl脚本提取BLAST结果中的信息【以tblastn为例】";s:7:"matches";s:1:"2";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/08/parse-blast/";}i:2;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:3;a:4:{s:2:"ID";s:3:"346";s:10:"post_title";s:45:"KEGG: Kyoto Encyclopedia of Genes and Genomes";s:7:"matches";s:1:"2";s:9:"permalink";s:44:"http://128.192.66.53/wordpress/2011/04/kegg/";}i:4;a:4:{s:2:"ID";s:3:"343";s:10:"post_title";s:8:"InterPro";s:7:"matches";s:1:"2";s:9:"permalink";s:48:"http://128.192.66.53/wordpress/2011/04/interpro/";}i:5;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"2";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:6;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:15:"parse gff3 file";s:7:"matches";s:1:"2";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/03/parse-gff3-file/";}i:7;a:4:{s:2:"ID";s:2:"44";s:10:"post_title";s:42:"用perl操作Clustalw进行多序列比对";s:7:"matches";s:1:"2";s:9:"permalink";s:53:"http://128.192.66.53/wordpress/2011/02/perl-clustalw/";}i:8;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:9;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"1";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Thank you!</title>
		<link>http://128.192.66.53/wordpress/?page_id=93</link>
		<pubDate>Fri, 18 Feb 2011 04:02:40 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Thank you for your support of Bioops!. Your donation is truly outstanding!</h2>
<h2>Thank you again!</h2>
<h2>http://128.192.66.53/wordpress/</h2>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2011-02-17 23:02:40</wp:post_date>
		<wp:post_date_gmt>2011-02-18 04:02:40</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>thank-you</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[262]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>About</title>
		<link>http://128.192.66.53/wordpress/?page_id=168</link>
		<pubDate>Thu, 24 Feb 2011 16:41:12 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/</guid>
		<description></description>
		<content:encoded><![CDATA[Hello!

Thank you for your interest!

I am a PhD student majoring in <a href="http://en.wikipedia.org/wiki/Bioinformatics" target="_blank">Bioinformatics</a>.

I am working on <a href="http://en.wikipedia.org/wiki/Genome_sequencing" target="_blank">genome sequencing</a>, <a href="http://en.wikipedia.org/wiki/Comparative_genomics" target="_blank">comparative genomics</a>, <a href="http://en.wikipedia.org/wiki/Genome_evolution" target="_blank">genome evolution</a> and  other PhD (permanent-head-damaging) stuff.

矮、穷、锉；

崇尚科学、自由、老庄；

迷恋google、皇马、燕姿；

拖延症、强迫症、微洁癖；

完美主义、理想主义、自由主义；

学术小宅男、已婚凤凰男、北美猥琐男；]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date>2011-02-24 11:41:12</wp:post_date>
		<wp:post_date_gmt>2011-02-24 16:41:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[2095]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>948</wp:comment_id>
			<wp:comment_author><![CDATA[bqdx]]></wp:comment_author>
			<wp:comment_author_email>hfsun.tju@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://samuthing.com</wp:comment_author_url>
			<wp:comment_author_IP>222.66.175.197</wp:comment_author_IP>
			<wp:comment_date>2011-09-20 07:15:25</wp:comment_date>
			<wp:comment_date_gmt>2011-09-20 11:15:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[我也是做生物信息的，不过一直用python，把你的网站加链接了，希望以后能有机会交流~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1316520317.52";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1316517325.46";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>951</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.53</wp:comment_author_IP>
			<wp:comment_date>2011-09-20 08:07:17</wp:comment_date>
			<wp:comment_date_gmt>2011-09-20 12:07:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[谢谢！多多指教！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>948</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1316520437.94";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1527</wp:comment_id>
			<wp:comment_author><![CDATA[bao]]></wp:comment_author>
			<wp:comment_author_email>guanhuibao@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.16.144.195</wp:comment_author_IP>
			<wp:comment_date>2012-01-09 23:38:17</wp:comment_date>
			<wp:comment_date_gmt>2012-01-10 04:38:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[看了你的网站，研究方向很相似，很多需要向你学习，希望能有机会交流下]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1326170297.99";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1326196328.5";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1528</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.186.199</wp:comment_author_IP>
			<wp:comment_date>2012-01-10 06:52:56</wp:comment_date>
			<wp:comment_date_gmt>2012-01-10 11:52:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-1527" rel="nofollow">@bao </a> 互相学习！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1326196376.18";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1534</wp:comment_id>
			<wp:comment_author><![CDATA[haifeng wang]]></wp:comment_author>
			<wp:comment_author_email>09210700148@fudan.edu.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>180.172.134.182</wp:comment_author_IP>
			<wp:comment_date>2012-03-05 09:22:26</wp:comment_date>
			<wp:comment_date_gmt>2012-03-05 14:22:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[想知道通过iprscan_*.pl 跑interproscan总出错，难道不是下载了，直接用吗？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1330957346.31";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1535</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>198.137.20.91</wp:comment_author_IP>
			<wp:comment_date>2012-03-05 09:43:19</wp:comment_date>
			<wp:comment_date_gmt>2012-03-05 14:43:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-1534" rel="nofollow">@haifeng wang </a> 应该是网络连接问题吧。我用着都好着呢。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1330958599.24";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1541</wp:comment_id>
			<wp:comment_author><![CDATA[Chen Lianfu]]></wp:comment_author>
			<wp:comment_author_email>chenllianfu@foxmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.hzaumycology.com/chenlianfu</wp:comment_author_url>
			<wp:comment_author_IP>220.249.99.153</wp:comment_author_IP>
			<wp:comment_date>2012-04-09 01:14:48</wp:comment_date>
			<wp:comment_date_gmt>2012-04-09 05:14:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-1534" rel="nofollow">@haifeng wang </a> 
本地化运行么～一般是用iprscan/bin/iprscan这个程序跑的。安装过程中注意各种perl模块齐全。看出错的提示，进行相关修正。在configure初始化配置过程中，内存消耗较大，为8G左右。机器内存不够是不行的。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1333948488.89";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1333980761.02";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1701</wp:comment_id>
			<wp:comment_author><![CDATA[Vasilis]]></wp:comment_author>
			<wp:comment_author_email>vasilislenis@mail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>144.124.16.33</wp:comment_author_IP>
			<wp:comment_date>2012-11-15 18:24:34</wp:comment_date>
			<wp:comment_date_gmt>2012-11-15 23:24:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello...
My name is Vasilis and I am a PhD student in bioinformatics, too. I am in Aberystwyth University in Wales and I am quite new. I have started a week ago!
My work is about the whole genome sequence alignment.
Thank you for your site, its very helpful!!!!
.....I am full of stress!!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1353021874.5";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353033491.63";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1702</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>70.33.90.138</wp:comment_author_IP>
			<wp:comment_date>2012-11-15 21:39:24</wp:comment_date>
			<wp:comment_date_gmt>2012-11-16 02:39:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[you're welcome!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1701</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1353033564.8";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2336</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2013-04-16 15:16:38</wp:comment_date>
			<wp:comment_date_gmt>2013-04-16 19:16:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[绝大部分是摘录]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>2335</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1366139798.68";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2335</wp:comment_id>
			<wp:comment_author><![CDATA[走出迷失]]></wp:comment_author>
			<wp:comment_author_email>cdd311@126.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.88lost.com</wp:comment_author_url>
			<wp:comment_author_IP>120.194.2.38</wp:comment_author_IP>
			<wp:comment_date>2013-04-14 04:16:35</wp:comment_date>
			<wp:comment_date_gmt>2013-04-14 08:16:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[强大的英文站，表示英文很烂，看不懂]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1365927395.23";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1366084127.39";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>http_imgload</title>
		<link>http://128.192.66.53/wordpress/?attachment_id=439</link>
		<pubDate>Mon, 04 Jul 2011 01:15:06 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/wp-content/uploads/2011/05/http_imgload.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>439</wp:post_id>
		<wp:post_date>2011-07-03 21:15:06</wp:post_date>
		<wp:post_date_gmt>2011-07-04 01:15:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>http_imgload</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>428</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://128.192.66.53/wordpress/wp-content/uploads/2011/05/http_imgload.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/http_imgload.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"325";s:6:"height";s:3:"190";s:14:"hwstring_small";s:23:"height='74' width='128'";s:4:"file";s:24:"2011/05/http_imgload.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:24:"http_imgload-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:24:"http_imgload-300x175.png";s:5:"width";s:3:"300";s:6:"height";s:3:"175";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>20110721212646</title>
		<link>http://128.192.66.53/wordpress/?attachment_id=480</link>
		<pubDate>Fri, 22 Jul 2011 01:27:42 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/wp-content/uploads/2011/07/20110721212646.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>480</wp:post_id>
		<wp:post_date>2011-07-21 21:27:42</wp:post_date>
		<wp:post_date_gmt>2011-07-22 01:27:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>20110721212646</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>471</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://128.192.66.53/wordpress/wp-content/uploads/2011/07/20110721212646.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1040";s:6:"height";s:3:"408";s:14:"hwstring_small";s:23:"height='50' width='128'";s:4:"file";s:26:"2011/07/20110721212646.gif";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"20110721212646-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"20110721212646-300x117.gif";s:5:"width";s:3:"300";s:6:"height";s:3:"117";}s:5:"large";a:3:{s:4:"file";s:27:"20110721212646-1024x401.gif";s:5:"width";s:4:"1024";s:6:"height";s:3:"401";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/20110721212646.gif]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>20110721212958</title>
		<link>http://128.192.66.53/wordpress/?attachment_id=481</link>
		<pubDate>Fri, 22 Jul 2011 01:30:19 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/wp-content/uploads/2011/07/20110721212958.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>481</wp:post_id>
		<wp:post_date>2011-07-21 21:30:19</wp:post_date>
		<wp:post_date_gmt>2011-07-22 01:30:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>20110721212958</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>471</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://128.192.66.53/wordpress/wp-content/uploads/2011/07/20110721212958.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/07/20110721212958.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"436";s:6:"height";s:3:"634";s:14:"hwstring_small";s:22:"height='96' width='66'";s:4:"file";s:26:"2011/07/20110721212958.gif";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"20110721212958-150x150.gif";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"20110721212958-206x300.gif";s:5:"width";s:3:"206";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>google search results</title>
		<link>http://128.192.66.53/wordpress/?page_id=652</link>
		<pubDate>Tue, 13 Sep 2011 12:56:00 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?page_id=652</guid>
		<description></description>
		<content:encoded><![CDATA[<form action="http://128.192.66.53/wordpress/google-search-results/" id="cse-search-box">
  <div>
    <input type="hidden" name="cx" value="partner-pub-5299092739218493:5ql6jyxje4v" />
    <input type="hidden" name="cof" value="FORID:10" />
    <input type="hidden" name="ie" value="UTF-8" />
    <input type="text" name="q" size="80" />
    <input type="submit" name="sa" value="Search" />
  </div>
</form>

<script type="text/javascript" src="http://www.google.com/coop/cse/brand?form=cse-search-box&amp;lang=en"></script>

<div id="cse-search-results"></div>
<script type="text/javascript">
  var googleSearchIframeName = "cse-search-results";
  var googleSearchFormName = "cse-search-box";
  var googleSearchFrameWidth = 800;
  var googleSearchDomain = "www.google.com";
  var googleSearchPath = "/cse";
</script>
<script type="text/javascript" src="http://www.google.com/afsonline/show_afs_search.js"></script>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>652</wp:post_id>
		<wp:post_date>2011-09-13 08:56:00</wp:post_date>
		<wp:post_date_gmt>2011-09-13 12:56:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>google-search-results</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[554]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>programming monkey</title>
		<link>http://128.192.66.53/wordpress/?attachment_id=797</link>
		<pubDate>Mon, 07 Nov 2011 02:38:10 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/wp-content/uploads/2011/11/Screenshot-at-2011-11-06-213721.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>797</wp:post_id>
		<wp:post_date>2011-11-06 21:38:10</wp:post_date>
		<wp:post_date_gmt>2011-11-07 02:38:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>screenshot-at-2011-11-06-213721</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>792</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://128.192.66.53/wordpress/wp-content/uploads/2011/11/Screenshot-at-2011-11-06-213721.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/11/Screenshot-at-2011-11-06-213721.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"595";s:6:"height";s:3:"324";s:14:"hwstring_small";s:23:"height='69' width='128'";s:4:"file";s:43:"2011/11/Screenshot-at-2011-11-06-213721.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2011-11-06-213721-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2011-11-06-213721-300x163.png";s:5:"width";s:3:"300";s:6:"height";s:3:"163";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>12UQ1920Y0-2Y45</title>
		<link>http://128.192.66.53/wordpress/?attachment_id=859</link>
		<pubDate>Sun, 13 Nov 2011 18:26:20 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/wp-content/uploads/2011/11/12UQ1920Y0-2Y45.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>859</wp:post_id>
		<wp:post_date>2011-11-13 13:26:20</wp:post_date>
		<wp:post_date_gmt>2011-11-13 18:26:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>12uq1920y0-2y45</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>858</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://128.192.66.53/wordpress/wp-content/uploads/2011/11/12UQ1920Y0-2Y45.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/11/12UQ1920Y0-2Y45.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1024";s:6:"height";s:3:"723";s:14:"hwstring_small";s:23:"height='90' width='128'";s:4:"file";s:27:"2011/11/12UQ1920Y0-2Y45.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:27:"12UQ1920Y0-2Y45-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:27:"12UQ1920Y0-2Y45-300x211.png";s:5:"width";s:3:"300";s:6:"height";s:3:"211";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>bash_emacs</title>
		<link>http://128.192.66.53/wordpress/?attachment_id=860</link>
		<pubDate>Sun, 13 Nov 2011 18:26:45 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/wp-content/uploads/2011/11/bash_emacs.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>860</wp:post_id>
		<wp:post_date>2011-11-13 13:26:45</wp:post_date>
		<wp:post_date_gmt>2011-11-13 18:26:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash_emacs</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>858</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://128.192.66.53/wordpress/wp-content/uploads/2011/11/bash_emacs.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/11/bash_emacs.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1776";s:6:"height";s:3:"636";s:14:"hwstring_small";s:23:"height='45' width='128'";s:4:"file";s:23:"2011/11/bash_emacs.jpeg";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"bash_emacs-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"bash_emacs-300x107.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"107";}s:5:"large";a:3:{s:4:"file";s:23:"bash_emacs-1024x366.jpg";s:5:"width";s:4:"1024";s:6:"height";s:3:"366";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>bash_sheet</title>
		<link>http://128.192.66.53/wordpress/?attachment_id=861</link>
		<pubDate>Sun, 13 Nov 2011 18:26:56 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/wp-content/uploads/2011/11/bash_sheet.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>861</wp:post_id>
		<wp:post_date>2011-11-13 13:26:56</wp:post_date>
		<wp:post_date_gmt>2011-11-13 18:26:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bash_sheet</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>858</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://128.192.66.53/wordpress/wp-content/uploads/2011/11/bash_sheet.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/11/bash_sheet.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1024";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:22:"2011/11/bash_sheet.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"bash_sheet-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"bash_sheet-300x225.png";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>regular-expressions-cheat-sheet-v1</title>
		<link>http://128.192.66.53/wordpress/?attachment_id=862</link>
		<pubDate>Sun, 13 Nov 2011 18:27:27 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/wp-content/uploads/2011/11/regular-expressions-cheat-sheet-v1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>862</wp:post_id>
		<wp:post_date>2011-11-13 13:27:27</wp:post_date>
		<wp:post_date_gmt>2011-11-13 18:27:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>regular-expressions-cheat-sheet-v1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>858</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://128.192.66.53/wordpress/wp-content/uploads/2011/11/regular-expressions-cheat-sheet-v1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/11/regular-expressions-cheat-sheet-v1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"763";s:6:"height";s:4:"1037";s:14:"hwstring_small";s:22:"height='96' width='70'";s:4:"file";s:46:"2011/11/regular-expressions-cheat-sheet-v1.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:46:"regular-expressions-cheat-sheet-v1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:46:"regular-expressions-cheat-sheet-v1-220x300.png";s:5:"width";s:3:"220";s:6:"height";s:3:"300";}s:5:"large";a:3:{s:4:"file";s:47:"regular-expressions-cheat-sheet-v1-753x1024.png";s:5:"width";s:3:"753";s:6:"height";s:4:"1024";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Home</title>
		<link>http://128.192.66.53/wordpress/?p=1278</link>
		<pubDate>Sun, 04 Mar 2012 19:50:25 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1278</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1278</wp:post_id>
		<wp:post_date>2012-03-04 14:50:25</wp:post_date>
		<wp:post_date_gmt>2012-03-04 19:50:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>home</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="def"><![CDATA[def]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://128.192.66.53/wordpress/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[1278]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>与妻书</title>
		<link>http://128.192.66.53/wordpress/?p=1576</link>
		<pubDate>Sat, 19 May 2012 18:11:15 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1576</guid>
		<description></description>
		<content:encoded><![CDATA[亲爱的老婆，

很幸运咱们的纪念日是在520（我爱你）。写下这封信作为四周年的礼物和纪念。

重要的日子在我的心里一直都是一个纠结。作为一个得过且过、安于现状的人，总觉得在“特殊的日子”里一定要办一些“特殊的事情”是一种压力。这些天绞尽脑汁一直在想怎么才能送你一个够分量的礼物。物质上，咱俩都是实用主义，没有什么需要买的；自作主张买了又怕你说乱花钱。希望在mall或outlet上能找到你中意的礼物。

礼物归礼物，我觉得还是有必要写这封信的。一来，假若没有物质上的礼物，此信也可填补缺憾。二来，你不是一直对我在咱俩关系上的想法很感兴趣么？借此机会也可抒发一下。

本来打算像非诚勿扰那样，录三段视频，分别讲述对自己的评价、对你的感觉以及对将来的展望。可惜镜头感太差，拿不出手。即使换成录音也难掩瑕疵，鼻音很重，听起来没有底气。最后还是决定写吧。避免了口语的单薄，就算字写得再难看，读起来也不失情浓意厚，单单这种“文艺范儿”的方式就足够回味和留念了。

好了，进入正题。

四年了。一起经历了太多的风雨坎坷，喜怒哀乐，悲欢离合。回忆起来，萦绕在心头的是：

一种幸运。当初爱来的太快太汹涌以至于不懂得珍惜，现在为自己以前的无知和自私而后悔，为你的坚持和笃定而感到非常之幸运。人生没有假如，我也不愿意做这样的设想，现在只想跟你在一起，过好每一分每一秒，才不枉上天对我的眷顾。

一种淡然。“淡然”显然不是一个好的用来形容爱情的词汇。不过，四年的时空变迁，四年的艰难考验，早已磨去了当初的青涩悸动，狂妄自私，患得患失，诚惶诚恐。少了些许轰轰烈烈，也没有惊天动地，有的却是水到渠成的自然，还有稳定心安的悠然。

一种成熟。四年的时间不经意地从指尖流淌，留下的除了渐退的发际线，还有家庭第一敢于担当的责任，事业有重献身学术的使命，以及安身立命宠辱不惊的信念，都在爱的浇灌下茁壮成长、正在开花、期望结果。

白驹过隙，下一个四年也会很快到来。我希望我们能够在下一个四年里：

多一分乐观。一路走来，在你我的共同努力下，生活一直是向上的，而且仍将继续。携手前行，同心齐力，我相信，没有任何跨不去的坎儿。

多一分轻松。过于追求学业的完美，物质的丰腴，会给生活带来更多的压力。放下包袱，体验生活，享受现在，憧憬未来，才能悉心体会那种＂在路上＂的快乐。

多一分......。本来想写三点的，也好和上面对应。想了一些备用的，如，自信、感恩、张扬等。不过我觉得都已不重要。最最重要的是我们能够一直在一起，身在一起，心也在一起。只要这一点，我就已知足了。

回头再看，觉得有点肉麻。不过，“肉麻”本就是因为这些饱含情感的词不经意间触动了某根心弦，而真实不做作的表达，则更能超越“肉麻”，留存心底。

爱着你的小哈

2012年5月20日]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1576</wp:post_id>
		<wp:post_date>2012-05-19 14:11:15</wp:post_date>
		<wp:post_date_gmt>2012-05-19 18:11:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>to-my-wife</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[25]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e4%b8%8e%e5%a6%bb%e4%b9%a6]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://128.192.66.53/wordpress/?p=1603</link>
		<pubDate>Thu, 14 Jun 2012 01:28:41 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1603</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1603</wp:post_id>
		<wp:post_date>2012-06-13 21:28:41</wp:post_date>
		<wp:post_date_gmt>2012-06-14 01:28:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>1603</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="def"><![CDATA[def]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[168]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://128.192.66.53/wordpress/?p=1604</link>
		<pubDate>Thu, 14 Jun 2012 01:53:23 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1604</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1604</wp:post_id>
		<wp:post_date>2012-06-13 21:53:23</wp:post_date>
		<wp:post_date_gmt>2012-06-14 01:53:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>1604</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>3</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="def"><![CDATA[def]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://128.192.66.53/wordpress/?p=1605</link>
		<pubDate>Thu, 14 Jun 2012 01:53:23 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1605</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1605</wp:post_id>
		<wp:post_date>2012-06-13 21:53:23</wp:post_date>
		<wp:post_date_gmt>2012-06-14 01:53:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>1605</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>49</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="def"><![CDATA[def]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[106]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Archives</title>
		<link>http://128.192.66.53/wordpress/?page_id=1626</link>
		<pubDate>Wed, 20 Jun 2012 18:16:48 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?page_id=1626</guid>
		<description></description>
		<content:encoded><![CDATA[[extended-live-archive]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1626</wp:post_id>
		<wp:post_date>2012-06-20 14:16:48</wp:post_date>
		<wp:post_date_gmt>2012-06-20 18:16:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>archives</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[586]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://128.192.66.53/wordpress/?p=1742</link>
		<pubDate>Wed, 18 Jul 2012 17:10:12 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1742</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1742</wp:post_id>
		<wp:post_date>2012-07-18 13:10:12</wp:post_date>
		<wp:post_date_gmt>2012-07-18 17:10:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>1742</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="def"><![CDATA[def]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[1626]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>用perl操作Clustalw进行多序列比对</title>
		<link>http://128.192.66.53/wordpress/?p=44</link>
		<pubDate>Thu, 17 Feb 2011 22:43:17 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=44</guid>
		<description></description>
		<content:encoded><![CDATA[#multiple sequences alignment (using Clustalw)

Windows下用perl来操作ClustalW进行多序列比对并读取分析其结果
首先要下载clustalw
<a href="ftp://ftp.ebi.ac.uk/pub/software/clustalw2/2.0.11/clustalw-2.0.11-win.msi">ftp://ftp.ebi.ac.uk/pub/software/clustalw2/2.0.11/clustalw-2.0.11-win.msi</a>
安装后，可以直接运行，通过命令行格式的输入来进行多序列比对，具体实现过程可参见其帮助文件。
这里重点描述在windows下，如何用perl来操作ClustalW。
代码如下

<script src="https://gist.github.com/4165117.js?file=run_clustalw.pl"></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2011-02-17 17:43:17</wp:post_date>
		<wp:post_date_gmt>2011-02-17 22:43:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>perl-clustalw</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="clusterw"><![CDATA[ClusterW]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1567]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:1;a:4:{s:2:"ID";s:3:"346";s:10:"post_title";s:45:"KEGG: Kyoto Encyclopedia of Genes and Genomes";s:7:"matches";s:1:"2";s:9:"permalink";s:44:"http://128.192.66.53/wordpress/2011/04/kegg/";}i:2;a:4:{s:2:"ID";s:3:"343";s:10:"post_title";s:8:"InterPro";s:7:"matches";s:1:"2";s:9:"permalink";s:48:"http://128.192.66.53/wordpress/2011/04/interpro/";}i:3;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:15:"parse gff3 file";s:7:"matches";s:1:"2";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/03/parse-gff3-file/";}i:4;a:4:{s:2:"ID";s:2:"50";s:10:"post_title";s:50:"windows下用perl操作bl2seq进行两序列比对";s:7:"matches";s:1:"2";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/02/perl-bl2seq/";}i:5;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:11:"本地blast";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/02/windows-perl-blast/";}i:6;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:7;a:4:{s:2:"ID";s:3:"524";s:10:"post_title";s:61:"perl脚本提取BLAST结果中的信息【以tblastn为例】";s:7:"matches";s:1:"1";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/08/parse-blast/";}i:8;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"1";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:9;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>161</wp:comment_id>
			<wp:comment_author><![CDATA[paul]]></wp:comment_author>
			<wp:comment_author_email>zhandong.sun@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.125.116.111</wp:comment_author_IP>
			<wp:comment_date>2011-07-26 12:14:54</wp:comment_date>
			<wp:comment_date_gmt>2011-07-26 16:14:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[你好，我想请问你，对于用perl操作Clustalw进行多序列比对的问题，我操作了，但是实现不了。在第二句，报错，请问为什么？希望你能够帮我解决，十分感谢！！！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1311696894.37";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1311713634.94";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.53</wp:comment_author_IP>
			<wp:comment_date>2011-07-26 16:54:16</wp:comment_date>
			<wp:comment_date_gmt>2011-07-26 20:54:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[错误信息是什么？]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>161</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1311713656.04";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>167</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.53</wp:comment_author_IP>
			<wp:comment_date>2011-07-26 17:08:57</wp:comment_date>
			<wp:comment_date_gmt>2011-07-26 21:08:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[可能是路径不对。是你自己机子上的Clustalw的安装路径。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>161</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1311714537.32";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>windows下用perl操作bl2seq进行两序列比对</title>
		<link>http://128.192.66.53/wordpress/?p=50</link>
		<pubDate>Thu, 17 Feb 2011 22:49:18 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=50</guid>
		<description></description>
		<content:encoded><![CDATA[<script src="https://gist.github.com/4165157.js?file=run_bl2seq.pl"></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2011-02-17 17:49:18</wp:post_date>
		<wp:post_date_gmt>2011-02-17 22:49:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>perl-bl2seq</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bl2seq"><![CDATA[Bl2seq]]></category>
		<category domain="post_tag" nicename="blast"><![CDATA[Blast]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[637]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:11:"本地blast";s:7:"matches";s:1:"3";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/02/windows-perl-blast/";}i:1;a:4:{s:2:"ID";s:3:"524";s:10:"post_title";s:61:"perl脚本提取BLAST结果中的信息【以tblastn为例】";s:7:"matches";s:1:"2";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/08/parse-blast/";}i:2;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:3;a:4:{s:2:"ID";s:3:"346";s:10:"post_title";s:45:"KEGG: Kyoto Encyclopedia of Genes and Genomes";s:7:"matches";s:1:"2";s:9:"permalink";s:44:"http://128.192.66.53/wordpress/2011/04/kegg/";}i:4;a:4:{s:2:"ID";s:3:"343";s:10:"post_title";s:8:"InterPro";s:7:"matches";s:1:"2";s:9:"permalink";s:48:"http://128.192.66.53/wordpress/2011/04/interpro/";}i:5;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"2";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:6;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:15:"parse gff3 file";s:7:"matches";s:1:"2";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/03/parse-gff3-file/";}i:7;a:4:{s:2:"ID";s:2:"44";s:10:"post_title";s:42:"用perl操作Clustalw进行多序列比对";s:7:"matches";s:1:"2";s:9:"permalink";s:53:"http://128.192.66.53/wordpress/2011/02/perl-clustalw/";}i:8;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:9;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"1";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Introduction to Using PBS</title>
		<link>http://128.192.66.53/wordpress/?p=54</link>
		<pubDate>Fri, 18 Feb 2011 01:02:11 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=54</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction to Using PBS</h1>
<h2>Introduction</h2>
PBS is the batch scheduler running on the Sun Opteron cluster, midnight. Unlike interactive jobs, batch jobs are controlled via scripts. These scripts tell the system which resources a job will require and how long they will be needed.
<h2>Command Interface to PBS</h2>
Frequently used PBS commands:
<blockquote>
<table border="1" cellspacing="0" cellpadding="5" width="540">
<tbody>
<tr>
<th>Command</th>
<th>Purpose</th>
</tr>
<tr>
<th>qmap</th>
<td>Displays a grid of current jobs along with a list of queued and running jobs.(<strong>ARSC Only</strong>) (see <code>qmap -h</code> for additional job and queue information)</td>
</tr>
<tr>
<th>qsub</th>
<td>Submits a job to the PBS batch scheduler. (see also <code>man qsub</code>)</td>
</tr>
<tr>
<th>qdel</th>
<td>Removes a job from the queue. This includes all running, waiting, and held jobs.(also see <code>man qdel</code>)</td>
</tr>
<tr>
<th>qstat -f</th>
<td>Displays more information about a particular job (also see <code>man qstat</code>)</td>
</tr>
</tbody>
</table>
</blockquote>
<h2>Queues</h2>
A user's job is submitted to the queue with the "qsub" command. The user must be certain that the specific resources requested (such as number of nodes and walltime hours) are within the ranges offered by the particular queue.

The command "qmap -r" shows the names of the queues available and their maximum walltimes. For a more verbose narrative on queue usage, type the following at the command prompt:

<tt>news queues</tt>
<h2>Submitting Jobs to PBS</h2>
The command:

<tt>qsub &lt;PBS script&gt;</tt>

will submit the given script for processing. The script contains information PBS needs to allocate resources for your job, directions for handling standard I/O streams, and instructions to run the job. Example scripts are included below .
<h2>Running Interactive Jobs</h2>
You are encouraged to use the PBS batch system, but may run interactive jobs as well. An interactive command is simply typed at the prompt in a terminal window. Standard error and standard output are printed to the terminal, redirected to a file, or piped to another command using appropriate Unix shell syntax.

You can spawn an interactive job using the following command:

<tt>qsub -q debug -l select=1:ncpus=4:node_type=4way -I</tt>

Once your job is started, you may then run interactive commands on the compute node(s) PBS assigned to your session.
<h2>Monitoring Queues and Requests</h2>
The command:

<tt>qmap</tt>

will show all jobs currently running or queued on the system. For details about your particular jobs, issue the command:

<tt>qmap -u &lt;user name&gt;</tt>
<h2>Canceling Queued and Running Jobs</h2>
The command:

<tt>qdel &lt;job id&gt;</tt>

where &lt;job id&gt; is obtained from the "Job Id" field of the qmap output. This command will remove the job from the queue and terminate the job if it is running.
<h2>Example Scripts</h2>
<blockquote>
<h3>Example #1 MPI using Sun Fire x2200 nodes (4way nodes)</h3>
<pre>#!/bin/bash
#PBS -q standard
#PBS -l select=8:ncpus=4:node_type=4way
#PBS -l walltime=08:00:00
#PBS -j oe

cd $PBS_O_WORKDIR

mpirun -np 32 ./myprog</pre>
Here is a line-by-line breakdown of the keywords and their assigned values listed in this MPI script:

<dl> <dt><tt>#!/bin/bash</tt></dt> <dd>Specifies the shell to be used when executing the command portion of the script. </dd> <dt><tt>#PBS -q standard</tt> </dt> <dd>Specifies which queue the job will be submitted to. </dd> <dt><tt>#PBS -l select=8:ncpus=4:node_type=4way</tt></dt> <dd>Requests 8 "blocks" of 4 processors on x2200 nodes. You can also think of this as requesting 8 nodes, running 4 tasks on each of those nodes, with the nodes being 4way (i.e. x2200) only. </dd> <dt><tt>#PBS -l walltime=08:00:00</tt></dt> <dd>Requests that the running job be allowed to run for a maximum of 8 hours. </dd> <dt><tt>#PBS -j oe</tt></dt> <dd>Joins the output and error files. </dd> <dt><tt>cd $PBS_O_WORKDIR</tt></dt> <dd>Change to the initial working directory. </dd> <dt><tt>mpirun -np 32 ./myprog</tt></dt> <dd> </dd> <dd>Runs the mpi program with a total of 32 tasks.</dd> </dl>
<h3>Example #2 OpenMP using Sun Fire x4600 nodes (16way nodes)</h3>
<pre>#!/bin/bash
#PBS -q standard
#PBS -l select=1:ncpus=16:node_type=16way
#PBS -l walltime=08:00:00
#PBS -j oe

cd $PBS_O_WORKDIR
export OMP_NUM_THREADS=16
export PSC_OMP_AFFINITY=TRUE

./myprog</pre>
Here is a line-by-line breakdown of the example OpenMP script:

<dl> <dt><tt>#!/bin/bash</tt></dt> <dd>Specifies the shell to be used when executing the command portion of the script. </dd> <dt><tt>#PBS -q standard</tt> </dt> <dd>Specifies which queue the job will be submitted to. </dd> <dt><tt>#PBS -l select=1:ncpus=16:node_type=16way</tt></dt> <dd>Requests 1"block" of 16 processors on an x4600 node. You can also think of this as requesting 1 node, running 16 tasks on the node, with the node being 16way. </dd> <dt><tt>#PBS -l walltime=08:00:00</tt></dt> <dd>Requests that the running job be allowed to run for a maximum of 8 hours. </dd> <dt><tt>#PBS -j oe</tt></dt> <dd>Joins the output and error files. </dd> <dt><tt>cd $PBS_O_WORKDIR</tt></dt> <dd>Change to the initial working directory. </dd> <dt><tt></tt></dt> <dt><tt>export OMP_NUM_THREADS=16</tt></dt> <dd>Sets the number of OpenMP threads to 16. </dd> <dt><tt>export PSC_OMP_AFFINITY=TRUE</tt></dt> <dd>Sets the threads to have CPU affinity. </dd> <dt><tt>./myprog</tt></dt> <dd>Runs the OpenMP program. </dd> <dt> </dt> </dl>
<h3>Example #3 Data Staging Script</h3>
<pre>#!/bin/bash
#PBS -q transfer
#PBS -l select=1:ncpus=1
#PBS -l walltime=04:00:00
#PBS -j oe

cd $PBS_O_WORKDIR

cp -r $ARCHIVE_HOME/mydataset/* . || exit 1

qsub mpi_job.pbs</pre>
Here is a line-by-line breakdown of the keywords and their assigned values listed in this data staging script:

<dl> <dt><tt>#!/bin/bash</tt></dt> <dd>Specifies the shell to be used when executing the command portion of the script. </dd> <dt><tt>#PBS -q transfer</tt> </dt> <dd>Specifies to run a job in the transfer queue. </dd> <dt><tt>#PBS -l select=1:ncpus=1</tt></dt> <dd>Requests 1 node to run 1 process in the queue. Data transfer jobs must be run in serial. </dd> <dt><tt>#PBS -l walltime=04:00:00</tt></dt> <dd>Requests that the running job be allowed to run for a maximum of 4 hours. </dd> <dt><tt>#PBS -j oe</tt></dt> <dd>Joins the output and error files. </dd> <dt><tt>cd $PBS_O_WORKDIR</tt></dt> <dd>Change to the initial working directory. </dd> <dt><tt>cp -r $ARCHIVE_HOME/mydataset/* . || exit 1</tt></dt> <dd> </dd> <dd>Copies files from long term storage to the current working directory.</dd> </dl> <dl> <dt><tt>qsub mpi_job.pbs</tt></dt> <dd> </dd> <dd>Submits a new job to the batch scheduler once the data transfer is complete.</dd> </dl></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2011-02-17 20:02:11</wp:post_date>
		<wp:post_date_gmt>2011-02-18 01:02:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>introduction-to-using-pbs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cluster"><![CDATA[Cluster]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="mpi"><![CDATA[MPI]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="pbs"><![CDATA[PBS]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[724]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:1;a:4:{s:2:"ID";s:3:"382";s:10:"post_title";s:27:"Fedora下配置VNC服务器";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://128.192.66.53/wordpress/2011/04/fedora-vncserver/";}i:2;a:4:{s:2:"ID";s:3:"331";s:10:"post_title";s:59:"google.pl - command line google search in a shell with perl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/04/google-search-perl/";}i:3;a:4:{s:2:"ID";s:3:"324";s:10:"post_title";s:23:"MySql常用命令总结";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/mysql-common-command/";}i:4;a:4:{s:2:"ID";s:3:"321";s:10:"post_title";s:30:"linux 查看系统信息命令";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/linux-system-command/";}i:5;a:4:{s:2:"ID";s:3:"291";s:10:"post_title";s:36:"MCL - a cluster algorithm for graphs";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://128.192.66.53/wordpress/2011/03/mcl-a-cluster-algorithm-for-graphs/";}i:6;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:42:"ubuntu下终端路径只显示当前目录";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://128.192.66.53/wordpress/2011/03/ubuntu-terminal-directory/";}i:7;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:50:"useful, essential and most often used Vim commands";s:7:"matches";s:1:"1";s:9:"permalink";s:52:"http://128.192.66.53/wordpress/2011/03/vim-commands/";}i:8;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"1";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}i:9;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"1";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Words of food 几乎所有食物的英文翻译</title>
		<link>http://128.192.66.53/wordpress/?p=56</link>
		<pubDate>Fri, 18 Feb 2011 01:04:06 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=56</guid>
		<description></description>
		<content:encoded><![CDATA[水果类（fruits）：

西红柿tomato 菠萝pineapple 西瓜watermelon 香蕉banana 柚子shaddock（pomelo） 橙子orange 苹果apple 柠檬lemon 樱桃cherry 桃子peach 梨pear 枣Chinese date （去核枣 pitted date ） 椰子coconut  草莓strawberry 树莓raspberry 蓝莓blueberry 黑莓blackberry 葡萄grape 甘蔗sugar cane 芒果mango 木瓜 pawpaw或者papaya 杏子apricot 油桃nectarine 柿子persimmon 石榴pomegranate 榴莲jackfruit 槟榔果areca nut （西班牙产苦橙）bitter orange 猕猴桃kiwi fruit or Chinese gooseberry 金橘cumquat 蟠桃flat peach 荔枝litchi 青梅greengage 山楂果haw 水蜜桃honey peach 香瓜，甜瓜musk melon 李子plum 杨梅waxberry red bayberry 桂圆longan 沙果crab apple  杨桃starfruit 枇杷loquat 柑橘tangerine 莲雾wax-apple  番石榴guava

肉、蔬菜类（livestock家畜）：

南瓜（倭瓜）pumpkin cushaw 甜玉米Sweet corn 牛肉beef 猪肉pork 羊肉mutton 羔羊肉lamb 鸡肉chicken 生菜 莴苣lettuce 白菜Chinese cabbage （celery cabbage）（甘蓝）卷心菜cabbage 萝卜radish 胡萝卜carrot 韭菜leek 木耳agarics 豌豆pea 马铃薯（土豆）potato 黄瓜cucumber 苦瓜balsam pear 秋葵okra 洋葱onion 芹菜celery 芹菜杆celery sticks 地瓜sweet potato 蘑菇mushroom 橄榄olive 菠菜spinach 冬瓜（Chinese）wax gourd 莲藕lotus root 紫菜laver 油菜cole rape 茄子eggplant 香菜caraway 枇杷loquat 青椒green pepper 四季豆 青刀豆garden bean 银耳silvery fungi 腱子肉tendon 肘子pork joint 茴香fennel（茴香油fennel oil 药用） 鲤鱼carp 咸猪肉bacon 金针蘑needle mushroom 扁豆lentil 槟榔areca 牛蒡great burdock 水萝卜summer radish 竹笋bamboo shoot 艾蒿Chinese mugwort 绿豆mung bean 毛豆green soy bean 瘦肉lean meat 肥肉speck 黄花菜day lily （day lily bud） 豆芽菜bean sprout 丝瓜towel gourd (注：在美国丝瓜或用来做丝瓜茎loofah洗澡的，不是食用的)

海鲜类（sea food）：

虾仁Peeled Prawns 龙虾lobster 小龙虾crayfish（退缩者） 蟹crab 蟹足crab claws 小虾（虾米）shrimp 对虾、大虾prawn （烤）鱿鱼（toast）squid 海参sea cucumber 扇贝scallop 鲍鱼sea-ear abalone 小贝肉cockles 牡蛎oyster 鱼鳞scale 海蜇jellyfish鳖 海龟turtle 蚬蛤clam 鲅鱼culter 鲳鱼butterfish 虾籽shrimp egg 鲢鱼 银鲤鱼chub silver carp 黄花鱼yellow croaker

调料类（seasonings）：

醋vinegar 酱油soy 盐salt 加碘盐iodized salt 糖sugar 白糖refined sugar 酱soy sauce 沙拉salad 辣椒hot（red）pepper 胡椒 （black）pepper 花椒wild pepper Chinese prickly ash powder 色拉油salad oil 调料fixing sauce seasoning 砂糖granulated sugar 红糖brown sugar 冰糖Rock Sugar 芝麻Sesame 芝麻酱Sesame paste 芝麻油Sesame oil 咖喱粉curry 番茄酱（汁）ketchup redeye 辣根horseradish 葱shallot （Spring onions） 姜ginger 蒜garlic 料酒cooking wine 蚝油oyster sauce 枸杞（枇杷,欧查果 ）medlar 八角aniseed 酵母粉yeast barm Yellow pepper 黄椒 肉桂cinnamon (在美国十分受欢迎，很多事物都有肉桂料) 黄油butter 香草精vanilla extract(甜点必备) 面粉flour 洋葱onion

主食类（staple food）：

三文治sandwich 米饭rice 粥congee （rice soup） 汤soup 饺子dumpling 面条noodle 比萨饼pizza 方便面instant noodle 香肠sausage 面包bread 黄油 （白塔油）butter 茶叶蛋Tea eggs 油菜rape 饼干cookies 咸菜（泡菜）pickle 馒头steamed bread 饼（蛋糕）cake 汉堡hamburger 火腿ham 奶酪cheese 馄饨皮wonton skin 高筋面粉Strong flour 小麦wheat 大麦barley 青稞highland barley 高粱broomcorn （kaoliang ）春卷Spring rolls 芋头Taro 山药yam 鱼翅shark fin 黄花daylily 松花蛋 皮蛋preserved eggs 春卷spring roll 肉馅饼minced pie 糙米Brown rice 玉米corn 馅儿stuffing 开胃菜appetizer 面粉flour 燕麦oat 白薯 甘薯sweet potato 牛排steak 里脊肉fillet 凉粉bean jelly 糯米 江米sticky rice 燕窝bird's nest 粟Chinese corn 肉丸子meat balls 枳橙citrange 点心（中式）dim sum 淀粉starch 蛋挞egg tart

干果类（dry fruits） ：

腰果Cashew nuts 花生peanut 无花果fig 榛子filbert hazel 栗子chestnut 核桃walnut 杏仁almond 果脯preserved fruit 芋头taro 葡萄干raisin cordial 开心果pistachion 巴西果brazil nut 菱角,荸荠water chestnut (和国内食用法不同，做坚果食用)

酒水类（beverage）：

红酒red wine 白酒white wine 白兰地brandy 葡萄酒sherry 汽水(软饮料)soda （盐）汽水sparkling water 果汁juice 冰棒Ice-lolly 啤酒beer 酸奶yoghurt 伏特加酒vodka 鸡尾酒cocktail 豆奶soy milk 豆浆soybean milk 七喜 7 UP 麒麟（日本啤酒kirin） 凉开水cold boiled water 汉斯啤酒Hans beer 浓缩果汁concentrated juice 冰镇啤酒iced(chilled ) beer 札幌（日本啤酒）Sapporo 爱尔啤酒（美国）ale A级牛奶grand A milk 班图酒bantu beer 半干雪利dry sark 参水牛奶blue milk 日本粗茶bancha 生啤酒draft beer 白啤酒white beer 大麦酒barley-bree 咖啡伴侣coffee mate

零食类（snack）:

薄荷糖mint 薄脆饼干cracker 饼干biscuit 棒棒糖bonbon 茶tea（沏茶 make the tea） 话梅prune candied plum 锅巴rice crust 瓜子melon seed 冰棒（冰果）ice（frozen） sucker 冰淇凌ice cream 防腐剂preservative 圣代冰淇淋sundae 巧克力豆marble chocolate barley 布丁pudding

与食品有关的词语（some words about food）:

炸fired 炝quick boiled 烩braise（烩牛舌 braised ox tongue） 烤roast 饱嗝burp 饱了 饱的full stuffed 解渴quench thirst （形容食物变坏spoil spoilage） 防腐剂preservative 产品有效期expiration date （形容酒品好： a good strong brew 绝味酿 ）

应各位要求补充的中式西式食物

中式早點：

烧饼Clay oven rolls 油条Fried bread stick 韭菜盒Fried leek dumplings 水饺Boiled dumplings 蒸饺Steamed dumplings 馒头Steamed buns 割包Steamed sandwich 饭团Rice and vegetable roll 蛋饼Egg cakes 皮蛋100-year egg 咸鸭蛋Salted duck egg 豆浆Soybean milk

饭 类：

稀饭Rice porridge 白饭Plain white rice 油饭Glutinous oil rice 糯米饭Glutinous rice 卤肉饭Braised pork rice  蛋炒饭Fried rice with egg 地瓜粥Sweet potato congee

面 类：

馄饨面Wonton noodles 刀削面Sliced noodles 麻辣面Spicy hot noodles 麻酱面Sesame paste noodles 鴨肉面Duck with noodles  鱔魚面Eel noodles 乌龙面Seafood noodles 榨菜肉丝面Pork , pickled mustard green noodles 牡蛎细面Oyster thin noodles 板条Flat noodles 米粉Rice noodles 炒米粉Fried rice noodles 冬粉Green bean noodle

汤 类：

鱼丸汤Fish ball soup 貢丸汤Meat ball soup 蛋花汤Egg &amp; vegetable soup 蛤蜊汤Clams soup 牡蛎汤Oyster soup 紫菜汤Seaweed soup 酸辣汤Sweet sour soup 馄饨汤Wonton soup 猪肠汤Pork intestine soup 肉羹汤Pork thick soup 鱿鱼汤Squid soup 花枝羹Squid thick soup

中餐：

bear's paw熊掌 * of deer鹿脯 beche-de-mer; sea cucumber海参 sea sturgeon海鳝 salted jelly fish海蜇皮kelp,seaweed 海带 abalone鲍鱼shark fin鱼翅scallops干贝lobster龙虾 bird's nest 燕窝 roast suckling pig 考乳猪pig's knuckle 猪脚 boiled salted duck 盐水鸭 preserved meat腊肉 barbecued pork 叉烧 sausage 香肠 fried pork flakes 肉松 BAR-B-Q 烤肉meat diet 荤菜 vegetables 素菜 meat broth 肉羹 local dish 地方菜 Cantonese cuisine 广东菜 set meal 客饭 curry rice 咖喱饭fried rice 炒饭 plain rice 白饭 crispy rice 锅巴gruel, soft rice , porridge 粥 —noodles with gravy 打卤面plain noodle 阳春面 casserole 砂锅 chafing dish,fire pot火锅 meat bun肉包子shao-mai烧麦preserved bean curd 腐乳bean curd 豆腐fermented blank bean 豆豉 pickled cucumbers 酱瓜preserved egg 皮蛋 salted duck egg 咸鸭蛋 dried turnip 萝卜干

西餐与日本料理：

menu菜单 French cuisine法国菜 today's special 今日特餐 chef's special 主厨特餐 buffet 自助餐 fast food 快餐 specialty 招牌菜 continental cuisine 欧式西餐 aperitif 饭前酒 dim sum 点心 French fires炸薯条baked potato烘马铃薯 mashed potatoes马铃薯泥omelette 简蛋卷 pudding 布丁 pastries 甜点 pickled vegetables 泡菜 kimchi 韩国泡菜 crab meat 蟹肉 prawn 明虾 conch 海螺 escargots 田螺braised beef 炖牛肉 bacon 熏肉 poached egg 荷包蛋 sunny side up 煎一面荷包蛋 over 煎两面荷包蛋 fried egg 煎蛋over easy 煎半熟蛋 over hard 煎全熟蛋 scramble eggs 炒蛋boiled egg 煮蛋 stone fire pot 石头火锅 sashi 日本竹筷 sake 日本米酒miso shiru 味噌汤 roast meat 铁板烤肉 sashimi 生鱼片 butter 奶油]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2011-02-17 20:04:06</wp:post_date>
		<wp:post_date_gmt>2011-02-18 01:04:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>words-of-food-translate</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="food"><![CDATA[Food]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[words-of-food-%e5%87%a0%e4%b9%8e%e6%89%80%e6%9c%89%e9%a3%9f%e7%89%a9%e7%9a%84%e8%8b%b1%e6%96%87%e7%bf%bb%e8%af%91]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[876]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Software packages for next generation sequence analysis (from seqanswers.com)</title>
		<link>http://128.192.66.53/wordpress/?p=58</link>
		<pubDate>Fri, 18 Feb 2011 01:08:20 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=58</guid>
		<description></description>
		<content:encoded><![CDATA[Thank those guys on seqanswers.com

<span style="text-decoration:underline;"><strong>A reasonably thorough table of next-gen-seq software available in the commercial and public domain</strong></span>

<strong>Integrated solutions</strong>
* <a href="http://www.clcbio.com/index.php?id=1240" target="_blank">CLCbio Genomics Workbench</a> - <em>de novo</em> and reference assembly of Sanger, Roche FLX, Illumina, Helicos, and SOLiD data. Commercial next-gen-seq software that extends the CLCbio Main Workbench software. Includes SNP detection, CHiP-seq, browser and other features. Commercial. Windows, Mac OS X and Linux.
* <a href="http://g2.trac.bx.psu.edu/" target="_blank">Galaxy</a> - Galaxy = interactive and reproducible genomics. A job webportal.
* <a href="http://www.genomatix.de/products/index.html" target="_blank">Genomatix</a> - Integrated Solutions for Next Generation Sequencing data analysis.
* <a href="http://www.jmp.com/software/genomics/" target="_blank">JMP Genomics</a> - Next gen visualization and statistics tool from SAS. They are <a href="http://www.marketwatch.com/news/story/JMPR-Genomics-NCGR-Partnership-Foster/story.aspx?guid=%7B7AC9DE36-B6AA-4EDE-9CD5-633B29FE6154%7D" target="_blank">working with NCGR</a> to refine this tool and produce others.
* <a href="http://softgenetics.com/NextGENe.html" target="_blank">NextGENe</a> - <em>de novo</em> and reference assembly of Illumina, SOLiD and Roche FLX data. Uses a novel Condensation Assembly Tool approach where reads are joined via "anchors" into mini-contigs before assembly. Includes SNP detection, CHiP-seq, browser and other features. Commercial. Win or MacOS.
* <a href="http://www.dnastar.com/products/SMGA.php" target="_blank">SeqMan Genome Analyser</a> - Software for Next Generation sequence assembly of Illumina, Roche FLX and Sanger data integrating with Lasergene Sequence Analysis software for additional analysis and visualization capabilities. Can use a hybrid templated/de novo approach. Commercial. Win or Mac OS X.
* <a href="http://1001genomes.org/downloads/shore.html" target="_blank">SHORE</a> - SHORE, for Short Read, is a mapping and analysis pipeline for short DNA sequences produced on a Illumina Genome Analyzer. A suite created by the 1001 Genomes project. Source for POSIX.
* <a href="http://www.realtimegenomics.com/" target="_blank">SlimSearch</a> - Fledgling commercial product.

<strong>Align/Assemble to a reference</strong>
* <a href="https://secure.genome.ucla.edu/index.php/BFAST" target="_blank">BFAST</a> - Blat-like Fast Accurate Search Tool. Written by Nils Homer, Stanley F. Nelson and Barry Merriman at UCLA.
* <a href="http://bowtie-bio.sourceforge.net/" target="_blank">Bowtie</a> - Ultrafast, memory-efficient short read aligner. It aligns short DNA sequences (reads) to the human genome at a rate of 25 million reads per hour on a typical workstation with 2 gigabytes of memory. Uses a Burrows-Wheeler-Transformed (BWT) index. <a href="http://seqanswers.com/forums/showthread.php?t=706" target="_blank">Link to discussion thread here</a>. Written by Ben Langmead and Cole Trapnell. Linux, Windows, and Mac OS X.
* <a href="http://maq.sourceforge.net/" target="_blank">BWA</a> - Heng Lee's BWT Alignment program - a progression from Maq. BWA is a fast light-weighted tool that aligns short sequences to a sequence database, such as the human reference genome. By default, BWA finds an alignment within edit distance 2 to the query sequence. C++ source.
* <a href="http://bioinfo.cgrb.oregonstate.edu/docs/solexa/" target="_blank">ELAND</a> - Efficient Large-Scale Alignment of Nucleotide Databases. Whole genome alignments to a reference genome. Written by Illumina author Anthony J. Cox for the Solexa 1G machine.
* <a href="http://www.ebi.ac.uk/~guy/exonerate/" target="_blank">Exonerate</a> - Various forms of pairwise alignment (including Smith-Waterman-Gotoh) of DNA/protein against a reference. Authors are Guy St C Slater and Ewan Birney from EMBL. C for POSIX.
* <a href="http://1001genomes.org/downloads/genomemapper.html" target="_blank">GenomeMapper</a> - GenomeMapper is a short read mapping tool designed for accurate read alignments. It quickly aligns millions of reads either with ungapped or gapped alignments. A tool created by the 1001 Genomes project. Source for POSIX.
* <a href="http://www.gene.com/share/gmap/" target="_blank">GMAP</a> - GMAP (Genomic Mapping and Alignment Program) for mRNA and EST Sequences. Developed by Thomas Wu and Colin Watanabe at Genentec. C/Perl for Unix.
* <a href="http://dna.cs.byu.edu/gnumap/" target="_blank">gnumap</a> - The Genomic Next-generation Universal MAPper (gnumap) is a program designed to accurately map sequence data obtained from next-generation sequencing machines (specifically that of Solexa/Illumina) back to a genome of any size. It seeks to align reads from nonunique repeats using statistics. From authors at Brigham Young University. C source/Unix.
* <a href="http://sourceforge.net/projects/maq/" target="_blank">MAQ</a> - Mapping and Assembly with Qualities (renamed from MAPASS2). Particularly designed for Illumina with preliminary functions to handle ABI SOLiD data. Written by Heng Li from the Sanger Centre. Features extensive supporting tools for DIP/SNP detection, etc. C++ source
* <a href="http://bioinformatics.bc.edu/marthlab/Mosaik" target="_blank">MOSAIK</a> - MOSAIK produces gapped alignments using the Smith-Waterman algorithm. Features a number of support tools. Support for Roche FLX, Illumina, SOLiD, and Helicos. Written by Michael Strömberg at Boston College. Win/Linux/MacOSX
* <a href="http://mrfast.sourceforge.net/" target="_blank">MrFAST and MrsFAST</a> - mrFAST &amp; mrsFAST are designed to map short reads generated with the Illumina platform to reference genome assemblies; in a fast and memory-efficient manner. Robust to INDELs and MrsFAST has a bisulphite mode. Authors are from the University of Washington. C as source.
* <a href="http://mummer.sourceforge.net/" target="_blank">MUMmer</a> - MUMmer is a modular system for the rapid whole genome alignment of finished or draft sequence. Released as a package providing an efficient suffix tree library, seed-and-extend alignment, SNP detection, repeat detection, and visualization tools. Version 3.0 was developed by Stefan Kurtz, Adam Phillippy, Arthur L Delcher, Michael Smoot, Martin Shumway, Corina Antonescu and Steven L Salzberg - most of whom are at The Institute for Genomic Research in Maryland, USA. POSIX OS required.
* <a href="http://www.novocraft.com/index.html" target="_blank">Novocraft</a> - Tools for reference alignment of paired-end and single-end Illumina reads. Uses a Needleman-Wunsch algorithm. Can support Bis-Seq. Commercial. Available free for evaluation, educational use and for use on open not-for-profit projects. Requires Linux or Mac OS X.
* <a href="http://pass.cribi.unipd.it/cgi-bin/pass.pl" target="_blank">PASS</a> - It supports Illumina, SOLiD and Roche-FLX data formats and allows the user to modulate very finely the sensitivity of the alignments. Spaced seed intial filter, then NW dynamic algorithm to a SW(like) local alignment. Authors are from CRIBI in Italy. Win/Linux.
* <a href="http://rulai.cshl.edu/rmap/" target="_blank">RMAP</a> - Assembles 20 - 64 bp Illumina reads to a FASTA reference genome. By Andrew D. Smith and Zhenyu Xuan at CSHL. (published in BMC Bioinformatics). POSIX OS required.
* <a href="http://biogibbs.stanford.edu/~jiangh/SeqMap/" target="_blank">SeqMap</a> - Supports up to 5 or more bp mismatches/INDELs. Highly tunable. Written by Hui Jiang from the Wong lab at Stanford. Builds available for most OS's.
* <a href="http://compbio.cs.toronto.edu/shrimp/" target="_blank">SHRiMP</a> - Assembles to a reference sequence. Developed with Applied Biosystem's colourspace genomic representation in mind. Authors are Michael Brudno and Stephen Rumble at the University of Toronto. POSIX.
* <a href="http://www.bcgsc.ca/platform/bioinfo/software/slider" target="_blank"><span style="text-decoration:underline;">Slider</span></a>- An application for the Illumina Sequence Analyzer output that uses the probability files instead of the sequence files as an input for alignment to a reference sequence or a set of reference sequences. Authors are from BCGSC. Paper is <a href="http://seqanswers.com/forums/showthread.php?t=740" target="_blank">here</a>.
* <a href="http://soap.genomics.org.cn/" target="_blank">SOAP</a> - SOAP (Short Oligonucleotide Alignment Program). A program for efficient gapped and ungapped alignment of short oligonucleotides onto reference sequences. The updated version uses a BWT. Can call SNPs and INDELs. Author is Ruiqiang Li at the Beijing Genomics Institute. C++, POSIX.
* <a href="http://www.sanger.ac.uk/Software/analysis/SSAHA/" target="_blank">SSAHA</a> - SSAHA (Sequence Search and Alignment by Hashing Algorithm) is a tool for rapidly finding near exact matches in DNA or protein databases using a hash table. Developed at the Sanger Centre by Zemin Ning, Anthony Cox and James Mullikin. C++ for Linux/Alpha.
* <a href="http://socs.biology.gatech.edu/" target="_blank">SOCS</a> - Aligns SOLiD data. SOCS is built on an iterative variation of the Rabin-Karp string search algorithm, which uses hashing to reduce the set of possible matches, drastically increasing search speed. Authors are Ondov B, Varadarajan A, Passalacqua KD and Bergman NH.
* <a href="http://bibiserv.techfak.uni-bielefeld.de/swift/welcome.html" target="_blank">SWIFT</a> - The SWIFT suit is a software collection for fast index-based sequence comparison. It contains: SWIFT — fast local alignment search, guaranteeing to find epsilon-matches between two sequences. SWIFT BALSAM — a very fast program to find semiglobal non-gapped alignments based on k-mer seeds. Authors are Kim Rasmussen (SWIFT) and Wolfgang Gerlach (SWIFT BALSAM)
* <a href="http://synasite.mgrc.com.my:8080/sxog/NewSXOligoSearch.php" target="_blank">SXOligoSearch</a> - SXOligoSearch is a commercial platform offered by the Malaysian based <a href="http://www.synamatix.com/" target="_blank">Synamatix</a>. Will align Illumina reads against a range of Refseq RNA or NCBI genome builds for a number of organisms. Web Portal. OS independent.
* <a href="http://www.vmatch.de/" target="_blank">Vmatch</a> - A versatile software tool for efficiently solving large scale sequence matching tasks. Vmatch subsumes the software tool REPuter, but is much more general, with a very flexible user interface, and improved space and time requirements. Essentially a large string matching toolbox. POSIX.
* <a href="http://www.bioinformaticssolutions.com/products/zoom/index.php" target="_blank">Zoom</a> - ZOOM (Zillions Of Oligos Mapped) is designed to map millions of short reads, emerged by next-generation sequencing technology, back to the reference genomes, and carry out post-analysis. ZOOM is developed to be highly accurate, flexible, and user-friendly with speed being a critical priority. Commercial. Supports Illumina and SOLiD data.

<strong><em>De novo</em> Align/Assemble</strong>
* <a href="http://www.bcgsc.ca/platform/bioinfo/software/abyss" target="_blank">ABySS</a> - Assembly By Short Sequences. ABySS is a de novo sequence assembler that is designed for very short reads. The single-processor version is useful for assembling genomes up to 40-50 Mbases in size. The parallel version is implemented using MPI and is capable of assembling larger genomes. By Simpson JT and others at the Canada's Michael Smith Genome Sciences Centre. C++ as source.
* <a href="http://www.broad.mit.edu/science/programs/genome-biology/computational-rd/computational-research-and-development" target="_blank">ALLPATHS</a> - ALLPATHS: De novo assembly of whole-genome shotgun microreads. ALLPATHS is a whole genome shotgun assembler that can generate high quality assemblies from short reads. Assemblies are presented in a graph form that retains ambiguities, such as those arising from polymorphism, thereby providing information that has been absent from previous genome assemblies. Broad Institute.
* <a href="http://www.genomic.ch/edena.php" target="_blank">Edena</a> - Edena (Exact DE Novo Assembler) is an assembler dedicated to process the millions of very short reads produced by the Illumina Genome Analyzer. Edena is based on the traditional overlap layout paradigm. By D. Hernandez, P. François, L. Farinelli, M. Osteras, and J. Schrenzel. Linux/Win.
* <a href="http://euler-assembler.ucsd.edu/portal/" target="_blank">EULER-SR</a> - Short read <em>de novo</em> assembly. By Mark J. Chaisson and Pavel A. Pevzner from UCSD (published in Genome Research). Uses a de Bruijn graph approach.
* <a href="http://chevreux.org/projects_mira.html" target="_blank">MIRA2</a> - MIRA (Mimicking Intelligent Read Assembly) is able to perform true hybrid de-novo assemblies using reads gathered through 454 sequencing technology (GS20 or GS FLX). Compatible with 454, Solexa and Sanger data. Linux OS required.
* <a href="http://www.seqan.de/projects/consensus.html" target="_blank">SEQAN</a> - A Consistency-based Consensus Algorithm for De Novo and Reference-guided Sequence Assembly of Short Reads. By Tobias Rausch and others. C++, Linux/Win.
* <a href="http://sharcgs.molgen.mpg.de/" target="_blank">SHARCGS</a> - De novo assembly of short reads. Authors are Dohm JC, Lottaz C, Borodina T and Himmelbauer H. from the Max-Planck-Institute for Molecular Genetics.
* <a href="http://www.bcgsc.ca/platform/bioinfo/software/ssake" target="_blank">SSAKE</a> - The Short Sequence Assembly by K-mer search and 3' read Extension (SSAKE) is a genomics application for aggressively assembling millions of short nucleotide sequences by progressively searching for perfect 3'-most k-mers using a DNA prefix tree. Authors are René Warren, Granger Sutton, Steven Jones and Robert Holt from the Canada's Michael Smith Genome Sciences Centre. Perl/Linux.
* <a href="http://soap.genomics.org.cn/" target="_blank">SOAPdenovo</a> - Part of the SOAP suite. See above.
* <a href="https://sourceforge.net/projects/vcake" target="_blank">VCAKE</a> - De novo assembly of short reads with robust error correction. An improvement on early versions of SSAKE.
* <a href="http://www.ebi.ac.uk/~zerbino/velvet/" target="_blank">Velvet</a> - Velvet is a de novo genomic assembler specially designed for short read sequencing technologies, such as Solexa or 454. Need about 20-25X coverage and paired reads. Developed by Daniel Zerbino and Ewan Birney at the European Bioinformatics Institute (EMBL-EBI).

<strong>SNP/Indel Discovery</strong>
* <a href="http://www.sanger.ac.uk/Software/analysis/ssahaSNP/" target="_blank">ssahaSNP</a> - ssahaSNP is a polymorphism detection tool. It detects homozygous SNPs and indels by aligning shotgun reads to the finished genome sequence. Highly repetitive elements are filtered out by ignoring those kmer words with high occurrence numbers. More tuned for ABI Sanger reads. Developers are Adam Spargo and Zemin Ning from the Sanger Centre. Compaq Alpha, Linux-64, Linux-32, Solaris and Mac
* <a href="http://bioinformatics.bc.edu/marthlab/PbShort" target="_blank">PolyBayesShort</a> - A re-incarnation of the PolyBayes SNP discovery tool developed by Gabor Marth at Washington University. This version is specifically optimized for the analysis of large numbers (millions) of high-throughput next-generation sequencer reads, aligned to whole chromosomes of model organism or mammalian genomes. Developers at Boston College. Linux-64 and Linux-32.
* <a href="http://bioinformatics.bc.edu/marthlab/PyroBayes" target="_blank">PyroBayes</a> - PyroBayes is a novel base caller for pyrosequences from the 454 Life Sciences sequencing machines. It was designed to assign more accurate base quality estimates to the 454 pyrosequences. Developers at Boston College.

<strong>Genome Annotation/Genome Browser/Alignment Viewer/Assembly Database</strong>
* <a href="http://bioinformatics.bc.edu/marthlab/EagleView" target="_blank">EagleView</a> - An information-rich genome assembler viewer. EagleView can display a dozen different types of information including base quality and flowgram signal. Developers at Boston College.
* <a href="http://www.sanger.ac.uk/Software/analysis/lookseq/" target="_blank">LookSeq</a> - LookSeq is a web-based application for alignment visualization, browsing and analysis of genome sequence data. LookSeq supports multiple sequencing technologies, alignment sources, and viewing modes; low or high-depth read pileups; and easy visualization of putative single nucleotide and structural variation. From the Sanger Centre.
* <a href="http://evolution.sysu.edu.cn/mapview/" target="_blank">MapView</a> - MapView: visualization of short reads alignment on desktop computer. From the Evolutionary Genomics Lab at Sun-Yat Sen University, China. Linux.
* <a href="http://www.bcgsc.ca/platform/bioinfo/software/sam" target="_blank">SAM</a> - Sequence Assembly Manager. Whole Genome Assembly (WGA) Management and Visualization Tool. It provides a generic platform for manipulating, analyzing and viewing WGA data, regardless of input type. Developers are Rene Warren, Yaron Butterfield, Asim Siddiqui and Steven Jones at Canada's Michael Smith Genome Sciences Centre. MySQL backend and Perl-CGI web-based frontend/Linux.
* <a href="http://staden.sourceforge.net/" target="_blank">STADEN</a> - Includes GAP4. GAP5 once completed will handle next-gen sequencing data. A partially implemented test version is available <a href="https://sourceforge.net/project/show...kage_id=256957" target="_blank">here</a>
* <a href="http://www.bcgsc.ca/platform/bioinfo/software/xmatchview" target="_blank">XMatchView</a> - A visual tool for analyzing cross_match alignments. Developed by Rene Warren and Steven Jones at Canada's Michael Smith Genome Sciences Centre. Python/Win or Linux.

<strong>Counting e.g. CHiP-Seq, Bis-Seq, CNV-Seq</strong>
* <a href="http://epigenomics.mcdb.ucla.edu/BS-Seq/download.html" target="_blank">BS-Seq</a> - The source code and data for the "Shotgun Bisulphite Sequencing of the Arabidopsis Genome Reveals DNA Methylation Patterning" Nature paper by <a href="http://www.ncbi.nlm.nih.gov/sites/entrez?holding=&amp;db=pubmed&amp;cmd=search&amp;term=Shotgun%20Bisulphite%20Sequencing" target="_blank">Cokus et al.</a> (Steve Jacobsen's lab at UCLA). POSIX.
* <a href="http://woldlab.caltech.edu/chipseq/" target="_blank">CHiPSeq</a> - Program used by Johnson et al. (2007) in their Science publication
* <a href="http://tiger.dbs.nus.edu.sg/cnv-seq/" target="_blank">CNV-Seq</a> - CNV-seq, a new method to detect copy number variation using high-throughput sequencing. Chao Xie and Martti T Tammi at the National University of Singapore. Perl/R.
* <a href="http://www.bcgsc.ca/platform/bioinfo/software/findpeaks" target="_blank">FindPeaks</a> - perform analysis of ChIP-Seq experiments. It uses a naive algorithm for identifying regions of high coverage, which represent Chromatin Immunoprecipitation enrichment of sequence fragments, indicating the location of a bound protein of interest. Original algorithm by Matthew Bainbridge, in collaboration with Gordon Robertson. Current code and implementation by Anthony Fejes. Authors are from the Canada's Michael Smith Genome Sciences Centre. JAVA/OS independent. Latest versions available as part of the <a href="http://vancouvershortr.sourceforge.net/" target="_blank">Vancouver Short Read Analysis Package</a>
* <a href="http://liulab.dfci.harvard.edu/MACS/" target="_blank">MACS</a> - Model-based Analysis for ChIP-Seq. MACS empirically models the length of the sequenced ChIP fragments, which tends to be shorter than sonication or library construction size estimates, and uses it to improve the spatial resolution of predicted binding sites. MACS also uses a dynamic Poisson distribution to effectively capture local biases in the genome sequence, allowing for more sensitive and robust prediction. Written by Yong Zhang and Tao Liu from Xiaole Shirley Liu's Lab.
* <a href="http://www.gersteinlab.org/proj/PeakSeq/" target="_blank">PeakSeq</a> - PeakSeq: Systematic Scoring of ChIP-Seq Experiments Relative to Controls. a two-pass approach for scoring ChIP-Seq data relative to controls. The first pass identifies putative binding sites and compensates for variation in the mappability of sequences across the genome. The second pass filters out sites that are not significantly enriched compared to the normalized input DNA and computes a precise enrichment and significance. By Rozowsky J et al. C/Perl.
* <a href="http://mendel.stanford.edu/sidowlab/downloads/quest/" target="_blank">QuEST</a> - Quantitative Enrichment of Sequence Tags. Sidow and Myers Labs at Stanford. From the 2008 publication <a href="http://www.ncbi.nlm.nih.gov/pubmed/18711362" target="_blank">Genome-wide analysis of transcription factor binding sites based on ChIP-Seq data</a>. (C++)
* <a href="http://dir.nhlbi.nih.gov/papers/lmi/epigenomes/sissrs/" target="_blank">SISSRs</a> - Site Identification from Short Sequence Reads. BED file input. Raja Jothi @ NIH. Perl.
**See also <a href="http://seqanswers.com/forums/showthread.php?t=742" target="_blank">this thread</a> for ChIP-Seq, until I get time to update this list.

<strong>Alternate Base Calling</strong>
* <a href="http://svitsrv25.epfl.ch/R-doc/library/Rolexa/html/00Index.html" target="_blank">Rolexa</a> - R-based framework for base calling of Solexa data. Project <a href="http://www.biomedcentral.com/1471-2105/9/431" target="_blank">publication</a>
* <a href="http://hannonlab.cshl.edu/Alta-Cyclic/main.html" target="_blank">Alta-cyclic</a> - "a novel Illumina Genome-Analyzer (Solexa) base caller"

<strong>Transcriptomics</strong>
* <a href="http://woldlab.caltech.edu/rnaseq/" target="_blank">ERANGE</a> - Mapping and Quantifying Mammalian Transcriptomes by RNA-Seq. Supports Bowtie, BLAT and ELAND. From the Wold lab.
* <a href="http://www.genoscope.cns.fr/externe/gmorse/" target="_blank">G-Mo.R-Se</a> - G-Mo.R-Se is a method aimed at using RNA-Seq short reads to build de novo gene models. First, candidate exons are built directly from the positions of the reads mapped on the genome (without any ab initio assembly of the reads), and all the possible splice junctions between those exons are tested against unmapped reads. From CNS in France.
* <a href="http://evolution.sysu.edu.cn/english/software/mapnext.htm" target="_blank">MapNext</a> - MapNext: A software tool for spliced and unspliced alignments and SNP detection of short sequence reads. From the Evolutionary Genomics Lab at Sun-Yat Sen University, China.
* <a href="http://www.fml.tuebingen.mpg.de/raetsch/suppl/qpalma" target="_blank">QPalma</a> - Optimal Spliced Alignments of Short Sequence Reads. Authors are Fabio De Bona, Stephan Ossowski, Korbinian Schneeberger, and Gunnar Rätsch. A paper is <a href="http://www.fml.tuebingen.mpg.de/raetsch/suppl/qpalma/qpalma-final.pdf" target="_blank">available</a>.
* <a href="http://biogibbs.stanford.edu/~jiangh/rsat/" target="_blank">RSAT</a> - RSAT: RNA-Seq Analysis Tools. RNASAT is developed and maintained by Hui Jiang at Stanford University.
* <a href="http://tophat.cbcb.umd.edu/" target="_blank">TopHat</a> - TopHat is a fast splice junction mapper for RNA-Seq reads. It aligns RNA-Seq reads to mammalian-sized genomes using the ultra high-throughput short read aligner Bowtie, and then analyzes the mapping results to identify splice junctions between exons. TopHat is a collaborative effort between the University of Maryland and the University of California, Berkeley]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date>2011-02-17 20:08:20</wp:post_date>
		<wp:post_date_gmt>2011-02-18 01:08:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>software-packages-for-next-generation-sequence-analysis-from-seqanswers-com</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1620]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"3";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:1;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"3";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}i:2;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"3";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}i:3;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"2";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:4;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"2";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:5;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"2";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:6;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"2";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:7;a:4:{s:2:"ID";s:3:"160";s:10:"post_title";s:44:"Software packages for whole genome alignment";s:7:"matches";s:1:"2";s:9:"permalink";s:84:"http://128.192.66.53/wordpress/2011/02/software-packages-for-whole-genome-alignment/";}i:8;a:4:{s:2:"ID";s:2:"71";s:10:"post_title";s:22:"Synteny relevant links";s:7:"matches";s:1:"2";s:9:"permalink";s:62:"http://128.192.66.53/wordpress/2011/02/synteny-relevant-links/";}i:9;a:4:{s:2:"ID";s:3:"417";s:10:"post_title";s:99:"[Paper]A framework for variation discovery and genotyping using next-generation DNA sequencing data";s:7:"matches";s:1:"1";s:9:"permalink";s:69:"http://128.192.66.53/wordpress/2011/05/paper-genome-analysis-toolkit/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ABySS: A parallel assembler for short read sequence data</title>
		<link>http://128.192.66.53/wordpress/?p=60</link>
		<pubDate>Fri, 18 Feb 2011 01:11:25 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=60</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Abstract</h2>
Widespread adoption of massively parallel deoxyribonucleic acid (DNA) sequencing instruments has prompted the recent development of de novo short read assembly algorithms. A common shortcoming of the available tools is their inability to efficiently assemble vast amounts of data generated from large-scale sequencing projects, such as the sequencing of individual human genomes to catalog natural genetic variation. To address this limitation, we developed ABySS (Assembly By Short Sequences), a parallelized sequence assembler. As a demonstration of the capability of our software, we assembled 3.5 billion paired-end reads from the genome of an African male publicly released by Illumina, Inc. Approximately 2.76 million contigs &gt; or =100 base pairs (bp) in length were created with an N50 size of 1499 bp, representing 68% of the reference human genome. Analysis of these contigs identified polymorphic and novel sequences not present in the human reference assembly, which were validated by alignment to alternate human assemblies and to other primate genomes.

<strong><a href="http://www.ncbi.nlm.nih.gov/pubmed/19251739" target="_blank">PMID: 1925173</a></strong>

<h1>ABySS README</h1>


ABySS - assemble short reads into contigs
<h2>Compiling ABySS</h2>
Compiling ABySS should be as easy as
<pre>./configure &amp;&amp; make</pre>
To install ABySS in a specified directory
<pre>./configure --prefix=/opt/ABySS &amp;&amp; make &amp;&amp; sudo make install</pre>
If you wish to build the parallel assembler with MPI support, MPI should be found in /usr/include and /usr/lib or its location specified to configure:
<pre>./configure --with-mpi=/usr/lib/openmpi &amp;&amp; make</pre>
ABySS should be built using Google sparsehash to reduce memory usage, although it will build without. Google sparsehash should be found in /usr/include or its location specified to configure:
<pre>./configure CPPFLAGS=-I/usr/local/include</pre>
The default maximum k-mer size is 64 and may be decreased to reduce memory usage or increased at compile time:
<pre>./configure --enable-maxk=96 &amp;&amp; make</pre>
To run ABySS, its binaries should be found in your PATH.
<h2>Single-end assembly</h2>
Assemble short reads in a file named reads.fa into contigs in a file named contigs.fa with the following command:
<pre>ABYSS -k25 reads.fa -o contigs.fa</pre>
where -k is an appropriate k-mer length. The only method to find the optimal value of k is to run multiple trials and inspect the results. The following shell snippet will assemble for every value of k from 20 to 40.
<pre>for k in {20..40}; do
    ABYSS -k$k reads.fa -o contigs-k$k.fa
done</pre>
The maximum value for k is 64. This limit may be changed at compile time using the --enable-maxk option of configure. It may be decreased to 32 to decrease memory usage, which is particularly useful for large parallel jobs, or increased to 96.
<h2>Paired-end assembly</h2>
To assemble paired short reads in a file named reads.fa into contigs in a file named paired-contigs.fa, run the command:
<pre>abyss-pe k=25 n=10 in='reads1.fa reads2.fa' name=ecoli</pre>
where <em>k</em> is the k-mer length as before. <em>n</em> is the minimum number of pairs needed to consider joining two contigs. The optimal value for n must be found by trial. <em>in</em> specifies the input files to read, which may be in FASTA, FASTQ, qseq or export format and compressed with gz, bz2 or xz. The assembled contigs will be stored in ${name}-contigs.fa.

The suffix of the read identifier for a pair of reads must be one of '1' and '2', or 'A' and 'B', or 'F' and 'R', or 'F3' and 'R3', or 'forward' and 'reverse'. The reads may be interleaved in the same file or found in different files; however, interleaved mates will use less memory.

abyss-pe is a driver script implemented as a Makefile and runs a single-end assembly, as described above, and the following commands, which must be found in your PATH:
<ul>
	<li>ABYSS - the single-end assembler</li>
	<li>AdjList - finds overlaps of length k-1 between contigs</li>
	<li>KAligner<strong>**</strong> - aligns reads to contigs</li>
	<li>ParseAligns<strong>**</strong> - finds pairs of reads in alignments</li>
	<li>DistanceEst<strong>**</strong> - estimates distances between contigs</li>
	<li>Overlap - find overlaps between blunt contigs</li>
	<li>SimpleGraph - finds paths between pairs of contigs</li>
	<li>MergePaths - merges consistent paths</li>
	<li>Consensus - for a colour-space assembly, convert the colour-space contigs to nucleotide contigs</li>
</ul>
<strong>**</strong> These steps can be run in parallel (see below)
<h2>Paired-end assembly of multiple fragment libraries</h2>
The distribution of fragment sizes of each library is calculated empirically by aligning paired reads to the contigs produced by the single-end assembler, and the distribution is stored in a file with the extension .hist, such as ecoli-4.hist. The N50 of the single-end assembly must be well over the fragment-size to obtain an accurate empirical distribution.

Here's an example scenario of assembling a data set with two different fragment libraries and single-end reads:

Library lib1 has reads in two files, lib1_1.fa and lib1_2.fa. Library lib2 has reads in two files, lib2_1.fa and lib2_2.fa. Single-end reads are stored in two files se1.fa and se2.fa.

The command line to assemble this example data set is...
<pre>abyss-pe -j2 k=25 n=10 name=ecoli lib='lib1 lib2' 
    lib1='lib1_1.fa lib1_2.fa' lib2='lib2_1.fa lib2_2.fa' 
    se='se1.fa se2.fa'</pre>
The paired-end assembly of lib1 and lib2 may be run in parallel by specifying the -j option of make to abyss-pe, which is implemented as a Makefile script. The -j option should be set to the number of libraries, but setting it higher will not cause any trouble.

The empirical distribution of fragment sizes will be stored in two files named lib1-3.hist and lib2-3.hist. These files may be plotted to check that the empirical distribution agrees with the expected distribution. The assembled contigs will be stored in ${name}-contigs.fa.

Reads without mates should be placed in a file specified by the `se' (single-end) parameter. Reads without mates in the paired-end files will slow down the paired-end assembler considerably during the ParseAligns stage.
<h2>Parallel assembly</h2>
The `np' option of abyss-pe specifies the number of processes to use for the ABYSS-P parallel MPI job. Without any MPI configuration, this will allow you to make use of multiple cores on a single machine. To use multiple machines for assembly, you must create a hostfile for mpirun, which is describe in the mpirun man page.

The paired-end assembly runs on a single processor. For very large jobs, a good portion of the paired-end assembly (KAligner, ParseAligns, DistanceEst) may be run in parallel separate processes, but this process is not automated by the driver script abyss-pe.

Open MPI integrates well with SGE (Sun Grid Engine). For example, to submit an array of jobs to assemble every odd value of k between 51 and 63 using 64 processes for each job:
<pre>qsub -pe openmpi 64 -t 51-63:2 -N testing abyss-pe in=reads.fa n=10</pre>
For more information on using SGE and qsub, please refer to the qsub manual page. Open MPI must have been compiled with support for SGE using the ./configure --with-sge option.
<h2>See also</h2>
Try `abyss --help' for more information on command line options, or see the manual page in the file `ABYSS.1'. Please refer to the mpirun manual page for information on configuring parallel jobs.

Written by Jared Simpson and Shaun Jackman. Subscribe to the users' mailing list at <a title="http://www.bcgsc.ca/mailman/listinfo/abyss-users" rel="nofollow" href="http://www.bcgsc.ca/mailman/listinfo/abyss-users">http://www.bcgsc.ca/mailman/listinfo/abyss-users</a> Contact the users' mailing list at &lt;abyss-users@bcgsc.ca&gt; or the authors directly at &lt;abyss@bcgsc.ca&gt;.
<h1>Usage</h1>
<pre>Usage: ABYSS [OPTION]... FILE...
Assemble the input files, FILE, which may be in FASTA, FASTQ,
qseq or export format and compressed with gz, bz2 or xz.

     --chastity                 discard unchaste reads [default]
                                for qseq- and export-formatted files only
     --no-chastity              do not discard unchaste reads
     --trim-masked              trim masked bases from the ends of reads
                                [default]
     --no-trim-masked           do not trim masked bases from the ends of reads
 -o, --out=FILE                 write the contigs to FILE
                                the default is contigs.fa
 -k, --kmer=KMER_SIZE           k-mer size
 -l, --read-length=READ_LENGTH  read length
 -t, --trim-length=TRIM_LENGTH  maximum length of dangling edges to trim
 -c, --coverage=COVERAGE        remove contigs with mean k-mer coverage
                                less than this threshold
 -b, --bubbles=N                maximum number of bubble-popping rounds
 -e, --erode=COVERAGE           erode bases at the ends of blunt contigs with
                                coverage less than this threshold
 -E, --erode-strand=COVERAGE    erode bases at the ends of blunt contigs with
                                coverage less than this threshold on either
                                strand. default=1
     --coverage-hist=FILE       record the k-mer coverage histogram in FILE
 -g, --graph=FILE               generate a graph in dot format
 -s, --snp=FILE                 record popped bubbles in FILE
 -v, --verbose                  display verbose output
     --help     display this help and exit
     --version  output version information and exit

Report bugs to &lt;abyss-users@bcgsc.ca&gt;.</pre>
<h1>MAN</h1>
<pre>ABYSS(1)                         User Commands                        ABYSS(1)

NAME
       ABYSS - assemble short reads into contigs

SYNOPSIS
       ABYSS [OPTION]... FILE...

DESCRIPTION
       Assemble  all  input  files,  FILE, which may be in FASTA (.fa) format or FASTQ format (.fastq) and may be
       compressed with gz, bz2 or xz.

       --chastity
              discard unchaste reads [default] for qseq and export files only

       --no-chastity
              do not discard unchaste reads

       --trim-masked
              trim masked bases from the ends of reads [default]

       --no-trim-masked
              do not trim masked bases from the ends of reads

       -q, --trim-quality=THRESHOLD
              trim bases from the ends of reads whose quality is less than the threshold

       --standard-quality
              zero quality is ‘!’ (33) default for FASTQ files

       --illumina-quality
              zero quality is ‘@’ (64) default for qseq and export files

       -o, --out=FILE
              write the contigs to FILE

       -k, --kmer=KMER_SIZE
              k-mer size

       -l, --read-length=READ_LENGTH
              read length

       -t, --trim-length=TRIM_LENGTH
              maximum length of dangling edges to trim

       -c, --coverage=COVERAGE
              remove contigs with mean k-mer coverage less than this threshold

       -b, --bubbles=N
              maximum number of bubble-popping rounds

       -e, --erode=COVERAGE
              erode bases at the ends of blunt contigs with coverage less than this threshold

       -E, --erode-strand=COVERAGE
              erode bases at the ends of blunt contigs with coverage less than this threshold on  either  strand.
              default=1

       --coverage-hist=FILE
              record the k-mer coverage histogram in FILE

       -g, --graph=FILE
              generate a graph in dot format

       -s, --snp=FILE
              record popped bubbles in FILE

       -v, --verbose
              display verbose output

       --help display this help and exit

       --version
              output version information and exit

AUTHOR
       Written by Jared Simpson and Shaun Jackman.

REPORTING BUGS
       Report bugs to &lt;abyss-users@bcgsc.ca&gt;.

COPYRIGHT
       Copyright 2009 Canada’s Michael Smith Genome Science Centre

ABYSS (ABySS) 1.1.0                2009-Nov                           ABYSS(1)</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2011-02-17 20:11:25</wp:post_date>
		<wp:post_date_gmt>2011-02-18 01:11:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>abyss-a-parallel-assembler-for-short-read-sequence-data</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="abyss"><![CDATA[ABySS]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="parallel"><![CDATA[Parallel]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1754]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"3";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:1;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"3";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}i:2;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"2";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:3;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"2";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:4;a:4:{s:2:"ID";s:3:"413";s:10:"post_title";s:52:"[Paper]De novo assembly and analysis of RNA-seq data";s:7:"matches";s:1:"2";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-assembly-and-analysis-rna-seq-data/";}i:5;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:15:"parse gff3 file";s:7:"matches";s:1:"2";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/03/parse-gff3-file/";}i:6;a:4:{s:2:"ID";s:3:"160";s:10:"post_title";s:44:"Software packages for whole genome alignment";s:7:"matches";s:1:"2";s:9:"permalink";s:84:"http://128.192.66.53/wordpress/2011/02/software-packages-for-whole-genome-alignment/";}i:7;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"2";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}i:8;a:4:{s:2:"ID";s:2:"71";s:10:"post_title";s:22:"Synteny relevant links";s:7:"matches";s:1:"2";s:9:"permalink";s:62:"http://128.192.66.53/wordpress/2011/02/synteny-relevant-links/";}i:9;a:4:{s:2:"ID";s:3:"417";s:10:"post_title";s:99:"[Paper]A framework for variation discovery and genotyping using next-generation DNA sequencing data";s:7:"matches";s:1:"1";s:9:"permalink";s:69:"http://128.192.66.53/wordpress/2011/05/paper-genome-analysis-toolkit/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Perl: Sorting a Two-Dimensional Array</title>
		<link>http://128.192.66.53/wordpress/?p=64</link>
		<pubDate>Fri, 18 Feb 2011 01:15:00 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=64</guid>
		<description></description>
		<content:encoded><![CDATA[copy from <a href="http://www.devx.com/tips/Tip/5283">http://www.devx.com/tips/Tip/5283</a>

The Perl sort function is useful for alphabetically sorting lists. However, you can't use it on a list of lists, because once a list starts listing other lists, they cease to be lists and become references instead. By sorting arrays within arrays, it's possible to gain relational database-like control over data grids.
For example, let's say I have a list of lists called @biglist. To print all of its unsorted contents, I would write:

[perl]for $list_ref ( @biglist ) {
print &quot;@$list_ref n&quot;;
}[/perl]

To sort @biglist by the first element in each list, I would write:

[perl]for $list_ref ( sort { $a-&gt;[0] &lt;=&gt; $b-&gt;[0] } @biglist ) {
print &quot; @$list_ref n&quot;;
}[/perl]

If the array element that you wish to sort is not numeric then change the '' to 'cmp' to sort asciibetically:

[perl]for $list_ref ( sort { $a-&gt;[0] cmp $b-&gt;[0] } @biglist ) {
print &quot; @$list_ref n&quot;;
}[/perl]

also, should you wish to not sort in a case-sensitive way:

[perl]for $list_ref ( sort { lc($a-&gt;[0]) cmp lc($b-&gt;[0]) } @biglist ) {
print &quot; @$list_ref n&quot;;
}[/perl] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2011-02-17 20:15:00</wp:post_date>
		<wp:post_date_gmt>2011-02-18 01:15:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>perl-sorting-a-two-dimensional-array</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="array"><![CDATA[Array]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:1;a:4:{s:2:"ID";s:3:"524";s:10:"post_title";s:61:"perl脚本提取BLAST结果中的信息【以tblastn为例】";s:7:"matches";s:1:"1";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/08/parse-blast/";}i:2;a:4:{s:2:"ID";s:3:"428";s:10:"post_title";s:13:"perl多线程";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/perl-multi-threads/";}i:3;a:4:{s:2:"ID";s:3:"346";s:10:"post_title";s:45:"KEGG: Kyoto Encyclopedia of Genes and Genomes";s:7:"matches";s:1:"1";s:9:"permalink";s:44:"http://128.192.66.53/wordpress/2011/04/kegg/";}i:4;a:4:{s:2:"ID";s:3:"343";s:10:"post_title";s:8:"InterPro";s:7:"matches";s:1:"1";s:9:"permalink";s:48:"http://128.192.66.53/wordpress/2011/04/interpro/";}i:5;a:4:{s:2:"ID";s:3:"331";s:10:"post_title";s:59:"google.pl - command line google search in a shell with perl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/04/google-search-perl/";}i:6;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:15:"parse gff3 file";s:7:"matches";s:1:"1";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/03/parse-gff3-file/";}i:7;a:4:{s:2:"ID";s:2:"69";s:10:"post_title";s:12:"note of java";s:7:"matches";s:1:"1";s:9:"permalink";s:52:"http://128.192.66.53/wordpress/2011/02/note-of-java/";}i:8;a:4:{s:2:"ID";s:2:"66";s:10:"post_title";s:16:"learning java #1";s:7:"matches";s:1:"1";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/02/learning-java-1/";}i:9;a:4:{s:2:"ID";s:2:"50";s:10:"post_title";s:50:"windows下用perl操作bl2seq进行两序列比对";s:7:"matches";s:1:"1";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/02/perl-bl2seq/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[768]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>learning java #1</title>
		<link>http://128.192.66.53/wordpress/?p=66</link>
		<pubDate>Fri, 18 Feb 2011 01:18:09 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=66</guid>
		<description></description>
		<content:encoded><![CDATA[Hello World!

[java]/**
 * The HelloWorldApp class implements an application that
 * simply prints &quot;Hello World!&quot; to standard output.
 */
class HelloWorldApp {
    public static void main(String[] args) {
        System.out.println(&quot;Hello World!&quot;); // Display the string.
    }
}[/java]

compile and run

[java]javac HelloWorldApp.java
java HelloWorldApp[/java]

object, class, package

inheritance

[java]class MountainBike extends Bicycle {
     // new fields and methods defining a mountain bike would go here
}[/java]

interface

[java]class ACMEBicycle implements Bicycle {
// remainder of this class implemented as before
}[/java]

package]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date>2011-02-17 20:18:09</wp:post_date>
		<wp:post_date_gmt>2011-02-18 01:18:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>learning-java-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[378]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;a:4:{s:2:"ID";s:2:"69";s:10:"post_title";s:12:"note of java";s:7:"matches";s:1:"3";s:9:"permalink";s:52:"http://128.192.66.53/wordpress/2011/02/note-of-java/";}i:1;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:2;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:3;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:42:"ubuntu下终端路径只显示当前目录";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://128.192.66.53/wordpress/2011/03/ubuntu-terminal-directory/";}i:4;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:50:"useful, essential and most often used Vim commands";s:7:"matches";s:1:"1";s:9:"permalink";s:52:"http://128.192.66.53/wordpress/2011/03/vim-commands/";}i:5;a:4:{s:2:"ID";s:2:"64";s:10:"post_title";s:37:"Perl: Sorting a Two-Dimensional Array";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://128.192.66.53/wordpress/2011/02/perl-sorting-a-two-dimensional-array/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>note of java</title>
		<link>http://128.192.66.53/wordpress/?p=69</link>
		<pubDate>Fri, 18 Feb 2011 01:19:18 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=69</guid>
		<description></description>
		<content:encoded><![CDATA[transferred  to <a href="https://docs.google.com/document/pub?id=1tOFpFMcQyRzEY3aXMcdTqC1Z29YtiBYUFk42F4L9OGE" target="_blank">google doc</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>69</wp:post_id>
		<wp:post_date>2011-02-17 20:19:18</wp:post_date>
		<wp:post_date_gmt>2011-02-18 01:19:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>note-of-java</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{i:0;a:4:{s:2:"ID";s:2:"66";s:10:"post_title";s:16:"learning java #1";s:7:"matches";s:1:"3";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/02/learning-java-1/";}i:1;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:2;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:3;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:42:"ubuntu下终端路径只显示当前目录";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://128.192.66.53/wordpress/2011/03/ubuntu-terminal-directory/";}i:4;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:50:"useful, essential and most often used Vim commands";s:7:"matches";s:1:"1";s:9:"permalink";s:52:"http://128.192.66.53/wordpress/2011/03/vim-commands/";}i:5;a:4:{s:2:"ID";s:2:"64";s:10:"post_title";s:37:"Perl: Sorting a Two-Dimensional Array";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://128.192.66.53/wordpress/2011/02/perl-sorting-a-two-dimensional-array/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[277]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Synteny relevant links</title>
		<link>http://128.192.66.53/wordpress/?p=71</link>
		<pubDate>Fri, 18 Feb 2011 01:21:33 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=71</guid>
		<description></description>
		<content:encoded><![CDATA[Copy from <a href="http://www.symapdb.org/docs/links.html" target="_blank">http://www.symapdb.org/docs/links.html</a>

<strong>Contents:</strong>
<ul>
	<li>Information</li>
	<li>On-line comparative sequenced genome databases</li>
	<li>Synteny downloadable programs</li>
	<li>A few multiple alignment programs</li>
</ul>
<a name="info"></a>
<h3>Information</h3>
<table border="1" cellpadding="5" width="95%">
<tbody>
<tr>
<td><strong>Information</strong></td>
<td><strong>Comments</strong></td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/Homology_(biology)" target="_blank">Homology</a></td>
<td>Wiki</td>
</tr>
<tr>
<td><a href="http://www.nature.com/nrg/journal/v5/n10/glossary/nrg1449.html#df11" target="_blank">Useful definitions</a></td>
<td>Nature Reviews Genetics</td>
</tr>
<tr>
<td><a href="http://en.wikipedia.org/wiki/List_of_sequence_alignment_softwaretarget=%22_blank%22" target="_blank">Alignment software</a></td>
<td>Wiki</td>
</tr>
<tr>
<td><a href="http://www.plants.usda.gov/" target="_blank">Plant database</a></td>
<td>USDA</td>
</tr>
<tr>
<td><a href="http://www.ncbi.nlm.nih.gov/sites/entrez?cmd=Search&amp;db=genomeprj&amp;term=%22Viridiplantae%22[Organism]" target="_blank">Plant genomes</a></td>
<td>GenBanks</td>
</tr>
<tr>
<td><a href="http://www.mobot.org/MOBOT/research/APweb/welcome.html" target="_blank">Angliosperm Phylogeny</a></td>
<td>Missouri Botanical Garden</td>
</tr>
<tr>
<td><a href="http://tolweb.org/" target="_blank">Tree of Life</a></td>
<td>Collaborative effort to provide information about biodiversity</td>
</tr>
</tbody>
</table>
<a name="databases"></a>
<h3>On-line comparative sequenced genomes databases</h3>
<table border="1" cellpadding="5" width="95%">
<tbody>
<tr>
<td><strong>Database</strong></td>
<td><strong>Species;graphics;computation</strong></td>
<td><strong>Publication</strong></td>
</tr>
<tr>
<td><a href="http://www.phytozome.org/" target="_blank">Phytozome</a></td>
<td>Plants; Genome browsers;</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC1347408/?tool=pubmed" target="_blank">Hartmann et al. 2006</a></td>
</tr>
<tr>
<td><a href="http://bioinformatics.psb.ugent.be/plaza/" target="_blank">PLAZA</a></td>
<td>Plants; Gene region alignments, Dotplot, Chromosome alignment, Multiplicon; blastp &amp; OrthoMCL method</td>
<td><a href="http://www.plantcell.org/cgi/content/full/21/12/3718" target="_blank">Proost et al. 2009</a><a></a></td>
</tr>
<tr>
<td><a href="http://chibba.agtec.uga.edu/duplication" target="_blank">Plant Genome Duplication</a></td>
<td>Plants; Dotplots and detail; blastp &amp; MCSCAN</td>
<td><a href="http://genome.cshlp.org/content/18/12/1944.long" target="_blank">Tang et al. 2008</a><a></a></td>
</tr>
<tr>
<td><a href="http://www.gramene.org/" target="_blank">Gramene</a></td>
<td>Grasses; Ensembl;</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2238951/?tool=pubmed" target="_blank">Liang et al. 2008</a></td>
</tr>
<tr>
<td><a href="http://www.comparative-legumes.org/" target="_blank">Legume Information System</a></td>
<td>Legumes; CMap;</td>
<td>--</td>
</tr>
<tr>
<td><a href="http://www.jgi.doe.gov/genome-projects" target="_blank">JGI genome projects</a></td>
<td>Various; Vista and links to Phytozome;</td>
<td>--</td>
</tr>
<tr>
<td><a href="http://genome.lbl.gov/vista/index.shtml" target="_blank">Vista</a></td>
<td>Various; Java display of regions; Shuffle-LAGAN &amp; BLAT in pipeline, allows user input.</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC441596/?tool=pubmed" target="_blank">Frazer et al. 2004</a></td>
</tr>
<tr>
<td><a href="http://narcisse.toulouse.inra.fr/" target="_blank">Narcisse</a></td>
<td>Various; Dotplots, circos, chromosome-based gene alignment; blastp &amp; custom script.</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2238891/?tool=pubmed" target="_blank">Courcelle et al. 2008</a></td>
</tr>
<tr>
<td><a href="http://cinteny.cchmc.org/" target="_blank">Cinteny</a></td>
<td>Various; Genome/chromosome view; custom algorithm</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC1821339/?tool=pubmed" target="_blank">Sinha &amp; Meller 2007</a></td>
</tr>
<tr>
<td><a href="http://synteny.cnr.berkeley.edu/CoGe/" target="_blank">CoGe</a></td>
<td>Various; Dotplot (SynMap) and ajax Genome Browser; DAGchainer, Blast</td>
<td><a href="http://www3.interscience.wiley.com/journal/119410740/abstract?CRETRY=1&amp;SRETRY=0" target="_blank">Lyons &amp; Freeling 2008</a></td>
</tr>
<tr>
<td><a href="http://genome.sfu.ca/orthoclusterdb/" target="_blank">OrthoClusterDB</a></td>
<td>No plants; Genome chromosome view, link to Gbrowse; OrthoCluster, allows user input.</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2711082/?tool=pubmed" target="_blank">Ng et al. 2009</a></td>
</tr>
<tr>
<td><a href="http://teleost.cs.uoregon.edu/synteny_db" target="_blank">The Synteny Database</a></td>
<td>No plants; Various views; Blastp &amp; custom pipeline, emphasis on duplications and ohnologs.</td>
<td><a href="http://genome.cshlp.org/content/19/8/1497.long" target="_blank">Catchen et al. 2009</a></td>
</tr>
<tr>
<td><a href="http://www.ensembl.org/" target="_blank">Ensembl</a></td>
<td>No plants; ComparaMart, DAS visualization; TreeBeST, Pecan.</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2686571/?tool=pubmed" target="_blank">Hubbard et al. 2009</a></td>
</tr>
<tr>
<td><a href="http://genome.ucsc.edu/" target="_blank">UCSC Genome Browser</a></td>
<td>No plants;</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2099589/?tool=pubmed" target="_blank">Miller et. al. 2007</a></td>
</tr>
<tr>
<td><a href="http://inparanoid.sbc.su.se/">Inparanoid</a></td>
<td>Various, produce lists of orthologs</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2808972/?tool=pubmed">Ostlund et al. 2009</a></td>
</tr>
<tr>
<td><a href="http://www.cbil.upenn.edu/gene-family/">OrthoMCL</a></td>
<td>Various, produce lists of orthologs</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pubmed/12952885?dopt=Citation">Li et al. 2003</a></td>
</tr>
</tbody>
</table>
<h3>Synteny Computation and/or Display Software</h3>
<strong>Key</strong>: Perfect - conserved order in block, Imperfect - allows micro-rearrangments in block, Duplications - allows duplicated regions, Multiplicon - mutually homologous segment between &gt;2 genomes.
<table border="1" cellpadding="5" width="95%">
<tbody>
<tr>
<td><strong>Software</strong></td>
<td><strong>Input</strong></td>
<td><strong>Synteny</strong></td>
<td><strong>Graphics</strong></td>
<td><strong>Publication</strong></td>
</tr>
<tr>
<td><a href="http://128.192.66.53/wordpress/2011/03/i-adhore-detect-synteny-regions/" target="_blank">i-ADHoRe</a></td>
<td>N gene lists</td>
<td>Perfect, duplications, multiplicon</td>
<td>Generates plots using Perl GD</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pubmed/12421767?dopt=Citation" target="_blank">Vandepoele et al. 2002</a> <a href="http://bioinformatics.oxfordjournals.org/content/24/1/127.long" target="_blank">Simmillion et al. 2007</a></td>
</tr>
<tr>
<td><a href="http://users.soe.ucsc.edu/~kent/">AXTCHAIN</a></td>
<td>BLASTZ alignments</td>
<td></td>
<td></td>
<td><a href="http://www.pnas.org/content/100/20/11484.full">Kent et al. 2003</a></td>
</tr>
<tr>
<td><a href="http://www.tc.umn.edu/~cann0010/Software.html">DiagHunter</a></td>
<td>Similarity file</td>
<td>Imperfect</td>
<td><a href="http://www.atgc.org/GenoPix_2D_Plotter/GenoPix_2D_Plotter_Download.html" target="_blank">GenoPix</a> Tcl/Tk</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pubmed/14519203?dopt=Citation" target="_blank">Cannon et al. 2003</a></td>
</tr>
<tr>
<td><a href="http://www-cse.ucsd.edu/groups/bioinformatics/GRIMM" target="_blank">GRIMM-synteny</a></td>
<td>Similarity file</td>
<td>Imperfect, breakpoints</td>
<td>Web</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pubmed/11934753?dopt=Citation" target="_blank">Tessler 2002</a> and<a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC164646/?tool=pubmed" target="_blank">Pevzner and Tessler 2003</a></td>
</tr>
<tr>
<td><a href="http://www.bio.unc.edu/faculty/vision/lab/FISH/" target="_blank">FISH</a></td>
<td>Ordered marker file per contig and pairs files</td>
<td>Imperfect</td>
<td>no</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pubmed/12855440?dopt=Citation" target="_blank">Calabrese et al. 2003</a></td>
</tr>
<tr>
<td><a href="http://dagchainer.sourceforge.net/" target="_blank">DAGchainer</a></td>
<td>Gene pairs with chromosome positions</td>
<td>Perfect</td>
<td>Dot plot</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pubmed/15247098?dopt=Citation" target="_blank">Haas et al. 2004</a></td>
</tr>
<tr>
<td><a href="http://colinear.cbi.pku.edu.cn/" target="_blank">ColinearScan</a></td>
<td>Protein sequences with positions and pairs file</td>
<td>Perfect, estimates gap parameters.</td>
<td>no</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC1626491/?tool=pubmed" target="_blank">Wang et al. 2006</a><a></a></td>
</tr>
<tr>
<td><a href="http://osfinder.dna.bio.keio.ac.jp/" target="_blank">OSfinder</a></td>
<td>Homologous markers with locations (provide scripts to generate this file from different sources)</td>
<td>Perfect, estimates all parameters, no duplication</td>
<td>PNG file of blocks and of dotplot</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pubmed/19188192?dopt=Citation" target="_blank">Hachiya et al. 2009</a></td>
</tr>
<tr>
<td><a href="http://krono.act.uji.es/noticias/orthocluster-a-new-tool-for-mining-syntenic-blocks" target="_blank">OrthoCluster</a></td>
<td>Imperfect</td>
<td></td>
<td></td>
<td><a href="http://www.ncbi.nlm.nih.gov/pubmed/19728289?dopt=Citation" target="_blank">Vergara &amp; CHen 2009</a></td>
</tr>
<tr>
<td><a href="http://www.bioinformatics.org/cyntenator/wiki/">Cyntenator</a></td>
<td>guided tree &amp; similarity files</td>
<td>Conserved synteny between n genomes</td>
<td>no</td>
<td><a href="http://www.plosone.org/article/info:doi%2F10.1371%2Fjournal.pone.0008861" target="_blank">Rodelsperger &amp; Dieterich 2010</a></td>
</tr>
<tr>
<td><a href="http://asap.ahabs.wisc.edu/mauve" target="_blank">Mauve</a></td>
<td>Multiple sequences (small genomes or regions)</td>
<td>Conserved, aligns multiple sequences, computes synteny &amp; breakpoints</td>
<td>Java graphics &amp; manager</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pubmed/15231754?dopt=Citation" target="_blank">Darling et al. 2004</a></td>
</tr>
<tr>
<td><a href="http://ews.uiuc.edu/~xuling/mcmusec/" target="_blank">MCMuSeC</a></td>
<td>Homologs for multiple genomes &amp; phylogenetic tree</td>
<td>Detects gene clusters</td>
<td>no</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pubmed/19158161?dopt=Citation" target="_blank">Ling et al. 2009</a></td>
</tr>
<tr>
<td><a href="http://chibba.agtec.uga.edu/duplication/mcscan/" target="_blank">MCscan</a><a></a></td>
<td>blast &amp; gff file</td>
<td>DAGchainer + consensus sequence builder</td>
<td>no</td>
<td><a href="http://genome.cshlp.org/content/18/12/1944.long" target="_blank">Tang et al. 2008</a><a></a></td>
</tr>
<tr>
<td><a href="http://titus.bio.uci.edu/lineup/" target="_blank">LineUp</a></td>
<td>Genetic maps</td>
<td></td>
<td>no</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pubmed/12695327?dopt=Citation" target="_blank">Hampson et al. 2003</a></td>
</tr>
<tr>
<td><a href="http://www.ige.tohoku.ac.jp/joho/gmProject/gmdownload.html" target="_blank">GenomeMatcher</a></td>
<td>BLAST, MUMmer</td>
<td>no</td>
<td>Dotplots and closeup (see<a href="http://www.ige.tohoku.ac.jp/joho/gmProject/gallery.html" target="_blank">gallery</a>)</td>
<td><a href="http://www.biomedcentral.com/1471-2105/9/376" target="_blank">Ohtsubo et al. 2008</a></td>
</tr>
<tr>
<td><a href="http://gmod.org/wiki/CMap" target="_blank">CMap</a><a></a></td>
<td>Maps (genetic, FPC, sequence)</td>
<td>no</td>
<td>Perl/CGI (see<a href="http://gmod.org/wiki/CMap#Screenshots" target="_blank">screen shots</a>)</td>
<td><a href="http://www.symapdb.org/docs/%3Ca" target="_blank">Youens-Clark et al. 2009</a></td>
</tr>
<tr>
<td><a href="http://gmod.org/wiki/GBrowse_syn" target="_blank">GBrowse_syn</a><a></a></td>
<td>Alignments</td>
<td>no</td>
<td>Perl/CGI GBrowse-based</td>
<td>-</td>
</tr>
<tr>
<td><a href="http://mkweb.bcgsc.ca/circos" target="_blank">Circos</a></td>
<td>GFF files</td>
<td>no</td>
<td>Perl/CGI</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pubmed/19541911?dopt=Citation" target="_blank">Krzywinski et al. 2009</a></td>
</tr>
</tbody>
</table>
<h4>A few alignment programs</h4>
<table border="1" cellpadding="5" width="95%">
<tbody>
<tr>
<td><strong>Software</strong></td>
<td><strong>Input</strong></td>
<td><strong>Computation</strong></td>
<td><strong>Graphics</strong></td>
<td><strong>Publications</strong></td>
</tr>
<tr>
<td><a href="http://mummer.sourceforge.net/">Mummer</a></td>
<td>Genome sequence</td>
<td>Anchors</td>
<td>Java graphical interface</td>
<td><a href="http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&amp;db=PubMed&amp;dopt=Citation&amp;list_uids=14759262">Kurtz et al. 2004</a></td>
</tr>
<tr>
<td><a href="http://lagan.stanford.edu/lagan_web/index.shtml" target="_blank">LAGAN</a></td>
<td>Genome Sequence</td>
<td></td>
<td>Vista</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC430967/?tool=pubmed" target="_blank">Brudno et al. 2007</a></td>
</tr>
<tr>
<td><a href="http://www.lbl.gov/Tech-Transfer/techs/lbnl1690.html" target="_blank">AVID</a></td>
<td>Genome sequence</td>
<td>Aligns and orders</td>
<td>Vista</td>
<td><a href="http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&amp;db=PubMed&amp;dopt=Citation&amp;list_uids=12529311">Bray et al. 2003</a></td>
</tr>
<tr>
<td><a href="http://genome.lbl.gov/vista/index.shtml" target="_blank">Vista</a></td>
<td>Alignments</td>
<td>LAGAN or AVID</td>
<td>Java (see <a href="http://pipeline.lbl.gov/vgb2help.shtml" target="_blank">screenshot</a>)</td>
<td><a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC441596/?tool=pubmed" target="_blank">Frazer et al. 2004</a></td>
</tr>
</tbody>
</table>
<a name="details"></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date>2011-02-17 20:21:33</wp:post_date>
		<wp:post_date_gmt>2011-02-18 01:21:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>synteny-relevant-links</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="comparative-genomics"><![CDATA[Comparative Genomics]]></category>
		<category domain="post_tag" nicename="evolution"><![CDATA[Evolution]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="synteny"><![CDATA[Synteny]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"3";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:1;a:4:{s:2:"ID";s:3:"280";s:10:"post_title";s:32:"i-ADHoRe: Detect Synteny Regions";s:7:"matches";s:1:"3";s:9:"permalink";s:71:"http://128.192.66.53/wordpress/2011/03/i-adhore-detect-synteny-regions/";}i:2;a:4:{s:2:"ID";s:3:"274";s:10:"post_title";s:36:"MizBee: A Multiscale Synteny Browser";s:7:"matches";s:1:"3";s:9:"permalink";s:75:"http://128.192.66.53/wordpress/2011/03/mizbee-a-multiscale-synteny-browser/";}i:3;a:4:{s:2:"ID";s:3:"160";s:10:"post_title";s:44:"Software packages for whole genome alignment";s:7:"matches";s:1:"3";s:9:"permalink";s:84:"http://128.192.66.53/wordpress/2011/02/software-packages-for-whole-genome-alignment/";}i:4;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"2";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:5;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:15:"parse gff3 file";s:7:"matches";s:1:"2";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/03/parse-gff3-file/";}i:6;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"2";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}i:7;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"2";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}i:8;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"2";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}i:9;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[934]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Just an Ad</title>
		<link>http://128.192.66.53/wordpress/?p=74</link>
		<pubDate>Fri, 18 Feb 2011 02:00:55 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=74</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="text-align: left; margin: 12px;"><form action="https://www.paypal.com/cgi-bin/webscr" method="post">
<div class="paypal-donations"><input type="hidden" name="cmd" value="_donations" /> <input type="hidden" name="business" value="liyupeng111@gmail.com" /> <input type="hidden" name="return" value="http://128.192.66.53/wordpress/thank-you/" /> <input type="hidden" name="item_name" value="support bioops.info" /> <input type="hidden" name="item_number" value="Bioops.info" /> <input type="hidden" name="currency_code" value="USD" /> <input type="image" name="submit" src="https://www.paypal.com/en_US/i/btn/btn_donate_LG.gif" alt="PayPal - The safer, easier way to pay online." /><img src="https://www.paypal.com/en_US/i/scr/pixel.gif" alt="" width="1" height="1" /></div>
</form></div>
This site is hosted on <a href="http://www.000webhost.com/417002.html" target="_blank">000webhost</a> for free. Its service is excellent for now.  <a href="http://www.free-webhosts.com/reviews/000Webhost.php" target="_blank">Here</a> are for more reviews about <a href="http://www.000webhost.com/417002.html" target="_blank">000webhost</a>.

I joined the Affiliate Program of <a href="http://www.000webhost.com/417002.html" target="_blank">000webhost</a>. If you want to host your site on <a href="http://www.000webhost.com/417002.html" target="_blank">000webhost</a>, please click <a href="http://www.000webhost.com/417002.html" target="_blank">here</a> or the first picture to register! Thanks!

<a href="http://www.000webhost.com/417002.html" target="_blank"><img src="http://www.000webhost.com/images/banners/468x60/banner6.gif" alt="Free Website Hosting" width="468" height="60" border="0" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2011-02-17 21:00:55</wp:post_date>
		<wp:post_date_gmt>2011-02-18 02:00:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>just-an-ad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="000webhost"><![CDATA[000webhost]]></category>
		<category domain="post_tag" nicename="ad"><![CDATA[AD]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[387]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Software packages for discovering structural variation with next-generation sequencing</title>
		<link>http://128.192.66.53/wordpress/?p=98</link>
		<pubDate>Mon, 21 Feb 2011 17:38:38 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=98</guid>
		<description></description>
		<content:encoded><![CDATA[More softwares and information will be added. (latest updated on 28/02/2011)

<strong>Highly recommended you to read this paper. Mapping copy number variation by population-scale genome sequencing (<a href="http://www.nature.com/nature/journal/v470/n7332/full/nature09708.html" target="_blank">Mills et al. 2011</a>)</strong>

<a href="http://sv.gersteinlab.org/pemer/" target="_blank">PEMer</a> (<a href="http://w02.genomebiology.com/2009/10/2/R23/" target="_blank">Korbel et al. 2009</a>) It comprises an analysis pipeline, compatible with several next-generation sequencing platforms; simulation-based error models, yielding confidence-values for each structural variant; and a back-end database.

<a href="http://www.broadinstitute.org/cgi-bin/cancer/publications/pub_paper.cgi?mode=view&amp;paper_id=182" target="_blank">SegSeq</a> (<a href="http://www.nature.com/nmeth/journal/v6/n1/abs/nmeth.1276.html" target="_blank">Chiang et al. 2009</a>)  Detect and localize copy-number alterations from massively parallel sequence data. A simple approach would be to partition the genome into windows of fixed size, estimate the tumor-normal ratios for each window and use standard segmentation algorithms to decompose the genome into regions of equivalent copy number.

<a href="http://compbio.cs.sfu.ca/strvar.htm" target="_blank">VariationHunter</a> (<a href="http://genome.cshlp.org/content/19/7/1270.full" target="_blank">Hormozdiari et al. 2009</a>) Combinatorial algorithms for structural variation detection in high-throughput sequenced genomes. It's based on maximum parsimony

<a href="http://compbio.cs.toronto.edu/modil/">MoDIL</a> (<a href="http://www.nature.com/nmeth/journal/v6/n7/full/nmeth.f.256.html">Lee et al.2009</a>) MoDIL, or Mixture of Distributions Indel Locator, a novel method for finding medium sized indels from high throughput sequencing datasets. The MoDIL algorithm compares the distribution of insert sizes in the sequenced library to the distribution of the observed mapped distances at a particular genomic location.

<a href="http://www.ebi.ac.uk/~kye/pindel/" target="_blank">Pindel</a> (<a href="http://bioinformatics.oxfordjournals.org/content/25/21/2865.full" target="_blank">Ye et al. 2009</a>) A pattern growth approach, to detect breakpoints of large deletions and medium-sized insertions from paired-end short reads.

<a href="http://breakdancer.sourceforge.net/" target="_blank">BreakDancer</a> (<a href="http://www.nature.com/nmeth/journal/v6/n9/abs/nmeth.1363.html" target="_blank">Chen et al. 2009</a>) BreakDancerMax predicts five types of structural variants: insertions, deletions, inversions, inter- and intra-chromosomal translocations from next-generation short paired-end sequencing reads using read pairs that are mapped with unexpected separation distances or orientation.

<a href="http://genome.wustl.edu/software/cnvhmm" target="_blank">cnvHMM</a> copy number analysis using Hidden Markov algorithm

Geometric Analysis of Structural Variants (<a href="http://cs.brown.edu/people/braphael/software.html" target="_blank">GASV</a>) (<a href="http://bioinformatics.oxfordjournals.org/content/25/12/i222" target="_blank">Sindi et al 2009</a>) A geometric approach for identification, classification and comparison of structural variants. The software is for analysis of structural variation from paired-end sequencing and/or array-CGH data.

Sequence Variant Analyzer (<a href="http://people.chgv.lsrc.duke.edu/~dg48//sva/index.php" target="_blank">SVA</a>) SVA is a computer software project designed to annotate, visualize, and analyze the genetic variants identified through next-generation sequencing studies, including whole-genome sequencing (WGS) and exome sequencing studies.

<a href="http://genome.wustl.edu/software/swt" target="_blank">SWT</a> It is a collection of R functions for statistical analysisof genome-wide data, by Qunyuan Zhang (qunyuan@wustl.edu), DSG.

<a href="http://varscan.sourceforge.net/" target="_blank">VarScan</a> (<a href="http://bioinformatics.oxfordjournals.org/content/25/17/2283" target="_blank">Koboldt et al. 2009</a>) VarScan is a platform-independent, technology-independent software tool for identifying SNPs and indels in massively parallel sequencing of individual and pooled samples. (not actually structural variation)

<a href="http://tiger.dbs.nus.edu.sg/CNV-seq/" target="_blank">CNV-seq</a> (<a href="http://www.biomedcentral.com/1471-2105/10/80" target="_blank">Xie and Tammi. 2009</a>) The method is based on a robust statistical model that describes the complete analysis procedure and allows the computation of essential confidence values for detection of CNV.

<a href="http://sv.gersteinlab.org/breakseq/" target="_blank">BreakSeq</a> (<a href="http://www.nature.com/nbt/journal/v28/n1/abs/nbt.1600.html" target="_blank">Lam et al. 2010</a>) a pipeline for annotation, classification and analysis of SVs at single nucleotide resolution.

<a href="http://bioinformatics.oxfordjournals.org/content/26/21/2776.full" target="_blank">CopyMap</a> (<a href="http://bioinformatics.oxfordjournals.org/content/26/21/2776.full" target="_blank">Zöllner 2010</a>) The program package CopyMap identifies copy number variation from oligo-hybridization and CGH data. Using a time-dependent hidden Markov model to combine evidence of copy number variants (CNVs) across multiple carriers, CopyMap is substantially more accurate than standard hidden Markov methods in identifying CNVs and calling CNV-carriers. Moreover, CopyMap provides more precise estimates of CNV-boundaries.

<a href="http://www-genepi.med.utah.edu/suppl/SLOPE/index.html" target="_blank">SLOPE</a> (<a href="http://bioinformatics.oxfordjournals.org/content/early/2010/09/27/bioinformatics.btq528" target="_blank">Abel et al. 2010</a>) A quick and accurate method for locating non-SNP structural variation from targeted next-generation sequence data.
By focusing on a small (a few kb to a few Mb) target reference sequence, SLOPE can perform fast and ﬂexible split-read alignments and determine ‘chimeric’ sequences with single-base resolution.
SLOPE aims to detect sequence breakpoints from only one side of a split read, and therefore does not rely on the insert size for detection.

<a href="http://code.google.com/p/hydra-sv/" target="_blank">HYDRA</a> (<a href="http://genome.cshlp.org/content/20/5/623.full" target="_blank">Quinlan et al. 2010</a>) Hydra detects structural variation (SV) breakpoints by clustering discordant paired-end alignments whose "signatures" corroborate the same putative breakpoint. Hydra can detect breakpoints caused by all classes of structural variation. Moreover, it was designed to detect variation in both unique and duplicated genomic regions; therefore, it will examine paired-end reads having multiple discordant alignments.

<a href="http://www.sanger.ac.uk/resources/software/cnd/" target="_blank">CnD</a> (<a href="http://bioinformatics.oxfordjournals.org/content/26/4/565.full" target="_blank">Simpson et al. 2010</a>) A copy number variant caller for inbred strains.
The target organism is assumed to be inbred, and therefore homozygous, so regions of apparent heterozygous SNPs (as called by MAQ) can be used to detect copy number gains. cnD uses both the rate of these paralogous sequence variants, and the raw sequence depth, to call copy number gains and losses using a hidden markov model.

<a href="http://sv.gersteinlab.org/age/" target="_blank">AGE</a> (<a href="http://bioinformatics.oxfordjournals.org/content/27/5/595.full" target="_blank">Abyzov and Gerstein 2011</a>) defining breakpoints of genomic structural variants at single-nucleotide resolution, through optimal alignments with gap excision.

<a href="http://sv.gersteinlab.org/cnvnator/" target="_blank">CNVnator</a> (<a href="http://genome.cshlp.org/content/early/2011/02/04/gr.114876.110.abstract" target="_blank">Abyzov et al. 2011</a>) An approach to discover, genotype and characterize typical and atypical CNVs from family and population genome sequencing.

<strong>
</strong><strong> Other relevant softwares</strong>

<a href="http://samtools.sourceforge.net/" target="_blank">SAMtools</a> SAM Tools provide various utilities for manipulating alignments in the SAM format, including sorting, merging, indexing and generating alignments in a per-position format.

<a href="http://maq.sourceforge.net/" target="_blank">Maq</a> Maq stands for Mapping and Assembly with Quality It builds assembly by mapping short reads to reference sequences.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date>2011-02-21 12:38:38</wp:post_date>
		<wp:post_date_gmt>2011-02-21 17:38:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>software-packages-for-discovering-structural-variation-with-next-generation-sequencing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="structural-variation"><![CDATA[Structural Variation]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[3031]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"3";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:1;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"3";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:2;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"3";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}i:3;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"2";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:4;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"2";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:5;a:4:{s:2:"ID";s:3:"160";s:10:"post_title";s:44:"Software packages for whole genome alignment";s:7:"matches";s:1:"2";s:9:"permalink";s:84:"http://128.192.66.53/wordpress/2011/02/software-packages-for-whole-genome-alignment/";}i:6;a:4:{s:2:"ID";s:2:"71";s:10:"post_title";s:22:"Synteny relevant links";s:7:"matches";s:1:"2";s:9:"permalink";s:62:"http://128.192.66.53/wordpress/2011/02/synteny-relevant-links/";}i:7;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"2";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}i:8;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:9;a:4:{s:2:"ID";s:3:"417";s:10:"post_title";s:99:"[Paper]A framework for variation discovery and genotyping using next-generation DNA sequencing data";s:7:"matches";s:1:"1";s:9:"permalink";s:69:"http://128.192.66.53/wordpress/2011/05/paper-genome-analysis-toolkit/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Software packages for whole genome alignment</title>
		<link>http://128.192.66.53/wordpress/?p=160</link>
		<pubDate>Wed, 23 Feb 2011 16:19:50 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=160</guid>
		<description></description>
		<content:encoded><![CDATA[<div>
<div>

More softwares and information will be added. (latest updated on 28/02/2011)

<strong>Several available tools for alignment of whole genomes.</strong>

<a href="http://users.soe.ucsc.edu/~kent/xenoAli/index.html" target="_blank">WABA</a> (<a href="http://genome.cshlp.org/content/10/8/1115.long" target="_blank">Kent and Zahler 2000</a>) Wobble Aware Bulk Aligner for cross-species whole genome alignment

<a href="http://www.bx.psu.edu/~rsharris/lastz/" target="_blank">LASTZ</a> or BLASTZ <span style="color: #ff0000;">* recommended</span> (<a href="http://genome.cshlp.org/content/13/1/103.full" target="_blank">Schwartz et al. 2003</a>) LASTZ is a program for aligning DNA sequences, a pairwise aligner. Originally designed to handle sequences the size of human chromosomes and from different species, it is also useful for sequences produced by NGS sequencing technologies such as Roche 454.

<a href="http://lagan.stanford.edu/lagan_web/index.shtml" target="_blank">LAGAN</a> (<a href="http://genome.cshlp.org/content/13/4/721.full">Brudno et al. 2003</a>) The Lagan Tookit is a set of alignment programs for comparative genomics. The three main components are a pairwise aligner (LAGAN), a multiple aligner (M-LAGAN), and a glocal aligner (Shuffle-LAGAN). All three are based on the <a href="http://www.cs.toronto.edu/~brudno/chaos/" target="_blank">CHAOS</a> local alignment tool and combine speed (regions up to several megabases can be aligned in minutes) with high accuracy. The results of the alignment can be visualized using the <a href="http://modeling.water.ca.gov/delta/models/dsm2/tools/vista/index.html" target="_blank">VISTA</a> visualization tool.

<a href="http://mummer.sourceforge.net/" target="_blank">MUMMER</a> <span style="color: #ff0000;">*recommended</span> (3 papers for 3 versions <a href="http://mummer.sourceforge.net/MUMmer.pdf" target="_blank">1.0</a>, <a href="http://mummer.sourceforge.net/MUMmer2.pdf" target="_blank">2.1</a>, <a href="http://mummer.sourceforge.net/MUMmer3.pdf" target="_blank">3.0</a>) MUMmer is a system for rapidly aligning entire genomes, whether in complete or draft form. For example, MUMmer 3.0 can find all 20-basepair or longer exact matches between a pair of 5-megabase genomes in 13.7 seconds, using 78 MB of memory, on a 2.4 GHz Linux desktop computer. MUMmer can also align incomplete genomes; it can easily handle the 100s or 1000s of contigs from a shotgun sequencing project, and will align them to another set of contigs or a genome using the NUCmer program included with the system. If the species are too divergent for a DNA sequence alignment to detect similarity, then the PROmer program can generate alignments based upon the six-frame translations of both input sequences.

<a href="http://bio.math.berkeley.edu/avid/" target="_blank">AVID</a> (or <a href="http://genome.lbl.gov/vista/downloads.shtml" target="_blank">click here</a>)(<a href="http://genome.cshlp.org/content/13/1/97.full" target="_blank">Bray et al. 2002</a>) AVID is designed to be fast, memory efficient, and practical for sequence alignments of large genomic regions up to megabases long.

<a href="http://www.genome.ist.i.kyoto-u.ac.jp/~aln_user/cgaln/" target="_blank">Cgaln</a> (<a href="http://www.biomedcentral.com/1471-2105/11/224" target="_blank">Nakato and Gotoh et al. 2010</a>) Cgaln (Coarse grained alignment) is a program designed to align a pair of whole genomic sequences of not only bacteria but also entire chromosomes of vertebrates on a nominal desktop computer. Cgaln performs an alignment job in two steps, at the block level and then at the nucleotide level. The former "coarse-grained" alignment can explore genomic rearrangements and reduce the regions to be analyzed in the next step. The latter is devoted to detailed alignment within the limited regions found in the first stage. The output of Cgaln is 'glocal' in the sense that rearrangements are taken into consideration while each alignable region is extended as long as possible. Thus, Cgaln is not only fast and memory-efficient, but also can filter noisy outputs without missing the most important homologous segment pairs.

<a href="http://last.cbrc.jp/" target="_blank">LAST</a> <span style="color: #ff0000;">**highly recommended</span> (<a href="http://genome.cshlp.org/content/early/2011/02/04/gr.113985.110" target="_blank">Kiełbasa et al. 2011</a>)
<p style="margin-bottom: 0px; font-family: 'Times New Roman'; line-height: normal; font-size: medium;">LAST can:</p>

<ul style="margin-top: 0px; font-family: 'Times New Roman'; line-height: normal; font-size: medium;">
	<li>Handle <strong>big</strong>sequence data, e.g:
<ul style="margin-top: 0px;">
	<li>Compare two vertebrate genomes</li>
	<li>Align billions of DNA reads to a genome</li>
</ul>
</li>
	<li>Indicate the <a href="http://lastweb.cbrc.jp/about.html">reliability</a> of each aligned column.</li>
	<li>Use sequence quality data <a href="http://nar.oxfordjournals.org/cgi/content/abstract/gkq010">properly</a>.</li>
	<li>Compare DNA to proteins, with frameshifts.</li>
	<li>Compare PSSMs to sequences</li>
	<li>Calculate the likelihood of chance similarities between random sequences.</li>
</ul>
<a href="http://www.sanger.ac.uk/resources/software/alfresco/" target="_blank">Alfresco</a> (<a href="http://psb.stanford.edu/psb-online/proceedings/psb08/abstracts/2008_p3.html" target="_blank">Dalca and Brudno 2008</a>) A key feature of the program is to use available analysis programs relevant to comparative genome sequence analysis, combine the results of these, and graphically present them in an intuitive way, thereby facilitating the analysis of large genomic regions.

<strong>Softwares for finding nearly identical regions in whole genomes very fast</strong>

BLAT (read everything about it on <span style="color: #0000ee;"><a href="http://en.wikipedia.org/wiki/BLAT_(bioinformatics)" target="_blank">Wikipedia</a></span> or <a href="http://genome.ucsc.edu/cgi-bin/hgBlat" target="_blank">UCSC Genome Browser</a> and <a href="http://genome.ucsc.edu/FAQ/FAQblat.html" target="_blank">FAQ</a>) (<a href="http://genome.cshlp.org/content/12/4/656" target="_blank">Kent 2002</a>) BLAT (the BLAST-Like Alignment Tool) is a software program developed by Jim Kent at UCSC to identify similarities between DNA sequences and protein sequences.BLAT is much faster than older tools such as BLAST for nucleotide and protein alignments, and it can also perform spliced alignments of RNA to DNA.

<a href="ftp://ftp.ncbi.nlm.nih.gov/blast/executables/release/LATEST">BLAST</a> (megablast) OK! Everyone knows it! Just click <a href="ftp://ftp.ncbi.nlm.nih.gov/blast/executables/release/LATEST" target="_blank">it</a> for latest version of blast. (Please keep in mind it's BLAST not BLAST+, for BLAST+, click <a href="ftp://ftp.ncbi.nlm.nih.gov/blast/executables/LATEST" target="_blank">here</a>)

<a href="http://www.sanger.ac.uk/resources/software/ssaha2/" target="_blank">SSAHA2</a> (<a href="http://genome.cshlp.org/content/11/10/1725.long" target="_blank">Ning et al 2001</a> paper about SSAHA) (Sequence Search and Alignment by Hashing Algorithm) is a pairwise sequence alignment program designed for the efficient mapping of sequencing reads onto genomic reference sequences. SSAHA2 reads of most sequencing platforms (ABI-Sanger, Roche 454, Illumina-Solexa) and a range of output formats (SAM, CIGAR, PSL etc.) are supported. A pile-up pipeline for analysis and genotype calling is available as a separate package.

</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>160</wp:post_id>
		<wp:post_date>2011-02-23 11:19:50</wp:post_date>
		<wp:post_date_gmt>2011-02-23 16:19:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>software-packages-for-whole-genome-alignment</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="alignment"><![CDATA[Alignment]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[2406]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"3";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:1;a:4:{s:2:"ID";s:2:"71";s:10:"post_title";s:22:"Synteny relevant links";s:7:"matches";s:1:"3";s:9:"permalink";s:62:"http://128.192.66.53/wordpress/2011/02/synteny-relevant-links/";}i:2;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:3;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"2";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:4;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:15:"parse gff3 file";s:7:"matches";s:1:"2";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/03/parse-gff3-file/";}i:5;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"2";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}i:6;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"2";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}i:7;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"2";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}i:8;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:9;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"1";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>N50</title>
		<link>http://128.192.66.53/wordpress/?p=199</link>
		<pubDate>Mon, 07 Mar 2011 21:52:59 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=199</guid>
		<description></description>
		<content:encoded><![CDATA[What does N50 mean? What is N50 or N90?

<strong>N50</strong> is a statistical measure of average length of a set of sequences. It is used widely in genomics, especially in reference to <a title="Contig" href="http://128.192.66.53/wordpress/2011/03/contig/" target="_blank">contig</a> or <a title="Supercontig" href="http://www.broadinstitute.org/crd/wiki/index.php/Supercontig">supercontig</a> lengths within a <a title="Draft assembly" href="http://www.broadinstitute.org/crd/wiki/index.php/Draft_assembly">draft assembly</a>.

N50 is defined as the contig length such that using equal or longer contigs produces half the bases of the genome. The N50 size is computed by sorting all contigs from largest to smallest and by determining the minimum set of contigs whose sizes total 50% of the entire genome.

Alternative definition: Given a set of sequences of varying lengths, the N50 length is defined as the length N for which 50% of all bases in the sequences are in a sequence of length L &lt; N. This can be found mathematically as follows: Take a list L of positive integers. Create another list L' , which is identical to L, except that every element n in L has been replaced with n copies of itself. Then the median of L' is the N50 of L. For example: If L = {2, 2, 2, 3, 3, 4, 8, 8}, then L' consists of six 2's, six 3's, four 4's, and sixteen 8's; the N50 of L is the median of L' , which is 6.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>199</wp:post_id>
		<wp:post_date>2011-03-07 16:52:59</wp:post_date>
		<wp:post_date_gmt>2011-03-07 21:52:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>n50</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="n50"><![CDATA[N50]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[what-does-n50-mean]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[968]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"1";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:1;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:2;a:4:{s:2:"ID";s:3:"417";s:10:"post_title";s:99:"[Paper]A framework for variation discovery and genotyping using next-generation DNA sequencing data";s:7:"matches";s:1:"1";s:9:"permalink";s:69:"http://128.192.66.53/wordpress/2011/05/paper-genome-analysis-toolkit/";}i:3;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"1";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:4;a:4:{s:2:"ID";s:3:"413";s:10:"post_title";s:52:"[Paper]De novo assembly and analysis of RNA-seq data";s:7:"matches";s:1:"1";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-assembly-and-analysis-rna-seq-data/";}i:5;a:4:{s:2:"ID";s:3:"411";s:10:"post_title";s:86:"[Paper]Full-length transcriptome assembly from RNA-Seq data without a reference genome";s:7:"matches";s:1:"1";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-full-length-transcriptome-assembly/";}i:6;a:4:{s:2:"ID";s:3:"219";s:10:"post_title";s:13:"Shotgun Reads";s:7:"matches";s:1:"1";s:9:"permalink";s:53:"http://128.192.66.53/wordpress/2011/03/shotgun-reads/";}i:7;a:4:{s:2:"ID";s:3:"213";s:10:"post_title";s:23:"Scaffold or Supercontig";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://128.192.66.53/wordpress/2011/03/scaffold-or-supercontig/";}i:8;a:4:{s:2:"ID";s:3:"206";s:10:"post_title";s:6:"Contig";s:7:"matches";s:1:"1";s:9:"permalink";s:46:"http://128.192.66.53/wordpress/2011/03/contig/";}i:9;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Contig</title>
		<link>http://128.192.66.53/wordpress/?p=206</link>
		<pubDate>Mon, 07 Mar 2011 22:02:14 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=206</guid>
		<description></description>
		<content:encoded><![CDATA[A <strong>contig</strong> is a contiguous sequence of bases that has been constructed by aligning <a href="http://128.192.66.53/wordpress/2011/03/shotgun-reads/" target="_blank">reads</a> and building consensus. Contigs are strung together, with gaps in between, to create a <a href="http://128.192.66.53/wordpress/2011/03/scaffold-or-supercontig/" target="_blank">supercontig or scaffold</a>.

Keep in mind: A supercontig or scaffold is typically comprised of hundreds of contigs, and a contig typically consists of thousands of reads.

<a href="http://128.192.66.53/wordpress/wp-content/uploads/2011/03/contigscaff2.gif"><img class="alignnone size-medium wp-image-207" title="contigscaff" src="http://128.192.66.53/wordpress/wp-content/uploads/2011/03/contigscaff2-300x189.gif" alt="" width="300" height="189" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>206</wp:post_id>
		<wp:post_date>2011-03-07 17:02:14</wp:post_date>
		<wp:post_date_gmt>2011-03-07 22:02:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>contig</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="contig"><![CDATA[Contig]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[724]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"1";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:1;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:2;a:4:{s:2:"ID";s:3:"417";s:10:"post_title";s:99:"[Paper]A framework for variation discovery and genotyping using next-generation DNA sequencing data";s:7:"matches";s:1:"1";s:9:"permalink";s:69:"http://128.192.66.53/wordpress/2011/05/paper-genome-analysis-toolkit/";}i:3;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"1";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:4;a:4:{s:2:"ID";s:3:"413";s:10:"post_title";s:52:"[Paper]De novo assembly and analysis of RNA-seq data";s:7:"matches";s:1:"1";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-assembly-and-analysis-rna-seq-data/";}i:5;a:4:{s:2:"ID";s:3:"411";s:10:"post_title";s:86:"[Paper]Full-length transcriptome assembly from RNA-Seq data without a reference genome";s:7:"matches";s:1:"1";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-full-length-transcriptome-assembly/";}i:6;a:4:{s:2:"ID";s:3:"219";s:10:"post_title";s:13:"Shotgun Reads";s:7:"matches";s:1:"1";s:9:"permalink";s:53:"http://128.192.66.53/wordpress/2011/03/shotgun-reads/";}i:7;a:4:{s:2:"ID";s:3:"213";s:10:"post_title";s:23:"Scaffold or Supercontig";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://128.192.66.53/wordpress/2011/03/scaffold-or-supercontig/";}i:8;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:3:"N50";s:7:"matches";s:1:"1";s:9:"permalink";s:43:"http://128.192.66.53/wordpress/2011/03/n50/";}i:9;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scaffold or Supercontig</title>
		<link>http://128.192.66.53/wordpress/?p=213</link>
		<pubDate>Mon, 07 Mar 2011 22:18:32 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=213</guid>
		<description></description>
		<content:encoded><![CDATA[A scaffold is a portion of the genome sequence reconstructed from end-sequenced whole-genome shotgun clones. Scaffolds are composed of <a href="http://128.192.66.53/wordpress/2011/03/contig/" target="_blank">contigs</a> and gaps.

A contig is a contiguous length of genomic sequence in which the order of bases is known to a high confidence level. Gaps occur where reads from the two sequenced ends of at least one fragment overlap with other reads in two different contigs (as long as the arrangement is otherwise consistent with the contigs being adjacent). Since the lengths of the fragments are roughly known, the number of bases between contigs can be estimated.

The goal of whole-genome shotgun assembly is to represent each genomic sequence in one scaffold; however, this is not always possible. One chromosome may be represented by many scaffolds (e.g., Chlamydomonas reinhardtii) or just a single scaffold (e.g., Human chromosome 19), depending on how completely the genome can be reconstructed, or assembled, from the available reads.  The relative locations of scaffolds in the genome are unknown.

Scaffolds are normally numbered approximately from largest to smallest. Some scaffolds may ultimately be filtered out of the assembly, resulting in skipped scaffold numbers.

In some cases, scaffolds can overlap. For example, in polymorphic genomes, regions with a high density of allelic differences between haplotypes may be split into separate sets of scaffolds, each representing one allele. Thus, a sequence that exists in only one location in the genome may appear on more than one scaffold.

<a href="http://128.192.66.53/wordpress/wp-content/uploads/2011/03/contigscaff2.gif"><img class="alignnone size-medium wp-image-207" title="contigscaff" src="http://128.192.66.53/wordpress/wp-content/uploads/2011/03/contigscaff2-300x189.gif" alt="" width="300" height="189" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>213</wp:post_id>
		<wp:post_date>2011-03-07 17:18:32</wp:post_date>
		<wp:post_date_gmt>2011-03-07 22:18:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scaffold-or-supercontig</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="short-reads"><![CDATA[Short reads]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1597]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"1";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:1;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:2;a:4:{s:2:"ID";s:3:"417";s:10:"post_title";s:99:"[Paper]A framework for variation discovery and genotyping using next-generation DNA sequencing data";s:7:"matches";s:1:"1";s:9:"permalink";s:69:"http://128.192.66.53/wordpress/2011/05/paper-genome-analysis-toolkit/";}i:3;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"1";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:4;a:4:{s:2:"ID";s:3:"413";s:10:"post_title";s:52:"[Paper]De novo assembly and analysis of RNA-seq data";s:7:"matches";s:1:"1";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-assembly-and-analysis-rna-seq-data/";}i:5;a:4:{s:2:"ID";s:3:"411";s:10:"post_title";s:86:"[Paper]Full-length transcriptome assembly from RNA-Seq data without a reference genome";s:7:"matches";s:1:"1";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-full-length-transcriptome-assembly/";}i:6;a:4:{s:2:"ID";s:3:"219";s:10:"post_title";s:13:"Shotgun Reads";s:7:"matches";s:1:"1";s:9:"permalink";s:53:"http://128.192.66.53/wordpress/2011/03/shotgun-reads/";}i:7;a:4:{s:2:"ID";s:3:"206";s:10:"post_title";s:6:"Contig";s:7:"matches";s:1:"1";s:9:"permalink";s:46:"http://128.192.66.53/wordpress/2011/03/contig/";}i:8;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:3:"N50";s:7:"matches";s:1:"1";s:9:"permalink";s:43:"http://128.192.66.53/wordpress/2011/03/n50/";}i:9;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1614</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan]]></wp:comment_author>
			<wp:comment_author_email>ryansdaughter@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>149.155.221.115</wp:comment_author_IP>
			<wp:comment_date>2012-07-19 10:32:18</wp:comment_date>
			<wp:comment_date_gmt>2012-07-19 14:32:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice but needs more diagrams to help illustrate the idea. I must have read the following at least 3 times and it still doesn't make sense intuitively

" Gaps occur where reads from the two sequenced ends of at least one fragment overlap with other reads in two different contigs (as long as the arrangement is otherwise consistent with the contigs being adjacent). "]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1342708338.83";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1342709776.55";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Shotgun Reads</title>
		<link>http://128.192.66.53/wordpress/?p=219</link>
		<pubDate>Mon, 07 Mar 2011 22:22:41 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=219</guid>
		<description></description>
		<content:encoded><![CDATA[A <strong>read</strong> is a short sequence of DNA that has been taken directly from an organism's genome. The procedure of <a title="Whole Genome Shotgun Assembly" href="http://www.broadinstitute.org/crd/wiki/index.php/Whole_Genome_Shotgun_Assembly">Whole Genome Shotgun Assembly</a> involves collecting large <a title="Libraries" href="http://www.broadinstitute.org/crd/wiki/index.php/Libraries">libraries</a> of reads and piecing them together to re-create a complete genome. Reads applied to Whole Genome Shotgun Assembly are called <strong>shotgun reads</strong>.

Reads are created by laboratory <a title="Sequencing methods" href="http://www.broadinstitute.org/crd/wiki/index.php/Sequencing_methods">sequencing methods</a> such as <a title="Sanger sequencing" href="http://www.broadinstitute.org/crd/wiki/index.php/Sanger_sequencing">Sanger sequencing</a>; the method used affects the read's length in bases, as well as its <a title="Quality scores" href="http://www.broadinstitute.org/crd/wiki/index.php/Quality_scores">quality scores</a>. For more information, see <a title="Sequencing" href="http://www.broadinstitute.org/crd/wiki/index.php/Sequencing">Sequencing</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date>2011-03-07 17:22:41</wp:post_date>
		<wp:post_date_gmt>2011-03-07 22:22:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>shotgun-reads</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="short-reads"><![CDATA[Short reads]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"1";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:1;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:2;a:4:{s:2:"ID";s:3:"417";s:10:"post_title";s:99:"[Paper]A framework for variation discovery and genotyping using next-generation DNA sequencing data";s:7:"matches";s:1:"1";s:9:"permalink";s:69:"http://128.192.66.53/wordpress/2011/05/paper-genome-analysis-toolkit/";}i:3;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"1";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:4;a:4:{s:2:"ID";s:3:"413";s:10:"post_title";s:52:"[Paper]De novo assembly and analysis of RNA-seq data";s:7:"matches";s:1:"1";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-assembly-and-analysis-rna-seq-data/";}i:5;a:4:{s:2:"ID";s:3:"411";s:10:"post_title";s:86:"[Paper]Full-length transcriptome assembly from RNA-Seq data without a reference genome";s:7:"matches";s:1:"1";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-full-length-transcriptome-assembly/";}i:6;a:4:{s:2:"ID";s:3:"213";s:10:"post_title";s:23:"Scaffold or Supercontig";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://128.192.66.53/wordpress/2011/03/scaffold-or-supercontig/";}i:7;a:4:{s:2:"ID";s:3:"206";s:10:"post_title";s:6:"Contig";s:7:"matches";s:1:"1";s:9:"permalink";s:46:"http://128.192.66.53/wordpress/2011/03/contig/";}i:8;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:3:"N50";s:7:"matches";s:1:"1";s:9:"permalink";s:43:"http://128.192.66.53/wordpress/2011/03/n50/";}i:9;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[515]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Parse gff3 file</title>
		<link>http://128.192.66.53/wordpress/?p=229</link>
		<pubDate>Tue, 08 Mar 2011 21:43:25 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=229</guid>
		<description></description>
		<content:encoded><![CDATA[Here is an example script of parsing gff3 file to get the cds sequences.

The annotation of a reference genome usually is stored as a <a href="http://gmod.org/wiki/GFF3" target="_blank">gff3 format</a> file. Most of the time, the genome sequencing group would provide CDS sequences along with the reference genome. However, sometimes they have transcripts instead of CDS, or you want to get 3'-UTR region, or 500 bp upstream sequences from the coding regions. It's a good idea to parse the gff3 files to get information you need.

If you have any questions about the script or parsing gff3 file, leave a comment. Thank you!

<script src="https://gist.github.com/4166377.js?file=parse_gff3_cds.pl"></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>229</wp:post_id>
		<wp:post_date>2011-03-08 16:43:25</wp:post_date>
		<wp:post_date_gmt>2011-03-08 21:43:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>parse-gff3-file</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="gff3"><![CDATA[GFF3]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1157]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"3";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:1;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"2";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:2;a:4:{s:2:"ID";s:3:"346";s:10:"post_title";s:45:"KEGG: Kyoto Encyclopedia of Genes and Genomes";s:7:"matches";s:1:"2";s:9:"permalink";s:44:"http://128.192.66.53/wordpress/2011/04/kegg/";}i:3;a:4:{s:2:"ID";s:3:"343";s:10:"post_title";s:8:"InterPro";s:7:"matches";s:1:"2";s:9:"permalink";s:48:"http://128.192.66.53/wordpress/2011/04/interpro/";}i:4;a:4:{s:2:"ID";s:3:"160";s:10:"post_title";s:44:"Software packages for whole genome alignment";s:7:"matches";s:1:"2";s:9:"permalink";s:84:"http://128.192.66.53/wordpress/2011/02/software-packages-for-whole-genome-alignment/";}i:5;a:4:{s:2:"ID";s:2:"71";s:10:"post_title";s:22:"Synteny relevant links";s:7:"matches";s:1:"2";s:9:"permalink";s:62:"http://128.192.66.53/wordpress/2011/02/synteny-relevant-links/";}i:6;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"2";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}i:7;a:4:{s:2:"ID";s:2:"50";s:10:"post_title";s:50:"windows下用perl操作bl2seq进行两序列比对";s:7:"matches";s:1:"2";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/02/perl-bl2seq/";}i:8;a:4:{s:2:"ID";s:2:"44";s:10:"post_title";s:42:"用perl操作Clustalw进行多序列比对";s:7:"matches";s:1:"2";s:9:"permalink";s:53:"http://128.192.66.53/wordpress/2011/02/perl-clustalw/";}i:9;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:11:"本地blast";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/02/windows-perl-blast/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1729</wp:comment_id>
			<wp:comment_author><![CDATA[Philipp]]></wp:comment_author>
			<wp:comment_author_email>philipp.schiffer@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://intron/exonsizes</wp:comment_author_url>
			<wp:comment_author_IP>134.95.132.21</wp:comment_author_IP>
			<wp:comment_date>2012-11-22 04:18:59</wp:comment_date>
			<wp:comment_date_gmt>2012-11-22 09:18:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi!

Would there be a similar way to extract exon and intron sizes per (predicted) gene from a gff3 file?

Cheers

Philipp]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353575939.37";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353638292.72";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1731</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>70.33.90.138</wp:comment_author_IP>
			<wp:comment_date>2012-11-22 21:45:00</wp:comment_date>
			<wp:comment_date_gmt>2012-11-23 02:45:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you understand gff3 format, it is quite easy to get the info you want using any programming languages. Actually, it's easier to get the exon and intron sizes than cds sequences.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1729</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353638700.81";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1732</wp:comment_id>
			<wp:comment_author><![CDATA[Philipp]]></wp:comment_author>
			<wp:comment_author_email>philipp.schiffer@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://intron/exonsizes</wp:comment_author_url>
			<wp:comment_author_IP>134.95.132.21</wp:comment_author_IP>
			<wp:comment_date>2012-11-27 11:05:12</wp:comment_date>
			<wp:comment_date_gmt>2012-11-27 16:05:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Problem was that not every gff3 file contains introns as a feature. My goals was to get a median intron size. Thus I had to calculate intron sizes for each gene by substracting exon ranges drom mRNA. Honestly in the end I had to ask a friend to write the script, after I got as far as ordering everything like that:
gene:EFV62561
mRNA    1631    2479
exon    1631    1931
exon    2313    2479
gene:EFV62560
mRNA    3838    5232
exon    5092    5232
exon    4129    5039
exon    3838    4075
gene:EFV62559
mRNA    7952    8925
exon    7952    8037
exon    8276    8388
exon    8538    8671
exon    8800    8925
gene:EFV62558
mRNA    10249   10719
exon    10249   10719
gene:EFV62557
mRNA    11025   11438
exon    11025   11150
exon    11259   11438

Cheers

Philipp]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1354032312.82";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1735</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-28 15:00:01</wp:comment_date>
			<wp:comment_date_gmt>2012-11-28 20:00:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[check out this script http://128.192.66.53/wordpress/2012/11/intron-size-gff3-perl/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1732</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1354132801.62";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>useful, essential and most often used Vim commands</title>
		<link>http://128.192.66.53/wordpress/?p=239</link>
		<pubDate>Wed, 09 Mar 2011 21:50:48 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=239</guid>
		<description></description>
		<content:encoded><![CDATA[&lt; <strong>The list of Vim commands</strong> &gt;
<div>
<table border="1" cellspacing="0" cellpadding="5">
<tbody>
<tr>
<td id="files" colspan="2"><em><strong>Working with files</strong></em></td>
</tr>
<tr>
<td><em>Vim command</em></td>
<td><em>Action</em></td>
</tr>
<tr>
<td>:e filename</td>
<td>Open a new file. You can use the Tab key for automatic file name completion, just like at the shell command prompt.</td>
</tr>
<tr>
<td>:w filename</td>
<td>Save changes to a file. If you don't specify a file name, Vim saves as the file name you were editing. For saving the file under a different name, specify the file name.</td>
</tr>
<tr>
<td>:q</td>
<td>Quit Vim. If you have unsaved changes, Vim refuses to exit.</td>
</tr>
<tr>
<td>:q!</td>
<td>Exit Vim without saving changes.</td>
</tr>
<tr>
<td>:wq</td>
<td>Write the file and exit.</td>
</tr>
<tr>
<td>: x</td>
<td>Almost the same as :wq, write the file and exit if you've made changes to the file. If you haven't made any changes to the file, Vim exits without writing the file.</td>
</tr>
<tr>
<td id="nav" colspan="2"><em><strong>Moving around in the file</strong></em></td>
</tr>
<tr>
<td colspan="2">These Vim commands and keys work both in command mode and visual mode.</td>
</tr>
<tr>
<td><em>Vim command</em></td>
<td><em>Action</em></td>
</tr>
<tr>
<td>j or Up Arrow</td>
<td>Move the cursor up one line.</td>
</tr>
<tr>
<td>k or Down Arrow</td>
<td>Down one line.</td>
</tr>
<tr>
<td>h or Left Arrow</td>
<td>Left one character.</td>
</tr>
<tr>
<td>l or Right Arrow</td>
<td>Right one character.</td>
</tr>
<tr>
<td>e</td>
<td>To the end of a word.</td>
</tr>
<tr>
<td>E</td>
<td>To the end of a whitespace-delimited word.</td>
</tr>
<tr>
<td>b</td>
<td>To the beginning of a word.</td>
</tr>
<tr>
<td>B</td>
<td>To the beginning of a whitespace-delimited word.</td>
</tr>
<tr>
<td>0</td>
<td>To the beginning of a line.</td>
</tr>
<tr>
<td>^</td>
<td>To the first non-whitespace character of a line.</td>
</tr>
<tr>
<td>$</td>
<td>To the end of a line.</td>
</tr>
<tr>
<td>H</td>
<td>To the first line of the screen.</td>
</tr>
<tr>
<td>M</td>
<td>To the middle line of the screen.</td>
</tr>
<tr>
<td>L</td>
<td>To the the last line of the screen.</td>
</tr>
<tr>
<td>:<em>n</em></td>
<td>Jump to line number <em>n</em>. For example, to jump to line 42, you'd type :42</td>
</tr>
<tr>
<td id="insert" colspan="2"><em><strong>Inserting and overwriting text</strong></em></td>
</tr>
<tr>
<td><em>Vim command</em></td>
<td><em>Action</em></td>
</tr>
<tr>
<td>i</td>
<td>Insert before cursor.</td>
</tr>
<tr>
<td>I</td>
<td>Insert to the start of the current line.</td>
</tr>
<tr>
<td>a</td>
<td>Append after cursor.</td>
</tr>
<tr>
<td>A</td>
<td>Append to the end of the current line.</td>
</tr>
<tr>
<td>o</td>
<td>Open a new line below and insert.</td>
</tr>
<tr>
<td>O</td>
<td>Open a new line above and insert.</td>
</tr>
<tr>
<td>C</td>
<td>Change the rest of the current line.</td>
</tr>
<tr>
<td>r</td>
<td>Overwrite one character. After overwriting the single character, go back to command mode.</td>
</tr>
<tr>
<td>R</td>
<td>Enter insert mode but replace characters rather than inserting.</td>
</tr>
<tr>
<td>The ESC key</td>
<td>Exit insert/overwrite mode and go back to command mode.</td>
</tr>
<tr>
<td id="delete" colspan="2"><em><strong>Deleting text</strong></em></td>
</tr>
<tr>
<td><em>Vim command</em></td>
<td><em>Action</em></td>
</tr>
<tr>
<td>x</td>
<td>Delete characters under the cursor.</td>
</tr>
<tr>
<td>X</td>
<td>Delete characters before the cursor.</td>
</tr>
<tr>
<td>dd or :d</td>
<td>Delete the current line.</td>
</tr>
<tr>
<td id="visual" colspan="2"><em><strong>Entering visual mode</strong></em></td>
</tr>
<tr>
<td><em>Vim command</em></td>
<td><em>Action</em></td>
</tr>
<tr>
<td>v</td>
<td>Start highlighting characters. Use the normal movement keys and commands to select text for highlighting.</td>
</tr>
<tr>
<td>V</td>
<td>Start highlighting lines.</td>
</tr>
<tr>
<td>The ESC key</td>
<td>Exit visual mode and return to command mode.</td>
</tr>
<tr>
<td id="visualcom" colspan="2"><em><strong>Editing blocks of text</strong></em></td>
</tr>
<tr>
<td colspan="2">Note: the Vim commands marked with (V) work in visual mode, when you've selected some text. The other commands work in the command mode, when you haven't selected any text.</td>
</tr>
<tr>
<td><em>Vim command</em></td>
<td><em>Action</em></td>
</tr>
<tr>
<td>~</td>
<td>Change the case of characters. This works both in visual and command mode. In visual mode, change the case of highlighted characters. In command mode, change the case of the character uder cursor.</td>
</tr>
<tr>
<td>&gt; (V)</td>
<td>Shift right (indent).</td>
</tr>
<tr>
<td>&lt; (V)</td>
<td>Shift left (de-indent).</td>
</tr>
<tr>
<td>c (V)</td>
<td>Change the highlighted text.</td>
</tr>
<tr>
<td>y (V)</td>
<td>Yank the highlighted text. In Windows terms, "copy the selected text to clipboard."</td>
</tr>
<tr>
<td>d (V)</td>
<td>Delete the highlighted text. In Windows terms, "cut the selected text to clipboard."</td>
</tr>
<tr>
<td>yy or :y or Y</td>
<td>Yank the current line. You don't need to highlight it first.</td>
</tr>
<tr>
<td>dd or :d</td>
<td>Delete the current line. Again, you don't need to highlight it first.</td>
</tr>
<tr>
<td>p</td>
<td>Put the text you yanked or deleted. In Windows terms, "paste the contents of the clipboard". Put characters after the cursor. Put lines below the current line.</td>
</tr>
<tr>
<td>P</td>
<td>Put characters before the cursor. Put lines above the current line.</td>
</tr>
<tr>
<td id="ooopsie" colspan="2"><em><strong>Undo and redo</strong></em></td>
</tr>
<tr>
<td><em>Vim command</em></td>
<td><em>Action</em></td>
</tr>
<tr>
<td>u</td>
<td>Undo the last action.</td>
</tr>
<tr>
<td>U</td>
<td>Undo all the latest changes that were made to the current line.</td>
</tr>
<tr>
<td>Ctrl + r</td>
<td>Redo.</td>
</tr>
<tr>
<td id="search" colspan="2"><em><strong>Search</strong></em></td>
</tr>
<tr>
<td><em>Vim command</em></td>
<td><em>Action</em></td>
</tr>
<tr>
<td>/<em>pattern</em></td>
<td>Search the file for <em>pattern</em>.</td>
</tr>
<tr>
<td>n</td>
<td>Scan for next search match in the same direction.</td>
</tr>
<tr>
<td>N</td>
<td>Scan for next search match but opposite direction.</td>
</tr>
<tr>
<td id="replace" colspan="2"><em><strong>Replace</strong></em></td>
</tr>
<tr>
<td><em>Vim command</em></td>
<td><em>Action</em></td>
</tr>
<tr>
<td>:<em>r</em>s/<em>foo</em>/<em>bar</em>/<em>a</em></td>
<td>Substitute <em>foo</em> with <em>bar</em>. <em>r</em> determines the range and <em>a</em> determines the arguments.</td>
</tr>
<tr>
<td colspan="2">The range (<em>r</em>) can be</td>
</tr>
<tr>
<td>nothing</td>
<td>Work on current line only.</td>
</tr>
<tr>
<td>number</td>
<td>Work on the line whose number you give.</td>
</tr>
<tr>
<td>%</td>
<td>The whole file.</td>
</tr>
<tr>
<td colspan="2">Arguments (<em>a</em>) can be</td>
</tr>
<tr>
<td>g</td>
<td>Replace all occurrences in the line. Without this, Vim replaces only the first occurrences in each line.</td>
</tr>
<tr>
<td>i</td>
<td>Ignore case for the search pattern.</td>
</tr>
<tr>
<td>I</td>
<td>Don't ignore case.</td>
</tr>
<tr>
<td>c</td>
<td>Confirm each substitution. You can type y to substitute this match, n to skip this match, a to substitute this and all the remaining matches ("Yes to all"), and q to quit substitution.</td>
</tr>
<tr>
<td colspan="2">Examples</td>
</tr>
<tr>
<td>:452s/<em>foo</em>/<em>bar</em>/</td>
<td>Replace the first occurrence of the word <em>foo</em> with <em>bar</em> on line number 452.</td>
</tr>
<tr>
<td>:s/<em>foo</em>/<em>bar</em>/g</td>
<td>Replace every occurrence of the word <em>foo</em> with <em>bar</em> on current line.</td>
</tr>
<tr>
<td>:%s/<em>foo</em>/<em>bar</em>/g</td>
<td>Replace every occurrence of the word <em>foo</em> with <em>bar</em> in the whole file.</td>
</tr>
<tr>
<td>:%s/<em>foo</em>/<em>bar</em>/gi</td>
<td>The same as above, but ignore the case of the pattern you want to substitute. This replaces <em>foo</em>, <em>FOO</em>, <em>Foo</em>, and so on.</td>
</tr>
<tr>
<td>:%s/<em>foo</em>/<em>bar</em>/gc</td>
<td>Confirm every substitution.</td>
</tr>
<tr>
<td>:%s/<em>foo</em>/<em>bar</em>/c</td>
<td>For each line on the file, replace the first occurrence of <em>foo</em> with <em>bar</em> and confirm every substitution.</td>
</tr>
</tbody>
</table>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>239</wp:post_id>
		<wp:post_date>2011-03-09 16:50:48</wp:post_date>
		<wp:post_date_gmt>2011-03-09 21:50:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>vim-commands</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="vim"><![CDATA[Vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:42:"ubuntu下终端路径只显示当前目录";s:7:"matches";s:1:"2";s:9:"permalink";s:65:"http://128.192.66.53/wordpress/2011/03/ubuntu-terminal-directory/";}i:1;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:2;a:4:{s:2:"ID";s:3:"382";s:10:"post_title";s:27:"Fedora下配置VNC服务器";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://128.192.66.53/wordpress/2011/04/fedora-vncserver/";}i:3;a:4:{s:2:"ID";s:3:"331";s:10:"post_title";s:59:"google.pl - command line google search in a shell with perl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/04/google-search-perl/";}i:4;a:4:{s:2:"ID";s:3:"324";s:10:"post_title";s:23:"MySql常用命令总结";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/mysql-common-command/";}i:5;a:4:{s:2:"ID";s:3:"321";s:10:"post_title";s:30:"linux 查看系统信息命令";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/linux-system-command/";}i:6;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:7;a:4:{s:2:"ID";s:2:"69";s:10:"post_title";s:12:"note of java";s:7:"matches";s:1:"1";s:9:"permalink";s:52:"http://128.192.66.53/wordpress/2011/02/note-of-java/";}i:8;a:4:{s:2:"ID";s:2:"66";s:10:"post_title";s:16:"learning java #1";s:7:"matches";s:1:"1";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/02/learning-java-1/";}i:9;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"1";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[616]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ubuntu下终端路径只显示当前目录</title>
		<link>http://128.192.66.53/wordpress/?p=271</link>
		<pubDate>Sat, 19 Mar 2011 01:12:18 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=271</guid>
		<description></description>
		<content:encoded><![CDATA[.bashrc文件记录了用户终端配置
<pre>$: sudo vim ~/.bashrc
</pre>
在文件中找到
<pre>if [ "$color_prompt " = yes ]; then
PS1 ='${debian_chroot:+($debian_chroot)}[ 33[01;32m]u@h[ 33[00m]:[ 33[01;34m]<span style="color: #ff0000;">W</span> [ 33[00m]$ '
else
PS1 ='${debian_chroot:+($debian_chroot)}u@h:<span style="color: #ff0000;">W</span> $ '
</pre>
将红色的w由小写改成大写，可以表示只显示当前目录名称
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>271</wp:post_id>
		<wp:post_date>2011-03-18 21:12:18</wp:post_date>
		<wp:post_date_gmt>2011-03-19 01:12:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ubuntu-terminal-directory</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="terminal"><![CDATA[Terminal]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:50:"useful, essential and most often used Vim commands";s:7:"matches";s:1:"2";s:9:"permalink";s:52:"http://128.192.66.53/wordpress/2011/03/vim-commands/";}i:1;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:2;a:4:{s:2:"ID";s:3:"382";s:10:"post_title";s:27:"Fedora下配置VNC服务器";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://128.192.66.53/wordpress/2011/04/fedora-vncserver/";}i:3;a:4:{s:2:"ID";s:3:"331";s:10:"post_title";s:59:"google.pl - command line google search in a shell with perl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/04/google-search-perl/";}i:4;a:4:{s:2:"ID";s:3:"324";s:10:"post_title";s:23:"MySql常用命令总结";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/mysql-common-command/";}i:5;a:4:{s:2:"ID";s:3:"321";s:10:"post_title";s:30:"linux 查看系统信息命令";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/linux-system-command/";}i:6;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:7;a:4:{s:2:"ID";s:2:"69";s:10:"post_title";s:12:"note of java";s:7:"matches";s:1:"1";s:9:"permalink";s:52:"http://128.192.66.53/wordpress/2011/02/note-of-java/";}i:8;a:4:{s:2:"ID";s:2:"66";s:10:"post_title";s:16:"learning java #1";s:7:"matches";s:1:"1";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/02/learning-java-1/";}i:9;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"1";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1106]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MizBee: A Multiscale Synteny Browser</title>
		<link>http://128.192.66.53/wordpress/?p=274</link>
		<pubDate>Tue, 22 Mar 2011 00:48:46 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=274</guid>
		<description></description>
		<content:encoded><![CDATA[<pre><strong>multi-platform (based on java), user-friendly,  no requirements for installation and run, and more remarkably, easier than <a href="http://mkweb.bcgsc.ca/circos/" target="_blank">Circos</a>.</strong></pre>
<a href="http://www.cs.utah.edu/~miriah/mizbee/Overview.html" target="_blank">MizBee</a> is a multiscale synteny browser for exploring conservation relationships in comparative genomics data. Using side-by-side linked views, MizBee enables efficient data browsing across a range of scales, from the genome to the gene. The design of MizBee is grounded in perceptual principles, and includes several techniques such as edge bundling and layering to enhance visual cues about conservation relationships related to proximity, size, similarity, and orientation.

<img class="alignnone" title="mizbee" src="http://www.cs.utah.edu/~miriah/mizbee/Overview_files/fish_overview.jpg" alt="" width="550" height="355" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>274</wp:post_id>
		<wp:post_date>2011-03-21 20:48:46</wp:post_date>
		<wp:post_date_gmt>2011-03-22 00:48:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>mizbee-a-multiscale-synteny-browser</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="comparative-genomics"><![CDATA[Comparative Genomics]]></category>
		<category domain="post_tag" nicename="evolution"><![CDATA[Evolution]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="mizbee"><![CDATA[Mizbee]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="synteny"><![CDATA[Synteny]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[527]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:3:"280";s:10:"post_title";s:32:"i-ADHoRe: Detect Synteny Regions";s:7:"matches";s:1:"3";s:9:"permalink";s:71:"http://128.192.66.53/wordpress/2011/03/i-adhore-detect-synteny-regions/";}i:1;a:4:{s:2:"ID";s:2:"71";s:10:"post_title";s:22:"Synteny relevant links";s:7:"matches";s:1:"3";s:9:"permalink";s:62:"http://128.192.66.53/wordpress/2011/02/synteny-relevant-links/";}i:2;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:3;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"1";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:4;a:4:{s:2:"ID";s:3:"291";s:10:"post_title";s:36:"MCL - a cluster algorithm for graphs";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://128.192.66.53/wordpress/2011/03/mcl-a-cluster-algorithm-for-graphs/";}i:5;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:6;a:4:{s:2:"ID";s:3:"160";s:10:"post_title";s:44:"Software packages for whole genome alignment";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://128.192.66.53/wordpress/2011/02/software-packages-for-whole-genome-alignment/";}i:7;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}i:8;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"1";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>i-ADHoRe: Detect Synteny Regions</title>
		<link>http://128.192.66.53/wordpress/?p=280</link>
		<pubDate>Tue, 22 Mar 2011 00:59:29 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=280</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://bioinformatics.psb.ugent.be/software/details/i--ADHoRe" target="_blank">i-ADHoRe</a> is a highly sensitive software tool to detect degenerated homology relations within and between different genomes.

The i-ADHoRe algorithm is based on the initial ADHoRe algorithm. After detecting initial pairs of colinear segments using the basic ADHoRe algorithm, these pairs are aligned to each other to form a profile that combines their gene order and content information. This profile is then used to detect additional homologous segments that show conserved gene order and content when compared to the profile rather than individual segments. If such an additional segment is discovered, it is included in the profile as well and the search is repeated until no additional segments can be found. All results are outputted in tab delimited text files.

<a href="http://bioinformatics.psb.ugent.be/webtools/i-adhore/licensing/" target="_blank">Download</a>

Simillion, C., Janssens, K., Sterck, L., Van de Peer, Y. (2008) i-ADHoRe 2.0: An improved tool to detect degenerated genomic homology using genomic profiles. Bioinformatics 24, 127-8. <a href="http://bioinformatics.oxfordjournals.org/content/24/1/127" target="_blank">doi</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>280</wp:post_id>
		<wp:post_date>2011-03-21 20:59:29</wp:post_date>
		<wp:post_date_gmt>2011-03-22 00:59:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>i-adhore-detect-synteny-regions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="comparative-genomics"><![CDATA[Comparative Genomics]]></category>
		<category domain="post_tag" nicename="evolution"><![CDATA[Evolution]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="synteny"><![CDATA[Synteny]]></category>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:3:"274";s:10:"post_title";s:36:"MizBee: A Multiscale Synteny Browser";s:7:"matches";s:1:"3";s:9:"permalink";s:75:"http://128.192.66.53/wordpress/2011/03/mizbee-a-multiscale-synteny-browser/";}i:1;a:4:{s:2:"ID";s:2:"71";s:10:"post_title";s:22:"Synteny relevant links";s:7:"matches";s:1:"3";s:9:"permalink";s:62:"http://128.192.66.53/wordpress/2011/02/synteny-relevant-links/";}i:2;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:3;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"1";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:4;a:4:{s:2:"ID";s:3:"291";s:10:"post_title";s:36:"MCL - a cluster algorithm for graphs";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://128.192.66.53/wordpress/2011/03/mcl-a-cluster-algorithm-for-graphs/";}i:5;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:6;a:4:{s:2:"ID";s:3:"160";s:10:"post_title";s:44:"Software packages for whole genome alignment";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://128.192.66.53/wordpress/2011/02/software-packages-for-whole-genome-alignment/";}i:7;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}i:8;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"1";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[669]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MCL - a cluster algorithm for graphs</title>
		<link>http://128.192.66.53/wordpress/?p=291</link>
		<pubDate>Tue, 22 Mar 2011 21:31:19 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=291</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>The <strong><a href="http://www.micans.org/mcl/" target="_blank">MCL</a> </strong>can be used to cluster/group similar genes into gene families from BLAST (<strong>not BLAST+</strong>)  <a href="http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/" target="_blank">-m 8</a> output file.

TribeMCL is not available now.

<a href="http://www.orthomcl.org/cgi-bin/OrthoMclWeb.cgi" target="_blank">OrthoMCL</a> is a more powerful software based on MCL for grouping orthologous protein sequences</pre>
The <strong><a href="http://www.micans.org/mcl/" target="_blank">MCL</a> algorithm</strong> is short for the <strong>Markov Cluster Algorithm</strong>, a fast and scalable unsupervised cluster algorithm for networks (also known as <em>graphs</em>) based on simulation of (stochastic) flow in graphs. The algorithm was invented/<a href="http://www.micans.org/mcl/sec_discovery.html">discovered</a> by <a href="http://micans.org/stijn/" target="_blank">Stijn van Dongen</a> at the <a href="http://www.cwi.nl/" target="_parent">Centre for Mathematics and Computer Science</a> (also known as CWI) in the Netherlands. The PhD thesis <a href="http://www.micans.org/mcl/sec_thesisetc.html"><em>Graph clustering by flow simulation</em></a> is centered around this algorithm, the main topics being the mathematical theory behind it, its position in cluster analysis and graph clustering, issues concerning scalability, implementation, and benchmarking, and performance criteria for graph clustering in general. The work for this thesis was carried out under supervision of <a href="http://www.cwi.nl/~jve/" target="_parent">Jan van Eijck</a> and <a href="http://www.cwi.nl/~mich/" target="_parent">Michiel Hazewinkel</a>.
<h3>Protocol: Clustering similarity graphs encoded in BLAST results</h3>
First we create an ABC-formatted file using the external columnar BLAST format, which is assumed to be in a file called seq.cblast.
<pre>cut -f 1,2,11 seq.cblast &gt; seq.abc</pre>
The columnar format in the file seq.cblast has, for a given BLAST hit, the sequence labels in the first two columns and the asssociated E-value in column 11. It is parsed by the standard UNIX cut utility. The format must have been created with the BLAST -m8 option so that no comment lines are present. Alternatively these can be filtered out using grep.
The newly created seq.abc file is loaded by mcxload, which writes both a network file seq.mci and a dictionary file seq.tab.
<pre>mcxload -abc seq.abc --stream-mirror --stream-neg-log10 -stream-tf 'ceil(200)' -o seq.mci -write-tab seq.tab</pre>
The --stream-mirror option ensures that the resulting network will be undirected, as recommended when using mcl. Omitting this option would result in a directed network as BLAST E-values generally differ between two sequences. The default course of action for mcxload is to use the best value found between a pair of labels. The next option, --abc-neg-log10 tranforms the numerical values in the input (the BLAST E-values) by taking the logarithm in base 10 and subsequently negating the sign. Finally, the transformed values are capped so that any E-value below 1e-200 is set to a maximum allowed edge weight of 200.
To obtain clusterings from seq.mci and seq.tab one has two choices. The first is to generate an abstract clustering representation and from that obtain the label output, as follows. Below the -o option is not used, so mcl will create meaningful and unique output names by itself. The default way of doing this is to preprend the prefix out. and to append a suffix encoding the inflation value used, with inflation encoded using two digits of precision and the decimal separator removed.
<pre>mcl seq.mci -I 1.4
mcl seq.mci -I 2
mcl seq.mci -I 4
mcl seq.mci -I 6

mcxdump -icl out.seq.mci.I14 -tabr seq.tab -o dump.seq.mci.I14
mcxdump -icl out.seq.mci.I20 -tabr seq.tab -o dump.seq.mci.I20
mcxdump -icl out.seq.mci.I40 -tabr seq.tab -o dump.seq.mci.I40
mcxdump -icl out.seq.mci.I60 -tabr seq.tab -o dump.seq.mci.I60</pre>
Now the file out.seq.tab.I14 and its associates can be used for example to compute the distances between the encoded clusterings with clm dist, to compute a set of strictly reconciled nested clusterings with clm order, or to compute an efficiency criterion with clm info.
Alternatively, label output can be obtained directly from mcl as follows.
<pre>mcl seq.mci -I 1.4  -use-tab seq.tab
mcl seq.mci -I 2  -use-tab seq.tab
mcl seq.mci -I 4  -use-tab seq.tab
mcl seq.mci -I 6  -use-tab seq.tab</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>291</wp:post_id>
		<wp:post_date>2011-03-22 17:31:19</wp:post_date>
		<wp:post_date_gmt>2011-03-22 21:31:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>mcl-a-cluster-algorithm-for-graphs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="blast"><![CDATA[Blast]]></category>
		<category domain="post_tag" nicename="clustering"><![CDATA[Clustering]]></category>
		<category domain="post_tag" nicename="gene-family"><![CDATA[Gene family]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="mcl"><![CDATA[MCL]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"2";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:1;a:4:{s:2:"ID";s:3:"524";s:10:"post_title";s:61:"perl脚本提取BLAST结果中的信息【以tblastn为例】";s:7:"matches";s:1:"1";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/08/parse-blast/";}i:2;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:3;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"1";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:4;a:4:{s:2:"ID";s:3:"280";s:10:"post_title";s:32:"i-ADHoRe: Detect Synteny Regions";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://128.192.66.53/wordpress/2011/03/i-adhore-detect-synteny-regions/";}i:5;a:4:{s:2:"ID";s:3:"274";s:10:"post_title";s:36:"MizBee: A Multiscale Synteny Browser";s:7:"matches";s:1:"1";s:9:"permalink";s:75:"http://128.192.66.53/wordpress/2011/03/mizbee-a-multiscale-synteny-browser/";}i:6;a:4:{s:2:"ID";s:3:"160";s:10:"post_title";s:44:"Software packages for whole genome alignment";s:7:"matches";s:1:"1";s:9:"permalink";s:84:"http://128.192.66.53/wordpress/2011/02/software-packages-for-whole-genome-alignment/";}i:7;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}i:8;a:4:{s:2:"ID";s:2:"71";s:10:"post_title";s:22:"Synteny relevant links";s:7:"matches";s:1:"1";s:9:"permalink";s:62:"http://128.192.66.53/wordpress/2011/02/synteny-relevant-links/";}i:9;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"1";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1519]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Notes on using BLAST</title>
		<link>http://128.192.66.53/wordpress/?p=292</link>
		<pubDate>Tue, 22 Mar 2011 21:20:42 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=292</guid>
		<description></description>
		<content:encoded><![CDATA[BLAST (<strong>not BLAST+</strong>) provides an option for tabular output that is easily parsed. Use the -m 8 option for tabular output, or the -m 9 option to include headers.
<pre>blastall -i input.fa -d /path/to/db.fa -p blastn -m 8</pre>
Assumes that db.fa is in a directory that also has a correctly formatted database. This can be achieved by:
<pre>formatdb -i db.fa -p F</pre>
The fields for tabular BLAST output are:
<div>
<table>
<tbody>
<tr>
<td>1</td>
<td>Query</td>
<td>The query sequence id</td>
</tr>
<tr>
<td>2</td>
<td>Subject</td>
<td>The matching subject sequence id</td>
</tr>
<tr>
<td>3</td>
<td>% id</td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>alignment length</td>
<td></td>
</tr>
<tr>
<td>5</td>
<td>mistmatches</td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>gap openings</td>
<td></td>
</tr>
<tr>
<td>7</td>
<td>q.start</td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>q.end</td>
<td></td>
</tr>
<tr>
<td>9</td>
<td>s.start</td>
<td></td>
</tr>
<tr>
<td>10</td>
<td>s.end</td>
<td></td>
</tr>
<tr>
<td>11</td>
<td>e-value</td>
<td></td>
</tr>
<tr>
<td>12</td>
<td>bit score</td>
<td></td>
</tr>
</tbody>
</table>
</div>
Parse the information:

Python

[python]
for line in open(“myfile.blast”):
(queryId, subjectId, percIdentity, alnLength, mismatchCount, gapOpenCount, queryStart, queryEnd, subjectStart, subjectEnd, eVal, bitScore) = line.split(“t”)
[/python]

Perl

[perl]
while (&lt;&gt;) {
($queryId, $subjectId, $percIdentity, $alnLength, $mismatchCount, $gapOpenCount, $queryStart, $queryEnd, $subjectStart, $subjectEnd, $eVal, $bitScore) = split(/t/)
}[/perl]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>292</wp:post_id>
		<wp:post_date>2011-03-22 17:20:42</wp:post_date>
		<wp:post_date_gmt>2011-03-22 21:20:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>notes-on-using-blast</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="blast"><![CDATA[Blast]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[583]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"2";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:1;a:4:{s:2:"ID";s:3:"291";s:10:"post_title";s:36:"MCL - a cluster algorithm for graphs";s:7:"matches";s:1:"2";s:9:"permalink";s:74:"http://128.192.66.53/wordpress/2011/03/mcl-a-cluster-algorithm-for-graphs/";}i:2;a:4:{s:2:"ID";s:3:"160";s:10:"post_title";s:44:"Software packages for whole genome alignment";s:7:"matches";s:1:"2";s:9:"permalink";s:84:"http://128.192.66.53/wordpress/2011/02/software-packages-for-whole-genome-alignment/";}i:3;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"2";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}i:4;a:4:{s:2:"ID";s:2:"71";s:10:"post_title";s:22:"Synteny relevant links";s:7:"matches";s:1:"2";s:9:"permalink";s:62:"http://128.192.66.53/wordpress/2011/02/synteny-relevant-links/";}i:5;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"2";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}i:6;a:4:{s:2:"ID";s:2:"50";s:10:"post_title";s:50:"windows下用perl操作bl2seq进行两序列比对";s:7:"matches";s:1:"2";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/02/perl-bl2seq/";}i:7;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:11:"本地blast";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/02/windows-perl-blast/";}i:8;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:9;a:4:{s:2:"ID";s:3:"524";s:10:"post_title";s:61:"perl脚本提取BLAST结果中的信息【以tblastn为例】";s:7:"matches";s:1:"1";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/08/parse-blast/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>linux 查看系统信息命令</title>
		<link>http://128.192.66.53/wordpress/?p=321</link>
		<pubDate>Thu, 24 Mar 2011 16:53:31 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=321</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>系统</strong>
<pre>uname -a               # 查看内核/操作系统/CPU信息
head -n 1 /etc/issue   # 查看操作系统版本
cat /proc/cpuinfo      # 查看CPU信息
hostname               # 查看计算机名
lspci -tv              # 列出所有PCI设备
lsusb -tv              # 列出所有USB设备
lsmod                  # 列出加载的内核模块
env                    # 查看环境变量</pre>
<strong>资源</strong>
<pre>free -m                # 查看内存使用量和交换区使用量
df -h                  # 查看各分区使用情况
du -sh &lt;目录名&gt;        # 查看指定目录的大小
grep MemTotal /proc/meminfo   # 查看内存总量
grep MemFree /proc/meminfo    # 查看空闲内存量
uptime                 # 查看系统运行时间、用户数、负载
cat /proc/loadavg      # 查看系统负载</pre>
<strong>磁盘和分区</strong>
<pre>mount | column -t      # 查看挂接的分区状态
fdisk -l               # 查看所有分区
swapon -s              # 查看所有交换分区
hdparm -i /dev/hda     # 查看磁盘参数(仅适用于IDE设备)
dmesg | grep IDE       # 查看启动时IDE设备检测状况</pre>
<strong>网络</strong>
<pre>ifconfig               # 查看所有网络接口的属性
iptables -L            # 查看防火墙设置
route -n               # 查看路由表
netstat -lntp          # 查看所有监听端口
netstat -antp          # 查看所有已经建立的连接
netstat -s             # 查看网络统计信息</pre>
<strong>进程</strong>
<pre>ps -ef                 # 查看所有进程
top                    # 实时显示进程状态</pre>
<strong>用户</strong>
<pre>w                      # 查看活动用户
id &lt;用户名&gt;            # 查看指定用户信息
last                   # 查看用户登录日志
cut -d: -f1 /etc/passwd   # 查看系统所有用户
cut -d: -f1 /etc/group    # 查看系统所有组
crontab -l             # 查看当前用户的计划任务</pre>
<strong>服务</strong>
<pre>chkconfig --list       # 列出所有系统服务
chkconfig --list | grep on    # 列出所有启动的系统服务</pre>
<strong>程序</strong>
<pre>rpm -qa                # 查看所有安装的软件包</pre>
另外<a href="http://www.pixelbeat.org/cmdline.html">这里</a>还有非常多的命令， 可以作为参考。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>321</wp:post_id>
		<wp:post_date>2011-03-24 12:53:31</wp:post_date>
		<wp:post_date_gmt>2011-03-24 16:53:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>linux-system-command</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="command"><![CDATA[Command]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="system"><![CDATA[System]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[linux-%e6%9f%a5%e7%9c%8b%e7%b3%bb%e7%bb%9f%e4%bf%a1%e6%81%af%e5%91%bd%e4%bb%a4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:3:"324";s:10:"post_title";s:23:"MySql常用命令总结";s:7:"matches";s:1:"2";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/mysql-common-command/";}i:1;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:2;a:4:{s:2:"ID";s:3:"382";s:10:"post_title";s:27:"Fedora下配置VNC服务器";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://128.192.66.53/wordpress/2011/04/fedora-vncserver/";}i:3;a:4:{s:2:"ID";s:3:"331";s:10:"post_title";s:59:"google.pl - command line google search in a shell with perl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/04/google-search-perl/";}i:4;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:42:"ubuntu下终端路径只显示当前目录";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://128.192.66.53/wordpress/2011/03/ubuntu-terminal-directory/";}i:5;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:50:"useful, essential and most often used Vim commands";s:7:"matches";s:1:"1";s:9:"permalink";s:52:"http://128.192.66.53/wordpress/2011/03/vim-commands/";}i:6;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"1";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}i:7;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"1";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}i:8;a:4:{s:2:"ID";s:2:"54";s:10:"post_title";s:25:"Introduction to Using PBS";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://128.192.66.53/wordpress/2011/02/introduction-to-using-pbs/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[497]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MySql常用命令总结</title>
		<link>http://128.192.66.53/wordpress/?p=324</link>
		<pubDate>Thu, 24 Mar 2011 16:58:34 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=324</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>一、连接MYSQL。</strong>

格式： mysql -h主机地址 -u用户名 －p用户密码

1、例1：连接到本机上的MYSQL。

首先在打开DOS窗口，然后进入目录 mysqlbin，再键入命令mysql -uroot -p，回车后提示你输密码，如果刚安装好MYSQL，超级用户root是没有密码的，故直接回车即可进入到MYSQL中了，MYSQL的提示符是：mysql&gt;

2、例2：连接到远程主机上的MYSQL。假设远程主机的IP为：110.110.110.110，用户名为root,密码为abcd123。则键入以下命令：

mysql -h110.110.110.110 -uroot -pabcd123

（注:u与root可以不用加空格，其它也一样）

3、退出MYSQL命令： exit （回车）

other:
<pre>
Use yum to install both mysql command line tool and the server:
yum -y install mysql mysql-server
Enable the MySQL service:
/sbin/chkconfig mysqld on
Start the MySQL server:
/sbin/service mysqld start
Set the MySQL root password:
mysqladmin -u root password 'new-password'The quotes around the new password are required.
log on mysql:
mysql -h 127.0.0.1 -u user_name -p
mysqld --basedir=/ --datadir=/usr/local/mysql/data --user=mysql --pid-file=/usr/local/mysql/data/RFSIM.pid --skip-external-locking --port=3306 --socket=/tmp/mysql.sock
</pre>

出现"/var/lib/mysql/mysql.sock“不存在的解决方法
1、
创建/修改文件 /etc/my.cnf，至少增加/修改一行
[mysql]
[client]
socket = /tmp/mysql.sock
#在这里写上你的mysql.sock的正确位置，通常不是在 /tmp/ 下就是在 /var/lib/mysql/ 下
2、
指定IP地址，使用tcp方式连接mysql，而不使用本地sock方式
#mysql -h127.0.0.1 -uuser -ppassword
3、
为 mysql.sock 加个连接，比如说实际的mysql.sock在 /tmp/ 下，则
#ln -s /tmp/mysql.sock /var/lib/mysql/mysql.sock即可


<strong>二、修改密码。</strong>

格式：mysqladmin -u用户名 -p旧密码 password 新密码

1、例1：给root加个密码ab12。首先在DOS下进入目录mysqlbin，然后键入以下命令

mysqladmin -uroot -password ab12

注：因为开始时root没有密码，所以-p旧密码一项就可以省略了。

2、例2：再将root的密码改为djg345。

mysqladmin -uroot -pab12 password djg345

<strong>三、增加新用户。</strong>（注意：和上面不同，下面的因为是MYSQL环境中的命令，所以后面都带一个分号作为命令结束符）

格式：grant select on 数据库.* to 用户名@登录主机 identified by "密码"

例1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。首先用以root用户连入MYSQL，然后键入以下命令：

grant select,insert,update,delete on *.* to test1@"%" Identified by "abc";

但例1增加的用户是十分危险的，你想如某个人知道test1的密码，那么他就可以在internet上的任何一台电脑上登录你的mysql数据库并对你的数据可以为所欲为了，解决办法见例2。

例2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机），这样用户即使用知道test2的密码，他也无法从internet上直接访问数据库，只能通过MYSQL主机上的web页来访问了。

grant select,insert,update,delete on mydb.* to test2@localhost identified by "abc";

如果你不想test2有密码，可以再打一个命令将密码消掉。

grant select,insert,update,delete on mydb.* to test2@localhost identified by "";

在上篇我们讲了登录、增加用户、密码更改等问题。下篇我们来看看MYSQL中有关数据库方面的操作。注意：你必须首先登录到MYSQL中，以下操作都是在MYSQL的提示符下进行的，而且每个命令以分号结束。

<strong>一、操作技巧</strong>

1、如果你打命令时，回车后发现忘记加分号，你无须重打一遍命令，只要打个分号回车就可以了。也就是说你可以把一个完整的命令分成几行来打，完后用分号作结束标志就OK。

2、你可以使用光标上下键调出以前的命令。但以前我用过的一个MYSQL旧版本不支持。我现在用的是mysql-3.23.27-beta-win。

<strong>二、显示命令</strong>

1、显示数据库列表。

show databases;

刚开始时才两个数据库：mysql和test。mysql库很重要它里面有MYSQL的系统信息，我们改密码和新增用户，实际上就是用这个库进行操作。

2、显示库中的数据表：

use mysql； ／／打开库，学过FOXBASE的一定不会陌生吧

show tables;

3、显示数据表的结构：

describe 表名;

4、建库：

create database 库名;

5、建表：

use 库名；

create table 表名 (字段设定列表)；

6、删库和删表:

drop database 库名;

drop table 表名；

7、将表中记录清空：

delete from 表名;

8、显示表中的记录：

select * from 表名;

<strong>三、一个建库和建表以及插入数据的实例</strong>

&nbsp;

<pre>drop database if exists school; //如果存在SCHOOL则删除 
create database school; //建立库SCHOOL 
use school; //打开库SCHOOL 
create table teacher //建立表TEACHER 
( 
id int(3) auto_increment not null primary key, 
name char(10) not null, 
address varchar(50) default '深圳', 
year date 
); //建表结束 
//以下为插入字段 
insert into teacher values('','glchengang','深圳一中','1976-10-10'); 
insert into teacher values('','jack','深圳一中','1975-12-23');</pre>

注：在建表中（1）将ID设为长度为3的数字字段:int(3)并让它每个记录自动加一:auto_increment并不能为空:not null而且让他成为主字段primary key（2）将NAME设为长度为10的字符字段（3）将ADDRESS设为长度50的字符字段，而且缺省值为深圳。varchar和char有什么区别呢，只有等以后的文章再说了。（4）将YEAR设为日期字段。

如果你在mysql提示符键入上面的命令也可以，但不方便调试。你可以将以上命令原样写入一个文本文件中假设为school.sql，然后复制到c:\下，并在DOS状态进入目录\mysql\bin，然后键入以下命令：

mysql -uroot -p密码 &lt; c:\school.sql

如果成功，空出一行无任何显示；如有错误，会有提示。（以上命令已经调试，你只要将//的注释去掉即可使用）。

<strong>四、将文本数据转到数据库中</strong>

1、文本数据应符合的格式：字段数据之间用tab键隔开，null值用\n来代替.

例：

3 rose 深圳二中 1976-10-10

4 mike 深圳一中 1975-12-23

2、数据传入命令 load data local infile "文件名" into table 表名;

注意：你最好将文件复制到\mysql\bin目录下，并且要先用use命令打表所在的库。

<strong>五、备份数据库：</strong>（命令在DOS的\mysql\bin目录下执行）

mysqldump --opt school&gt;school.bbb

注释:将数据库school备份到school.bbb文件，school.bbb是一个文本文件，文件名任取，打开看看你会有新发现。

后记：其实MYSQL的对数据库的操作与其它的SQL类数据库大同小异，您最好找本将SQL的书看看。我在这里只介绍一些基本的，其实我也就只懂这些了，呵呵。最好的MYSQL教程还是"晏子"译的"MYSQL中文参考手册"不仅免费每个相关网站都有下载，而且它是最权威的。可惜不是象"PHP4中文手册"那样是chm的格式，在查找函数命令的时候不太方便。

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>324</wp:post_id>
		<wp:post_date>2011-03-24 12:58:34</wp:post_date>
		<wp:post_date_gmt>2011-03-24 16:58:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>mysql-common-command</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="command"><![CDATA[Command]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="mysql"><![CDATA[Mysql]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[639]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:3:"321";s:10:"post_title";s:30:"linux 查看系统信息命令";s:7:"matches";s:1:"2";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/linux-system-command/";}i:1;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:2;a:4:{s:2:"ID";s:3:"382";s:10:"post_title";s:27:"Fedora下配置VNC服务器";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://128.192.66.53/wordpress/2011/04/fedora-vncserver/";}i:3;a:4:{s:2:"ID";s:3:"331";s:10:"post_title";s:59:"google.pl - command line google search in a shell with perl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/04/google-search-perl/";}i:4;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:42:"ubuntu下终端路径只显示当前目录";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://128.192.66.53/wordpress/2011/03/ubuntu-terminal-directory/";}i:5;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:50:"useful, essential and most often used Vim commands";s:7:"matches";s:1:"1";s:9:"permalink";s:52:"http://128.192.66.53/wordpress/2011/03/vim-commands/";}i:6;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"1";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}i:7;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"1";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}i:8;a:4:{s:2:"ID";s:2:"54";s:10:"post_title";s:25:"Introduction to Using PBS";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://128.192.66.53/wordpress/2011/02/introduction-to-using-pbs/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>google.pl - command line google search in a shell with perl</title>
		<link>http://128.192.66.53/wordpress/?p=331</link>
		<pubDate>Tue, 05 Apr 2011 16:02:23 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=331</guid>
		<description></description>
		<content:encoded><![CDATA[[perl]
#!/usr/bin/perl
# google.pl - command line tool to search google
# 2009 by Stefan Grothkopp, this code is public domain use it as you wish!

use LWP::Simple;
use Term::ANSIColor;

# change this to false for b/w output
$use_color = true;
#result size: large=8, small=4
$result_size = &quot;large&quot;;

# unescape unicode characters in&quot; content&quot;
sub unescape {
        my($str) = splice(@_);
        $str =~ s/\u(.{4})/chr(hex($1))/eg;
        return $str;
}

# number of command line args
$numArgs = $#ARGV + 1;

if($numArgs ==0){
        # print usage info if no argument is given
        print &quot;Usage:n&quot;;
        print &quot;$0 &lt;searchterm&gt;n&quot;;
}
else {
        # use first argument as query string
        $q = $ARGV[0];
        # url encode query string
        $q =~ s/([^A-Za-z0-9])/sprintf(&quot;%%%02X&quot;, ord($1))/seg;

        # get json encoded search result from google ajax api
        my $content = get(&quot;http://ajax.googleapis.com/ajax/services/search/web?v=1.0&amp;start=0&amp;rsz=$result_size&amp;q=$q&quot;);
         #Get web page in content
                die &quot;get failed&quot; if (!defined $content);

        # ugly result parsing (did not want to depend on a parser lib for this quick hack)
        while($content =~ s/&quot;unescapedUrl&quot;:&quot;([^&quot;]*)&quot;.*?&quot;titleNoFormatting&quot;:&quot;([^&quot;]*)&quot;.*?&quot;content&quot;:&quot;([^&quot;]*)&quot;//){

                # those three data items are extrated, there are more
                $title = unescape($2);
                $desc  = unescape($3);
                $url   = unescape($1);

                # print result
                if($use_color){
                 print colored ['blue'], &quot;$titlen&quot;;
                 print &quot;$descn&quot;;
                 print colored ['green'], &quot;$urlnn&quot;;
                 print color 'reset';
                }
                else{
                 print &quot;$titlen$descn$urlnn&quot;;
                }
        }
}
[/perl] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>331</wp:post_id>
		<wp:post_date>2011-04-05 12:02:23</wp:post_date>
		<wp:post_date_gmt>2011-04-05 16:02:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>google-search-perl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="google"><![CDATA[Google]]></category>
		<category domain="post_tag" nicename="google-search"><![CDATA[Google Search]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[google-pl-command-line-google-search-in-a-shell-with-perl]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:1;a:4:{s:2:"ID";s:3:"524";s:10:"post_title";s:61:"perl脚本提取BLAST结果中的信息【以tblastn为例】";s:7:"matches";s:1:"1";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/08/parse-blast/";}i:2;a:4:{s:2:"ID";s:3:"428";s:10:"post_title";s:13:"perl多线程";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/perl-multi-threads/";}i:3;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:4;a:4:{s:2:"ID";s:3:"382";s:10:"post_title";s:27:"Fedora下配置VNC服务器";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://128.192.66.53/wordpress/2011/04/fedora-vncserver/";}i:5;a:4:{s:2:"ID";s:3:"346";s:10:"post_title";s:45:"KEGG: Kyoto Encyclopedia of Genes and Genomes";s:7:"matches";s:1:"1";s:9:"permalink";s:44:"http://128.192.66.53/wordpress/2011/04/kegg/";}i:6;a:4:{s:2:"ID";s:3:"343";s:10:"post_title";s:8:"InterPro";s:7:"matches";s:1:"1";s:9:"permalink";s:48:"http://128.192.66.53/wordpress/2011/04/interpro/";}i:7;a:4:{s:2:"ID";s:3:"324";s:10:"post_title";s:23:"MySql常用命令总结";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/mysql-common-command/";}i:8;a:4:{s:2:"ID";s:3:"321";s:10:"post_title";s:30:"linux 查看系统信息命令";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/linux-system-command/";}i:9;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:42:"ubuntu下终端路径只显示当前目录";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://128.192.66.53/wordpress/2011/03/ubuntu-terminal-directory/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1285]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>InterPro</title>
		<link>http://128.192.66.53/wordpress/?p=343</link>
		<pubDate>Tue, 05 Apr 2011 16:24:28 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=343</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://128.192.66.53/wordpress/2011/04/interpro/" target="_blank">InterPro</a> is an integrated database of predictive protein "signatures" used for the classification and automatic annotation of proteins and genomes. InterPro classifies sequences at superfamily, family and subfamily levels, predicting the occurrence of functional domains, repeats and important sites. InterPro adds in-depth annotation, including GO terms, to the protein signatures.

Search InterPro with Perl:
<a href="http://www.ebi.ac.uk/Tools/webservices/download_clients/perl/soaplite/iprscan_soaplite.pl" target="_blank"> iprscan_soaplite.pl</a> (SOAP::Lite)
<a href="http://www.ebi.ac.uk/Tools/webservices/download_clients/perl/xmlcompile/iprscan_xmlcompile.pl" target="_blank"> iprscan_xmlcompile.pl</a> (XML::Compile::SOAP)
usage:
<pre>perl iprscan_soaplite.pl Seqfile --email mymai@mymail.com</pre>
see <a href="http://www.ebi.ac.uk/Tools/webservices/services/pfa/iprscan_soap" target="_blank">this</a> for more information.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>343</wp:post_id>
		<wp:post_date>2011-04-05 12:24:28</wp:post_date>
		<wp:post_date_gmt>2011-04-05 16:24:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>interpro</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="functional-genomics"><![CDATA[Functional Genomics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="interpro"><![CDATA[InterPro]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[812]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"346";s:10:"post_title";s:45:"KEGG: Kyoto Encyclopedia of Genes and Genomes";s:7:"matches";s:1:"3";s:9:"permalink";s:44:"http://128.192.66.53/wordpress/2011/04/kegg/";}i:1;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:2;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:15:"parse gff3 file";s:7:"matches";s:1:"2";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/03/parse-gff3-file/";}i:3;a:4:{s:2:"ID";s:2:"50";s:10:"post_title";s:50:"windows下用perl操作bl2seq进行两序列比对";s:7:"matches";s:1:"2";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/02/perl-bl2seq/";}i:4;a:4:{s:2:"ID";s:2:"44";s:10:"post_title";s:42:"用perl操作Clustalw进行多序列比对";s:7:"matches";s:1:"2";s:9:"permalink";s:53:"http://128.192.66.53/wordpress/2011/02/perl-clustalw/";}i:5;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:11:"本地blast";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/02/windows-perl-blast/";}i:6;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:7;a:4:{s:2:"ID";s:3:"524";s:10:"post_title";s:61:"perl脚本提取BLAST结果中的信息【以tblastn为例】";s:7:"matches";s:1:"1";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/08/parse-blast/";}i:8;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"1";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:9;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1531</wp:comment_id>
			<wp:comment_author><![CDATA[haifeng wang]]></wp:comment_author>
			<wp:comment_author_email>09210700148@fudan.edu.cn</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>180.172.134.182</wp:comment_author_IP>
			<wp:comment_date>2012-03-05 08:51:07</wp:comment_date>
			<wp:comment_date_gmt>2012-03-05 13:51:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[when I run perl iprscan_soaplite.pl --email XXXXXX@fudan.edu.cn test.fasta; give me an error:

Error: Unable to determine service endpoint and namespace for requests. at iprscan_soaplite.pl line 471.

looking forward to your reply, thanks in advance]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1330955467.52";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1330955933.22";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1533</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.53</wp:comment_author_IP>
			<wp:comment_date>2012-03-05 09:18:38</wp:comment_date>
			<wp:comment_date_gmt>2012-03-05 14:18:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="#comment-1531" rel="nofollow">@haifeng wang </a> 
May be caused by bad internet connection.  Without internet access, I got the same error, and  it worked well after connection.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1330957118.85";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>KEGG: Kyoto Encyclopedia of Genes and Genomes</title>
		<link>http://128.192.66.53/wordpress/?p=346</link>
		<pubDate>Tue, 05 Apr 2011 16:31:15 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=346</guid>
		<description></description>
		<content:encoded><![CDATA[The increasing amount of genome sequence data is the basis for understanding life as a molecular system and for developing medical, pharmaceutical, and other practical applications. Since 1995 we have been developing knowledge-based methods for uncovering higher-order systemic behaviors of the cell and the organism from genomic and molecular information. The reference knowledge is stored in <a href="http://www.genome.jp/kegg/" target="_blank">KEGG</a>, Kyoto Encyclopedia of Genes and Genomes, and associated bioinformatics technologies are being developed both for basic research and practical applications.

Example for searching KEGG with Perl:

See <a href="http://www.genome.jp/kegg/soap/" target="_blank">this</a> for more information.

[perl]
#!/usr/bin/perl
use SOAP::Lite;
$wsdl   = 'http://soap.genome.jp/KEGG.wsdl';
$serv   = SOAP::Lite-&gt;service($wsdl);
$offset = 1;
$limit  = 5;
$top5   = $serv-&gt;get_best_neighbors_by_gene('vvi:100261203', $offset, $limit);
foreach $hit (@{$top5}) {
 print &quot;$hit-&gt;{genes_id1}\t$hit-&gt;{genes_id2}\t$hit-&gt;{sw_score}\n&quot;;
}
[/perl] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>346</wp:post_id>
		<wp:post_date>2011-04-05 12:31:15</wp:post_date>
		<wp:post_date_gmt>2011-04-05 16:31:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>kegg</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="functional-genomics"><![CDATA[Functional Genomics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="kegg"><![CDATA[KEGG]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[kegg-kyoto-encyclopedia-of-genes-and-genomes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[752]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"343";s:10:"post_title";s:8:"InterPro";s:7:"matches";s:1:"3";s:9:"permalink";s:48:"http://128.192.66.53/wordpress/2011/04/interpro/";}i:1;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:2;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:15:"parse gff3 file";s:7:"matches";s:1:"2";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/03/parse-gff3-file/";}i:3;a:4:{s:2:"ID";s:2:"50";s:10:"post_title";s:50:"windows下用perl操作bl2seq进行两序列比对";s:7:"matches";s:1:"2";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/02/perl-bl2seq/";}i:4;a:4:{s:2:"ID";s:2:"44";s:10:"post_title";s:42:"用perl操作Clustalw进行多序列比对";s:7:"matches";s:1:"2";s:9:"permalink";s:53:"http://128.192.66.53/wordpress/2011/02/perl-clustalw/";}i:5;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:11:"本地blast";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/02/windows-perl-blast/";}i:6;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:7;a:4:{s:2:"ID";s:3:"524";s:10:"post_title";s:61:"perl脚本提取BLAST结果中的信息【以tblastn为例】";s:7:"matches";s:1:"1";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/08/parse-blast/";}i:8;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"1";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:9;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fedora下配置VNC服务器</title>
		<link>http://128.192.66.53/wordpress/?p=382</link>
		<pubDate>Tue, 05 Apr 2011 23:05:53 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=382</guid>
		<description></description>
		<content:encoded><![CDATA[1、
<pre>rpm -qa | grep vnc</pre>
可以查找到
vnc-1.0.0-2.fc11.i586
vnc-server-1.0.0-2.fc11.i586
否则安装vnc和vncserver

2、
<pre>env</pre>
假设可找到HOME=/home/user用户

3、
<pre>ifconfig</pre>
假设ip=192.168.119.131

4、
<pre>vncserver:10</pre>
指令创建用户，开启10为终端

5、
<pre>vi /home/user/.vnc/xstartup</pre>
修改最后一行tmp&amp; 为gnome&amp;

6、root权限
<pre>vi /etc/sysconfig/vncservers</pre>
修改：
VNCSERVERS="10：user"
VNCSERVERARGS[10]="-geometry 800x600"

7、root权限
<pre>vi /etc/sysconfig/iptables</pre>
添加
-A INPUT -m state --state NEW -m tcp -p tcp --dport 5910 -j ACCEPT
-A INPUT -m state --state NEW -m udp -p udp --dport 5910 -j ACCEPT

8、修改selinux
<pre>vi /etc/selinux/config</pre>
修改：
SELINUX=disabed

9、root
<pre>service xinetd restart
service iptables restart
chkconfig --level 345 vncserver on//开机自启动
service vncserver restart</pre>
至此服务器已经启动
在其他电脑上
ping 192.169.119.131 没问题
安装vncviewer
输入192.168.119.131:5910
恭喜成功

10、VNC黑屏问题
将黑屏用户的xstartup（一般为：/home/user用户名称/.vnc/xstartup）文件的属性修改为755（rwxr-xr-x）.
<pre>chmod 755 /home/user/.vnc/xstartup</pre>
重启vncserver服务即可！
<pre>service vncserver restart</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>382</wp:post_id>
		<wp:post_date>2011-04-05 19:05:53</wp:post_date>
		<wp:post_date_gmt>2011-04-05 23:05:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>fedora-vncserver</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="vnc-server"><![CDATA[VNC Server]]></category>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:9:{i:0;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:1;a:4:{s:2:"ID";s:3:"331";s:10:"post_title";s:59:"google.pl - command line google search in a shell with perl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/04/google-search-perl/";}i:2;a:4:{s:2:"ID";s:3:"324";s:10:"post_title";s:23:"MySql常用命令总结";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/mysql-common-command/";}i:3;a:4:{s:2:"ID";s:3:"321";s:10:"post_title";s:30:"linux 查看系统信息命令";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/linux-system-command/";}i:4;a:4:{s:2:"ID";s:3:"271";s:10:"post_title";s:42:"ubuntu下终端路径只显示当前目录";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://128.192.66.53/wordpress/2011/03/ubuntu-terminal-directory/";}i:5;a:4:{s:2:"ID";s:3:"239";s:10:"post_title";s:50:"useful, essential and most often used Vim commands";s:7:"matches";s:1:"1";s:9:"permalink";s:52:"http://128.192.66.53/wordpress/2011/03/vim-commands/";}i:6;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"1";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}i:7;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"1";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}i:8;a:4:{s:2:"ID";s:2:"54";s:10:"post_title";s:25:"Introduction to Using PBS";s:7:"matches";s:1:"1";s:9:"permalink";s:65:"http://128.192.66.53/wordpress/2011/02/introduction-to-using-pbs/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[937]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>transfer protein alignment to DNA alignment by Bioperl</title>
		<link>http://128.192.66.53/wordpress/?p=401</link>
		<pubDate>Sat, 21 May 2011 03:23:27 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=401</guid>
		<description></description>
		<content:encoded><![CDATA[[perl]
# it needs two files as input,
#   1) protein alignment result
#   2)cds sequences of the proteins
use strict;
use Bio::SeqIO;
use Bio::AlignIO;
use Bio::Align::Utilities qw(aa_to_dna_aln);
my $alignio = Bio::AlignIO-&gt;new(-format =&gt; 'NEXUS',
  			         -file   =&gt; 'pro.nxs');

my $aa_aln = $alignio-&gt;next_aln;


my $seqdata= 'cds.fa';
my $seqio = new Bio::SeqIO(-file   =&gt; $seqdata,
                           -format =&gt; 'fasta');
my %seqs;
# process each sequence
while ( my $seq = $seqio-&gt;next_seq ) {
    $seqs{$seq-&gt;display_id} = $seq;
}

my $dna_aln = aa_to_dna_aln($aa_aln, %seqs);

my $out = Bio::AlignIO-&gt;new(-file =&gt; &quot;&gt;cds.phylip&quot; , '-format' =&gt; 'NEXUS');
     $out -&gt;write_aln($dna_aln);
[/perl] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>401</wp:post_id>
		<wp:post_date>2011-05-20 23:23:27</wp:post_date>
		<wp:post_date_gmt>2011-05-21 03:23:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>aa-to-dna-aln-perl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="alignment"><![CDATA[Alignment]]></category>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:15:"parse gff3 file";s:7:"matches";s:1:"3";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/03/parse-gff3-file/";}i:1;a:4:{s:2:"ID";s:3:"346";s:10:"post_title";s:45:"KEGG: Kyoto Encyclopedia of Genes and Genomes";s:7:"matches";s:1:"2";s:9:"permalink";s:44:"http://128.192.66.53/wordpress/2011/04/kegg/";}i:2;a:4:{s:2:"ID";s:3:"343";s:10:"post_title";s:8:"InterPro";s:7:"matches";s:1:"2";s:9:"permalink";s:48:"http://128.192.66.53/wordpress/2011/04/interpro/";}i:3;a:4:{s:2:"ID";s:3:"160";s:10:"post_title";s:44:"Software packages for whole genome alignment";s:7:"matches";s:1:"2";s:9:"permalink";s:84:"http://128.192.66.53/wordpress/2011/02/software-packages-for-whole-genome-alignment/";}i:4;a:4:{s:2:"ID";s:2:"64";s:10:"post_title";s:37:"Perl: Sorting a Two-Dimensional Array";s:7:"matches";s:1:"2";s:9:"permalink";s:76:"http://128.192.66.53/wordpress/2011/02/perl-sorting-a-two-dimensional-array/";}i:5;a:4:{s:2:"ID";s:2:"50";s:10:"post_title";s:50:"windows下用perl操作bl2seq进行两序列比对";s:7:"matches";s:1:"2";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/02/perl-bl2seq/";}i:6;a:4:{s:2:"ID";s:2:"44";s:10:"post_title";s:42:"用perl操作Clustalw进行多序列比对";s:7:"matches";s:1:"2";s:9:"permalink";s:53:"http://128.192.66.53/wordpress/2011/02/perl-clustalw/";}i:7;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:11:"本地blast";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/02/windows-perl-blast/";}i:8;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:9;a:4:{s:2:"ID";s:3:"524";s:10:"post_title";s:61:"perl脚本提取BLAST结果中的信息【以tblastn为例】";s:7:"matches";s:1:"1";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/08/parse-blast/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[587]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[Paper]Full-length transcriptome assembly from RNA-Seq data without a reference genome</title>
		<link>http://128.192.66.53/wordpress/?p=411</link>
		<pubDate>Sun, 22 May 2011 06:37:23 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=411</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.nature.com/nbt/journal/vaop/ncurrent/full/nbt.1883.html">http://www.nature.com/nbt/journal/vaop/ncurrent/full/nbt.1883.html</a>

Massively parallel sequencing of cDNA has enabled deep and efficient probing of transcriptomes. Current approaches for transcript reconstruction from such data often rely on aligning reads to a reference genome, and are thus unsuitable for samples with a partial or missing reference genome. Here we present the Trinity method for <em>de novo</em> assembly of full-length transcripts and evaluate it on samples from fission yeast, mouse and whitefly, whose reference genome is not yet available. By efficiently constructing and analyzing sets of de Bruijn graphs, Trinity fully reconstructs a large fraction of transcripts, including alternatively spliced isoforms and transcripts from recently duplicated genes. Compared with other <em>de novo</em> transcriptome assemblers, Trinity recovers more full-length transcripts across a broad range of expression levels, with a sensitivity similar to methods that rely on genome alignments. Our approach provides a unified solution for transcriptome reconstruction in any sample, especially in the absence of a reference genome.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>411</wp:post_id>
		<wp:post_date>2011-05-22 02:37:23</wp:post_date>
		<wp:post_date_gmt>2011-05-22 06:37:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-de-novo-full-length-transcriptome-assembly</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="rna-seq"><![CDATA[RNA-Seq]]></category>
		<category domain="post_tag" nicename="transcriptome"><![CDATA[Transcriptome]]></category>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"413";s:10:"post_title";s:52:"[Paper]De novo assembly and analysis of RNA-seq data";s:7:"matches";s:1:"4";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-assembly-and-analysis-rna-seq-data/";}i:1;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"2";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:2;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"2";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:3;a:4:{s:2:"ID";s:3:"417";s:10:"post_title";s:99:"[Paper]A framework for variation discovery and genotyping using next-generation DNA sequencing data";s:7:"matches";s:1:"1";s:9:"permalink";s:69:"http://128.192.66.53/wordpress/2011/05/paper-genome-analysis-toolkit/";}i:4;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"1";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:5;a:4:{s:2:"ID";s:3:"219";s:10:"post_title";s:13:"Shotgun Reads";s:7:"matches";s:1:"1";s:9:"permalink";s:53:"http://128.192.66.53/wordpress/2011/03/shotgun-reads/";}i:6;a:4:{s:2:"ID";s:3:"213";s:10:"post_title";s:23:"Scaffold or Supercontig";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://128.192.66.53/wordpress/2011/03/scaffold-or-supercontig/";}i:7;a:4:{s:2:"ID";s:3:"206";s:10:"post_title";s:6:"Contig";s:7:"matches";s:1:"1";s:9:"permalink";s:46:"http://128.192.66.53/wordpress/2011/03/contig/";}i:8;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:3:"N50";s:7:"matches";s:1:"1";s:9:"permalink";s:43:"http://128.192.66.53/wordpress/2011/03/n50/";}i:9;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1149]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://bioops.info</wp:comment_author_url>
			<wp:comment_author_IP>113.140.84.108</wp:comment_author_IP>
			<wp:comment_date>2011-05-24 08:29:53</wp:comment_date>
			<wp:comment_date_gmt>2011-05-24 12:29:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you need the full-text, please leave a message.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>[Paper]De novo assembly and analysis of RNA-seq data</title>
		<link>http://128.192.66.53/wordpress/?p=413</link>
		<pubDate>Sun, 22 May 2011 06:40:03 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=413</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.nature.com/nmeth/journal/v7/n11/full/nmeth.1517.html">http://www.nature.com/nmeth/journal/v7/n11/full/nmeth.1517.html</a>

We describe Trans-ABySS, a <em>de novo</em> short-read transcriptome assembly and analysis pipeline that addresses variation in local read densities by assembling read substrings with varying stringencies and then merging the resulting contigs before analysis. Analyzing 7.4 gigabases of 50-base-pair paired-end Illumina reads from an adult mouse liver poly(A) RNA library, we identified known, new and alternative structures in expressed transcripts, and achieved high sensitivity and specificity relative to reference-based assembly methods.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>413</wp:post_id>
		<wp:post_date>2011-05-22 02:40:03</wp:post_date>
		<wp:post_date_gmt>2011-05-22 06:40:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-de-novo-assembly-and-analysis-rna-seq-data</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="abyss"><![CDATA[ABySS]]></category>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="rna-seq"><![CDATA[RNA-Seq]]></category>
		<category domain="post_tag" nicename="transcriptome"><![CDATA[Transcriptome]]></category>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"411";s:10:"post_title";s:86:"[Paper]Full-length transcriptome assembly from RNA-Seq data without a reference genome";s:7:"matches";s:1:"4";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-full-length-transcriptome-assembly/";}i:1;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"2";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:2;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"2";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:3;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"2";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}i:4;a:4:{s:2:"ID";s:3:"417";s:10:"post_title";s:99:"[Paper]A framework for variation discovery and genotyping using next-generation DNA sequencing data";s:7:"matches";s:1:"1";s:9:"permalink";s:69:"http://128.192.66.53/wordpress/2011/05/paper-genome-analysis-toolkit/";}i:5;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"1";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:6;a:4:{s:2:"ID";s:3:"219";s:10:"post_title";s:13:"Shotgun Reads";s:7:"matches";s:1:"1";s:9:"permalink";s:53:"http://128.192.66.53/wordpress/2011/03/shotgun-reads/";}i:7;a:4:{s:2:"ID";s:3:"213";s:10:"post_title";s:23:"Scaffold or Supercontig";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://128.192.66.53/wordpress/2011/03/scaffold-or-supercontig/";}i:8;a:4:{s:2:"ID";s:3:"206";s:10:"post_title";s:6:"Contig";s:7:"matches";s:1:"1";s:9:"permalink";s:46:"http://128.192.66.53/wordpress/2011/03/contig/";}i:9;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:3:"N50";s:7:"matches";s:1:"1";s:9:"permalink";s:43:"http://128.192.66.53/wordpress/2011/03/n50/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1114]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://bioops.info</wp:comment_author_url>
			<wp:comment_author_IP>113.140.84.108</wp:comment_author_IP>
			<wp:comment_date>2011-05-24 08:29:49</wp:comment_date>
			<wp:comment_date_gmt>2011-05-24 12:29:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you need the full-text, please leave a message.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1207</wp:comment_id>
			<wp:comment_author><![CDATA[单iel]]></wp:comment_author>
			<wp:comment_author_email>1557328354@t.sina.com.cn</wp:comment_author_email>
			<wp:comment_author_url>http://blog.sina.com.cn/sleio</wp:comment_author_url>
			<wp:comment_author_IP>159.226.67.52</wp:comment_author_IP>
			<wp:comment_date>2011-10-10 04:20:40</wp:comment_date>
			<wp:comment_date_gmt>2011-10-10 08:20:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[would you send me a copy of the paper? thanks s_leo AT 163.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>7</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1318234840.78";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"1557328354";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1318249262.81";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[Paper]A framework for variation discovery and genotyping using next-generation DNA sequencing data</title>
		<link>http://128.192.66.53/wordpress/?p=417</link>
		<pubDate>Sun, 22 May 2011 07:34:25 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=417</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.nature.com/ng/journal/v43/n5/full/ng.806.html">http://www.nature.com/ng/journal/v43/n5/full/ng.806.html</a>

Recent advances in sequencing technology make it possible to comprehensively catalog genetic variation in population samples, creating a foundation for understanding human disease, ancestry and evolution. The amounts of raw data produced are prodigious, and many computational steps are required to translate this output into high-quality variant calls. We present a unified analytic framework to discover and genotype variation among multiple samples simultaneously that achieves sensitive and specific results across five sequencing technologies and three distinct, canonical experimental designs. Our process includes (i) initial read mapping; (ii) local realignment around indels; (iii) base quality score recalibration; (iv) SNP discovery and genotyping to find all potential variants; and (v) machine learning to separate true segregating variation from machine artifacts common to next-generation sequencing technologies. We here discuss the application of these tools, instantiated in the Genome Analysis Toolkit, to deep whole-genome, whole-exome capture and multi-sample low-pass (~4×) <a title="1000genomes" href="http://www.1000genomes.org/" target="_blank">1000 Genomes Project</a> datasets.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>417</wp:post_id>
		<wp:post_date>2011-05-22 03:34:25</wp:post_date>
		<wp:post_date_gmt>2011-05-22 07:34:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-genome-analysis-toolkit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="gatk"><![CDATA[GATK]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="variation-discovery"><![CDATA[Variation Discovery]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1226]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"3";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:1;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"1";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:2;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:3;a:4:{s:2:"ID";s:3:"413";s:10:"post_title";s:52:"[Paper]De novo assembly and analysis of RNA-seq data";s:7:"matches";s:1:"1";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-assembly-and-analysis-rna-seq-data/";}i:4;a:4:{s:2:"ID";s:3:"411";s:10:"post_title";s:86:"[Paper]Full-length transcriptome assembly from RNA-Seq data without a reference genome";s:7:"matches";s:1:"1";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-full-length-transcriptome-assembly/";}i:5;a:4:{s:2:"ID";s:3:"219";s:10:"post_title";s:13:"Shotgun Reads";s:7:"matches";s:1:"1";s:9:"permalink";s:53:"http://128.192.66.53/wordpress/2011/03/shotgun-reads/";}i:6;a:4:{s:2:"ID";s:3:"213";s:10:"post_title";s:23:"Scaffold or Supercontig";s:7:"matches";s:1:"1";s:9:"permalink";s:63:"http://128.192.66.53/wordpress/2011/03/scaffold-or-supercontig/";}i:7;a:4:{s:2:"ID";s:3:"206";s:10:"post_title";s:6:"Contig";s:7:"matches";s:1:"1";s:9:"permalink";s:46:"http://128.192.66.53/wordpress/2011/03/contig/";}i:8;a:4:{s:2:"ID";s:3:"199";s:10:"post_title";s:3:"N50";s:7:"matches";s:1:"1";s:9:"permalink";s:43:"http://128.192.66.53/wordpress/2011/03/n50/";}i:9;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://bioops.info</wp:comment_author_url>
			<wp:comment_author_IP>113.140.84.108</wp:comment_author_IP>
			<wp:comment_date>2011-05-24 08:29:25</wp:comment_date>
			<wp:comment_date_gmt>2011-05-24 12:29:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you need the full-text, please leave a message.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1150</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.53</wp:comment_author_IP>
			<wp:comment_date>2011-10-06 18:12:54</wp:comment_date>
			<wp:comment_date_gmt>2011-10-06 22:12:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[sent the full text to your hotmail]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1144</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1317939174.47";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1144</wp:comment_id>
			<wp:comment_author><![CDATA[Jim Green]]></wp:comment_author>
			<wp:comment_author_email>gongyonghui_gyh@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>61.180.241.40</wp:comment_author_IP>
			<wp:comment_date>2011-10-06 05:43:03</wp:comment_date>
			<wp:comment_date_gmt>2011-10-06 09:43:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for you help!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1317894183.16";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1317934146.25";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>GATK: The Genome Analysis Toolkit</title>
		<link>http://128.192.66.53/wordpress/?p=418</link>
		<pubDate>Sun, 22 May 2011 07:34:19 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=418</guid>
		<description></description>
		<content:encoded><![CDATA[The <a title="GATK" href="http://www.broadinstitute.org/gsa/wiki/index.php/The_Genome_Analysis_Toolkit" target="_blank">GATK</a> is a structured software library that makes writing efficient analysis tools using next-generation sequencing data very easy, and second it's a suite of tools for working with human medical resequencing projects such as <a title="1000genomes" href="http://www.1000genomes.org/" target="_blank">1000 Genomes</a> and <a title="cancergenome" href="http://cancergenome.nih.gov/" target="_blank">The Cancer Genome Atlas</a>. These tools include things like a depth of coverage analyzers, a quality score recalibrator, a SNP/indel caller and a local realigner.

We aim to work well with both samtools and Picard by providing complementary tools to those available in those two packages. Our SNP calling pipeline (Q score recalibration -&gt; multiple sequence realignment -&gt; snp/index calling) is a particular area of focus, and have been pushing to make these capabilities as general-purpose and powerful as possible. My group's mandate is to ensure the success of the human medical resequencing projects we've undertaken at the Broad over the next 2-3 years, which involves providing a robust, production-quality development library that underlies tools for common analysis problems (like SNP calling) as well as enabling exploratory research on NGS data.

Take a look at <a title="File:CBBO 100709 v3.pptx.pdf" href="http://www.broadinstitute.org/gsa/wiki/index.php/File:CBBO_100709_v3.pptx.pdf">File:CBBO 100709 v3.pptx.pdf</a> to view a presentation that provides an introduction to some of the capabilities of the GATK and its application to the <a title="1000genomes" href="http://www.1000genomes.org/" target="_blank">1000 Genomes project</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>418</wp:post_id>
		<wp:post_date>2011-05-22 03:34:19</wp:post_date>
		<wp:post_date_gmt>2011-05-22 07:34:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>gatk-the-genome-analysis-toolkit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="gatk"><![CDATA[GATK]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="snp"><![CDATA[SNP]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="variation-discovery"><![CDATA[Variation Discovery]]></category>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"417";s:10:"post_title";s:99:"[Paper]A framework for variation discovery and genotyping using next-generation DNA sequencing data";s:7:"matches";s:1:"3";s:9:"permalink";s:69:"http://128.192.66.53/wordpress/2011/05/paper-genome-analysis-toolkit/";}i:1;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"2";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:2;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"2";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}i:3;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"2";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}i:4;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"1";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:5;a:4:{s:2:"ID";s:3:"413";s:10:"post_title";s:52:"[Paper]De novo assembly and analysis of RNA-seq data";s:7:"matches";s:1:"1";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-assembly-and-analysis-rna-seq-data/";}i:6;a:4:{s:2:"ID";s:3:"411";s:10:"post_title";s:86:"[Paper]Full-length transcriptome assembly from RNA-Seq data without a reference genome";s:7:"matches";s:1:"1";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-full-length-transcriptome-assembly/";}i:7;a:4:{s:2:"ID";s:3:"291";s:10:"post_title";s:36:"MCL - a cluster algorithm for graphs";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://128.192.66.53/wordpress/2011/03/mcl-a-cluster-algorithm-for-graphs/";}i:8;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:9;a:4:{s:2:"ID";s:3:"280";s:10:"post_title";s:32:"i-ADHoRe: Detect Synteny Regions";s:7:"matches";s:1:"1";s:9:"permalink";s:71:"http://128.192.66.53/wordpress/2011/03/i-adhore-detect-synteny-regions/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1020]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>perl多线程</title>
		<link>http://128.192.66.53/wordpress/?p=428</link>
		<pubDate>Mon, 23 May 2011 14:41:49 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=428</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>先转一下多线程的概念：</strong>

线程是一个单一的执行流程，它是所有程序执行过程中最小的控制单位，即能被 CPU 所调度的最小任务单元。线程与进程之间既有联系，又完全不同。简单地说，一个线程必然属于某一个进程，而一个进程包含至少一个或者多个线程。早期的计算机系统一次只能运行一个程序，因此，当有多个程序需要执行的时候，唯一的办法就是让它们排成队，按顺序串行执行。进程的出现打破了这种格局，CPU 资源按时间片被分割开来，分配给不同的进程使用。这样一来，从微观上看进程的执行虽然仍是串行的，但是从宏观上看，不同的程序已经是在并行执行了。如果我们把同样的思想运用到进程上，很自然地就会把进程再细分成更小的执行单位，即线程。由于一个进程又往往需要同时执行多个类似的任务，因此这些被细分的线程之间可以共享相同的代码段，数据段和文件句柄等资源。有了进程，我们可以在一台单 CPU 计算机系统上同时运行 Firefox 和 Microsoft Office Word 等多个程序；有了线程，我们可以使 Firefox 在不同的标签里同时加载多个不同的页面，在 Office Word 里编辑文档的同时进行语法错误检查。因此，线程给我们带来了更高的 CPU 利用率、更快速的程序响应、更经济地资源使用方式和对多 CPU 的体系结构更良好的适应性。关于多线程的详细讲解，可参看：perl 线程模型讲解（<a href="http://it.chinawin.net/softwaredev/article-124a1.html" target="_blank">http://it.chinawin.net/softwaredev/article-124a1.html</a>）

————————————————————–

perl中的多线程模块

5.8以后的版本的多线程模块可参看perldoc（<a href="http://perldoc.perl.org/threads.html" target="_blank">http://perldoc.perl.org/threads.html</a>）

—————————————————————

perl的多线程实例：

涉及语言：Perl
所用模块：threads
模块中的方法： threads-&gt;create（），
创建一个新线程；threads-&gt;join()，
收割已经创建的线程；threads-&gt;list(threads::all)，
返回所有已经创建的线程；threads-&gt;is_joinable()，
返回目标线程是否已经完成，等待join；
其他的在perldoc上了。

——————————————————–

[perl]use threads;           #声明模块
use warnings;use strict;
print localtime(time),&quot;\n&quot;;  #输出系统时间；
my $j=0;
my $thread;
while()
{    
last if($j&gt;=10)；#这里控制一下任务数量，共10个；
#控制创建的线程数，这里是5，scalar函数返回列表threads-&gt;list()元素的个数；
while(scalar(threads-&gt;list())&lt;5) 
{    $j++; #创建一个线程，这个线程其实就是调用（引用）函数“ss”； #函数‘ss’包含两个参数（$j和$j）； 
     threads-&gt;new(\&amp;ss,$j,$j);
}
foreach $thread(threads-&gt;list(threads::all))
{    if($thread-&gt;is_joinable())      #判断线程是否运行完成；
{    $thread-&gt;join();
#输出中间结果；
print scalar(threads-&gt;list()),&quot;\t$j\t&quot;,localtime(time),&quot;\n&quot;;
}
}
}
#join掉剩下的线程（因为在while中当j=10时，还有4个线程正在运行，但是此时程序将退出while循，所以在这里需要额外程序join掉剩下的4个线程）
foreach $thread(threads-&gt;list(threads::all))
{    $thread-&gt;join();
     print scalar(threads-&gt;list()),&quot;\t$j\t&quot;,localtime(time),&quot;\n&quot;;
}
#输出程序结束的时间，和程序开始运行时间比较，看程序运行性能；
print localtime(time),&quot;\n&quot;;
#下面就是每个线程引用的函数；
sub ss()
{   my ($t,$s)=@_;
sleep($t);       #sleep函数，睡觉；以秒为单位；
print &quot;$s\t&quot;;
}
[/perl]

—————————————————

<strong>结果：</strong>

<strong><a href="http://128.192.66.53/wordpress/wp-content/uploads/2011/05/http_imgload.png"><img class="alignnone size-medium wp-image-439" title="http_imgload" src="http://128.192.66.53/wordpress/wp-content/uploads/2011/05/http_imgload-300x175.png" alt="" width="300" height="175" /></a>
</strong>

第一列表示程序已经完成的任务数，第二列表示正在运行的线程数-1（join掉一个了），第三列表示在收割掉一个线程后新添加的任务，最后一列表示完成一个线程时的系统时间。

————————————————————

多线程运行性能

如果单独运行这10个任务，所需要的时间为：1+2+3+4++10=55s；
采用多线程运行（5个）的话，需要的时间为：54-39=16s；

————————————————————-

运行过程

简要描述一下程序运行过程，以便更深入理解多线程的概念。
程序共要运行10个任务，第一个任务的作用是暂停程序1s（sleep（1））；第二个任务是暂停程序2s（sleep（2））；以此类推，第十个任务是暂停程序10s；
时间(s)       任务
0          1,2,3,4,5（程序初始，5个线程同时运行，需要时间最长的是线程5（5s））
1          2,3,4,5,6(经过1s后，第一个任务已经完成，被join掉，同时添加新任务6)
2          3,4,5,6,7（同上）
3          4,5,6,7,8
4          5,6,7,8,9
5          6,7,8,9,10
7-end      join所有剩下的线程（所有任务都已经添加，程序中while循环退出）

方法$thread-&gt;is_joinable()的作用

前面已经说了，这个方法是用来判断线程是否已经运行完成，处于等待join的状态。当需要处理多个任务，但这些任务完成需要的时间又不一样时，这个方法就显得特别重要。

还是以上面的程序为例。程序初始运行时创建5个线程。第一个线程所需时间最短，为1s。第五个线程所需时间最长5s。如果不适用$thread-&gt;is_joinable()而直接join这五个线程的话，如下：

foreach $thread(threads-&gt;list(threads::all))

{   $thread-&gt;join();

}

结果是：主程序处于等待状态。在1s后，第一个线程被join，主程序依然处于等待，2s后第二个线程被join，主程序等待。知道5s后第五个线程被join，主程序通畅，重新创建下一组线程（5个）。显然这个过程不能最大话利用CPU的资源。当第一个线程被join后，虽然程序中只有4个线程在运行，但是由于主程序处于等待状态，新的线程不会被创建。

最佳的方法就是判断线程是否可以被join。如上面的程序所写的。这样可以保证程序运行过程中始终是5个线程，最大化的利用CPU资源。

——————————————————-

<strong>实例</strong>

说了这么多，多线程在生物信息中到底可以怎么来运用，下面给一个简单的实例。从KEGG数据库（http://www.genome.jp/kegg/）上搜索同源序列。

所需文件：seqname.txt(用于存放需要搜索的序列KEGG名称)；

<strong>源码：</strong>

[perl]use strict;use warnings;use threads;
use SOAP::Lite;
use Cwd;
my $path=getcwd;
my $wsdl = 'http://soap.genome.jp/KEGG.wsdl';
my $serv = SOAP::Lite-&gt;service($wsdl);
open(F,&quot;K00006.txt&quot;);
my @names=&lt;F&gt;;
chomp @names;
close(F);
my $i=0;
my $thread;
print localtime(time);
while($i&lt;scalar(@names)) 
{    while(scalar(threads-&gt;list())&lt;10) 
{    threads-&gt;new(\&amp;orgfile,$names[$i]);
$i++;
}
foreach $thread(threads-&gt;list(threads::all))
{    if($thread-&gt;is_joinable())
{    $thread-&gt;join();
}
}
}
foreach $thread(threads-&gt;list(threads::all))
{    $thread-&gt;join();
}
print localtime(time);
sub orgfile
{    my($seq)=@_;
my $offset = 1;
my $limit = 100;
my $top5 = $serv-&gt;get_best_neighbors_by_gene($seq, $offset,$limit);
$seq=~s/://;
open(F,&quot;&gt;$seq.txt&quot;);
foreach my $hit (@{$top5})
{    print F &quot;$hit-&gt;{genes_id1}\t$hit-&gt;{genes_id2}\t$hit-&gt;{sw_score}\n&quot;;
}
close(F);
print &quot;$seq\n&quot;;
}
[/perl]

————————————————]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>428</wp:post_id>
		<wp:post_date>2011-05-23 10:41:49</wp:post_date>
		<wp:post_date_gmt>2011-05-23 14:41:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>perl-multi-threads</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="multi-threads"><![CDATA[Multi-threads]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[perl%e5%a4%9a%e7%ba%bf%e7%a8%8b]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1887]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"524";s:10:"post_title";s:61:"perl脚本提取BLAST结果中的信息【以tblastn为例】";s:7:"matches";s:1:"1";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/08/parse-blast/";}i:1;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:2;a:4:{s:2:"ID";s:3:"346";s:10:"post_title";s:45:"KEGG: Kyoto Encyclopedia of Genes and Genomes";s:7:"matches";s:1:"1";s:9:"permalink";s:44:"http://128.192.66.53/wordpress/2011/04/kegg/";}i:3;a:4:{s:2:"ID";s:3:"343";s:10:"post_title";s:8:"InterPro";s:7:"matches";s:1:"1";s:9:"permalink";s:48:"http://128.192.66.53/wordpress/2011/04/interpro/";}i:4;a:4:{s:2:"ID";s:3:"331";s:10:"post_title";s:59:"google.pl - command line google search in a shell with perl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/04/google-search-perl/";}i:5;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:15:"parse gff3 file";s:7:"matches";s:1:"1";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/03/parse-gff3-file/";}i:6;a:4:{s:2:"ID";s:2:"64";s:10:"post_title";s:37:"Perl: Sorting a Two-Dimensional Array";s:7:"matches";s:1:"1";s:9:"permalink";s:76:"http://128.192.66.53/wordpress/2011/02/perl-sorting-a-two-dimensional-array/";}i:7;a:4:{s:2:"ID";s:2:"50";s:10:"post_title";s:50:"windows下用perl操作bl2seq进行两序列比对";s:7:"matches";s:1:"1";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/02/perl-bl2seq/";}i:8;a:4:{s:2:"ID";s:2:"44";s:10:"post_title";s:42:"用perl操作Clustalw进行多序列比对";s:7:"matches";s:1:"1";s:9:"permalink";s:53:"http://128.192.66.53/wordpress/2011/02/perl-clustalw/";}i:9;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:11:"本地blast";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/02/windows-perl-blast/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>hello 点滴记录</title>
		<link>http://128.192.66.53/wordpress/?p=454</link>
		<pubDate>Wed, 06 Jul 2011 02:39:06 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=454</guid>
		<description></description>
		<content:encoded><![CDATA[今天发现有人转载我的文章，（虽然我的大部分也是转载别人的），而且有人把我的网址收藏成“有用网站”。哈哈！

为答谢网友，分享一个关于RNA-Seq的高水平blog，<a href="http://rna-seqblog.com/">http://rna-seqblog.com/</a>，还有一个关于人类基因组测序的blog，<a href="http://www.genomesunzipped.org/">http://www.genomesunzipped.org/</a>。

今后要向两位博主看齐，多整点专业的、有深度的文章。（时间啊，就像那个XX，挤一下总会有的！）

今天又被自己鄙视了一下，眼高手低啊。被人问到专业而具体的问题，一问三不知。罪过！还敢号称是做“技术”的！打算拿已发表的Next-generation sequencing data，把这些主要技术流程亲自下手过一遍，<em>de novo</em> assembly、reference assembly、RNA-Seq map、transcriptome assembly、SNP discovery、structural variation/CNV detection等等。

还有一件事要记录一下。有人请我审一篇关于identification of SNPs without the reference genome的文章。惭愧！我自己还没发过一篇一作文章。老板在后面撑腰，说，审吧，你审完了我给把把关。（老板原话：“you can review.  if you like, i can look at your review before you send it in.”）]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>454</wp:post_id>
		<wp:post_date>2011-07-05 22:39:06</wp:post_date>
		<wp:post_date_gmt>2011-07-06 02:39:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hello</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[692]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Comparison of de novo assembly tools for next-generation sequencing</title>
		<link>http://128.192.66.53/wordpress/?p=471</link>
		<pubDate>Fri, 22 Jul 2011 00:29:29 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=471</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><a href="http://bioinformatics.oxfordjournals.org/content/early/2011/06/02/bioinformatics.btr319.abstract" target="_blank">Comparative Studies of <em>de novo</em> Assembly Tools for Next-generation Sequencing Technologies</a></strong>

Yong Lin, Jian Li, Hui Shen, Lei Zhang, Christopher J Papasian and Hong-Wen Deng

<strong>Motivation:</strong> Several new de novo assembly tools have been developed recently to assemble short sequencing reads generated by next-generation sequencing platforms. However, the performance of these tools under various conditions has not been fully investigated, and sufficient information is not currently available for informed decisions to be made regarding the tool that would be most likely to produce the best performance under a specific set of conditions.

<strong>Results:</strong> We studied and compared the performance of commonly used de novo assembly tools specifically designed for next-generation sequencing data, including SSAKE, VCAKE, Euler-sr, Edena, Velvet, ABySS and SOAPdenovo. Tools were compared using several performance criteria, including N50 length, sequence cover-age, and assembly accuracy. Various properties of read data, including single-end/paired-end, sequence GC content, depth of coverage and base calling error rates, were investigated for their effects on the performance of different assembly tools. We also compared the computation time and memory usage of these seven tools. Based on the results of our comparison, the relative perform-ance of individual tools are summarized and tentative guidelines for optimal selection of different assembly tools, under different condi-tions, are provided.

拿流行的几个<em>de novo</em> assembly tools for next-generation sequencing做了系统的比较，是一篇很不错的文章。曾经有多少人徘徊于各种assembly软件中，不知道选择哪一种，这篇文章提供了很好的帮助。

作者比较了<a href="http://www.bcgsc.ca/platform/bioinfo/software/ssake" target="_blank">SSAKE</a>, <a href="http://vcake.sourceforge.net/" target="_blank">VCAKE</a>, <a href="http://euler-assembler.ucsd.edu/portal/" target="_blank">Euler-sr</a>, <a href="http://www.genomic.ch/edena.php" target="_blank">Edena</a>, <a href="http://www.ebi.ac.uk/~zerbino/velvet/" target="_blank">Velvet</a>, <a href="http://www.bcgsc.ca/platform/bioinfo/software/abyss" target="_blank">ABySS</a> and <a href="http://soap.genomics.org.cn/soapdenovo.html" target="_blank">SOAPdenovo</a>，（竟然没有<a href="https://www.broadinstitute.org/scientific-community/science/programs/genome-sequencing-and-analysis/computational-rd/computational-" target="_blank">ALLPATHS-LG</a>！）。

先用大到人类（其实最多只用了100Mb序列片段）小到<em>E. coli</em>的不同GC含量的基因组，模拟出single-end和paired-end、以及不同测序深度、不同测序片段长度的短序列片段，然后使用各个软件拼接，缺省设置，在各有2.40GB双核+12GB的8个nodes上运行，然后比较拼接结果：<a href="http://128.192.66.53/wordpress/2011/03/n50/" target="_blank">N50</a>、基因组覆盖率（sequence coverage）、拼接错误（assembly error）和base  calling error rate (BCER)等，还有软件运行时的硬件消耗。

<strong>最终的结论：（<span style="color: #ff0000;">结论比较复杂，不同条件和要求下，各个软件表现有些差异。总的来看ABySS和SOAPdenovo比较“万金油”。</span>）</strong>

<a href="http://128.192.66.53/wordpress/wp-content/uploads/2011/07/20110721212646.gif"><img class="alignnone size-full wp-image-480" title="20110721212646" src="http://128.192.66.53/wordpress/wp-content/uploads/2011/07/20110721212646.gif" alt="" width="1040" height="408" /></a>

<strong>再看非常重要的硬件消耗（<span style="color: #ff0000;">还是SOAPdenovo和abyss给力啊，看来我眼光不错，我就是用的这两个，还有ALLPATHS-LG！</span>）</strong>

<a href="http://128.192.66.53/wordpress/wp-content/uploads/2011/07/20110721212958.gif"><img class="alignnone size-full wp-image-481" title="20110721212958" src="http://128.192.66.53/wordpress/wp-content/uploads/2011/07/20110721212958.gif" alt="" width="436" height="634" /></a>

<span style="color: #ff0000;"><strong>本人看法：SOAPdenovo能拼接<a href="http://128.192.66.53/wordpress/2011/03/scaffold-or-supercontig/" target="_blank">scaffolds</a>，能产生更长的N50，<strong>而ABySS只能拼接到<a href="http://128.192.66.53/wordpress/2011/03/contig/" target="_blank">contigs</a>；</strong>但ABySS基于<a href="https://computing.llnl.gov/tutorials/parallel_comp/" target="_blank">MPI并行</a>，对硬件需求低。<strong>ALLPATHS-LG和<strong>SOAPdenovo相似。</strong></strong></strong></span>

<strong>
</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>471</wp:post_id>
		<wp:post_date>2011-07-21 20:29:29</wp:post_date>
		<wp:post_date_gmt>2011-07-22 00:29:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>comparison-assembly-next-generation-sequencing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[comparation-assembly-next-generation-sequencing]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1380]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"3";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:1;a:4:{s:2:"ID";s:3:"160";s:10:"post_title";s:44:"Software packages for whole genome alignment";s:7:"matches";s:1:"3";s:9:"permalink";s:84:"http://128.192.66.53/wordpress/2011/02/software-packages-for-whole-genome-alignment/";}i:2;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"3";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}i:3;a:4:{s:2:"ID";s:2:"71";s:10:"post_title";s:22:"Synteny relevant links";s:7:"matches";s:1:"3";s:9:"permalink";s:62:"http://128.192.66.53/wordpress/2011/02/synteny-relevant-links/";}i:4;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"3";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}i:5;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"3";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}i:6;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"2";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:7;a:4:{s:2:"ID";s:3:"413";s:10:"post_title";s:52:"[Paper]De novo assembly and analysis of RNA-seq data";s:7:"matches";s:1:"2";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-assembly-and-analysis-rna-seq-data/";}i:8;a:4:{s:2:"ID";s:3:"411";s:10:"post_title";s:86:"[Paper]Full-length transcriptome assembly from RNA-Seq data without a reference genome";s:7:"matches";s:1:"2";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-full-length-transcriptome-assembly/";}i:9;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"2";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Structural variation detection by whole genome de novo assembly</title>
		<link>http://128.192.66.53/wordpress/?p=504</link>
		<pubDate>Sat, 30 Jul 2011 03:41:32 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=504</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.nature.com/nbt/journal/vaop/ncurrent/full/nbt.1904.html" target="_blank">Structural variation in two human genomes mapped at single-nucleotide resolution by whole genome de novo assembly</a>

Here we use whole-genome de novo assembly of second-generation sequencing reads to map structural variation (SV) in an Asian genome and an African genome. Our approach identifies small- and intermediate-size homozygous variants (1–50 kb) including insertions, deletions, inversions and their precise breakpoints, and in contrast to other methods, can resolve complex rearrangements. In total, we identified 277,243 SVs ranging in length from 1–23 kb. Validation using computational and experimental methods suggests that we achieve overall &lt;6% false-positive rate and &lt;10% false-negative rate in genomic regions that can be assembled, which outperforms other methods. Analysis of the SVs in the genomes of 106 individuals sequenced as part of the 1000 Genomes Project suggests that SVs account for a greater fraction of the diversity between individuals than do single-nucleotide polymorphisms (SNPs). These findings demonstrate that whole-genome de novo assembly is a feasible approach to deriving more comprehensive maps of genetic variation.

BGI的文章。BGI，也就是华大，有钱的主，拿钱砸出来好多高IF的文章，此为其一。

通过whole genome de novo assembly来确定Structural variation（SV）。

用拼接好的scaffolds和human reference genome来比对。BGI利用<a href="http://genome.ucsc.edu/cgi-bin/hgBlat?command=start" target="_blank">BLAT</a>和<a href="http://www.bx.psu.edu/~rsharris/lastz/" target="_blank">LASTZ</a>，加上一些自己开发的脚本（scripts）建立了一个SV detection的流程（pipeline），叫做<a href="http://soap.genomics.org.cn/SOAPsv.html" target="_blank">SOAPsv</a>。这篇文章等于是这个pipeline的首次实践。

验证（validation）是一个必要的程序，不像<a href="http://www.1000genomes.org/" target="_blank">千人基因组</a> （<a href="http://www.nature.com/nature/journal/v467/n7319/full/nature09534.html" target="_blank">paper</a>）用实验方法（wet），他们同时用了实验（wet）和电脑计算（dry）两种方法。关于computational方法，是用<a href="http://bio-bwa.sourceforge.net/" target="_blank">BWA</a>或者<a href="http://soap.genomics.org.cn/soapaligner.html" target="_blank">SOAPaligner</a>来把原始的reads align到reference genome上。为什么不能用这个align的结果来做SV detection呢？其他的软件基本都是这样做的。为了“创新”，另辟蹊径，用de novo assembly，但同时还需要align to reference，是不是有点走弯路？。另外一个疑问：如果align的结果和de novo assembly的序列不一样呢？

也和另外两个软件做了比较，<a href="http://breakdancer.sourceforge.net/" target="_blank">BreakDancer</a> （<a href="http://www.nature.com/nmeth/journal/v6/n9/abs/nmeth.1363.html" target="_blank">paper</a>）和<a href="http://www.ebi.ac.uk/~kye/pindel/" target="_blank">Pinde</a>l （<a href="http://bioinformatics.oxfordjournals.org/content/25/21/2865.long" target="_blank">paper</a>），“据说”是比这两个软件的精确性要高。（“similar sensitivity but improved precision”）但是，为什么不和其他软件比较呢？

最后要提另一篇重量级的文章：<a href="http://www.nature.com/nature/journal/v470/n7332/full/nature09708.html" target="_blank">Mapping copy number variation by population-scale genome sequencing</a>，使用了几乎所有的SV detection的软件，并实验验证，还探讨了一些SV发生机制。是一篇集大成的文章，需要仔细研究，有空写篇博客介绍一下。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>504</wp:post_id>
		<wp:post_date>2011-07-29 23:41:32</wp:post_date>
		<wp:post_date_gmt>2011-07-30 03:41:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>structural-variation-detection-by-whole-genome-de-novo-assembly</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="post_tag" nicename="bgi"><![CDATA[BGI]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="nature"><![CDATA[Nature]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="structural-variation"><![CDATA[Structural Variation]]></category>
		<category domain="post_tag" nicename="variation-discovery"><![CDATA[Variation Discovery]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[864]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"3";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:1;a:4:{s:2:"ID";s:2:"98";s:10:"post_title";s:86:"Software packages for discovering structural variation with next-generation sequencing";s:7:"matches";s:1:"3";s:9:"permalink";s:126:"http://128.192.66.53/wordpress/2011/02/software-packages-for-discovering-structural-variation-with-next-generation-sequencing/";}i:2;a:4:{s:2:"ID";s:3:"413";s:10:"post_title";s:52:"[Paper]De novo assembly and analysis of RNA-seq data";s:7:"matches";s:1:"2";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-assembly-and-analysis-rna-seq-data/";}i:3;a:4:{s:2:"ID";s:3:"411";s:10:"post_title";s:86:"[Paper]Full-length transcriptome assembly from RNA-Seq data without a reference genome";s:7:"matches";s:1:"2";s:9:"permalink";s:88:"http://128.192.66.53/wordpress/2011/05/paper-de-novo-full-length-transcriptome-assembly/";}i:4;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"2";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}i:5;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"2";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}i:6;a:4:{s:2:"ID";s:3:"534";s:10:"post_title";s:38:"做生物信息常用到的linux命令";s:7:"matches";s:1:"1";s:9:"permalink";s:68:"http://128.192.66.53/wordpress/2011/08/linux-command-bioinformatics/";}i:7;a:4:{s:2:"ID";s:3:"417";s:10:"post_title";s:99:"[Paper]A framework for variation discovery and genotyping using next-generation DNA sequencing data";s:7:"matches";s:1:"1";s:9:"permalink";s:69:"http://128.192.66.53/wordpress/2011/05/paper-genome-analysis-toolkit/";}i:8;a:4:{s:2:"ID";s:3:"418";s:10:"post_title";s:33:"GATK: The Genome Analysis Toolkit";s:7:"matches";s:1:"1";s:9:"permalink";s:72:"http://128.192.66.53/wordpress/2011/05/gatk-the-genome-analysis-toolkit/";}i:9;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>聪明是天生的么？</title>
		<link>http://128.192.66.53/wordpress/?p=519</link>
		<pubDate>Fri, 12 Aug 2011 20:59:34 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=519</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Nature旗下Molecular Psychiatry的一篇<a href="http://www.nature.com/mp/journal/vaop/ncurrent/full/mp201185a.html" target="_blank">文章</a>。</p>
<p>用基因组关联研究（<a href="http://en.wikipedia.org/wiki/Genome-wide_association_study" target="_blank">GWAS</a>）的方法，分析了3511个人的549692个<a href="http://en.wikipedia.org/wiki/Single-nucleotide_polymorphism" target="_blank">SNP</a>与智力的关联程度。结论：40%的crystallized-type intelligence差异和51%的fluid-type intelligence差异可以认为是受遗传因素影响。（crystallized-type intelligence：所具备的知识，和记忆力有关；fluid-type intelligence：解决问题、逻辑思维的能力。 具体解释见<a href="http://en.wikipedia.org/wiki/Fluid_and_crystallized_intelligence" target="_blank">wikipedia</a>）</p>
<p>有兴趣的可读<a href="http://www.nature.com/mp/journal/vaop/ncurrent/full/mp201185a.html" target="_blank">原文</a>或相关评论文章（<a href="http://www.bioon.com/biology/genetics/501012.shtml" target="_blank">生物谷</a>、<a href="http://www.genomeweb.com/blog/born-smart" target="_blank">genomeweb</a>和<a href="http://articles.boston.com/2011-08-11/news/29877046_1_genes-eric-turkheimer-intelligence" target="_blank">boston.com</a>）</p>
<p>&nbsp;</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>519</wp:post_id>
		<wp:post_date>2011-08-12 16:59:34</wp:post_date>
		<wp:post_date_gmt>2011-08-12 20:59:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>born-smart</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gwas"><![CDATA[GWAS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="snp"><![CDATA[SNP]]></category>
		<category domain="post_tag" nicename="variation-discovery"><![CDATA[Variation Discovery]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[605]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>perl脚本提取BLAST结果中的信息【以tblastn为例】</title>
		<link>http://128.192.66.53/wordpress/?p=524</link>
		<pubDate>Sun, 28 Aug 2011 02:55:25 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=524</guid>
		<description></description>
		<content:encoded><![CDATA[用blast中<a href="http://www.pangloss.com/wiki/Blast" target="_blank"> -m 8</a>参数可以得到类似的信息，但满足不了所有的需求。用bioperl可以得到任意想要的信息，但我用的cluster上没有bioperl，只好自己写了一个。只是用了一些正则表达式，不适用于其他blast（比如blastn、blastp），但只需要稍微改一下就可以了，暂时将就着用吧。欢迎留言讨论。

[perl]
#!/usr/bin/perl
# Parse alignments from tBLASTn output file
use strict;
use warnings;
print &quot;query\tquery_length\thit\tscore\texpect\tidentity\tquery_strand\tsubject_strand\tcoverage_query\tcoverage_subject\tquery_start\tquery_end\tsubject_start\tsubject_end\tquery_seq\tsubject_seq\n&quot;;
my $input=$ARGV[0];
my ($eachline,$query_name,$query_length,$hit_name,$hsp_num);
my ($query_start_temp,$query_end_temp,$subject_start_temp,$subject_end_temp);
my ($query_start,$query_end,$subject_start,$subject_end,$query_seq,$subject_seq,$query_seq_temp,$subject_seq_temp);
my ($score,$expect,$coverage_query,$coverage_subject,$identity_query,$identity_subject,$identity,$query_strand,$subject_strand);
$hsp_num=0;
open(IN,&quot;while (defined($eachline=)){
  $eachline=~s/[\r\n]//g;
  if($eachline=~/^Query= /){
    ($query_name)=($eachline=~/^Query= (\S+)/);
    $eachline=;
    ($query_length)=($eachline=~/\((\S+) letters\)/);
    $query_length=~s/,//g;
  }
  if($eachline=~/^&gt;/){
    ($hit_name)=($eachline=~/^&gt;(\S+)/);
  }
  if($eachline=~/^ Score/){
    ($score,$expect)=($eachline =~ /Score = (.*) bits.*Expect.* = (\S+),/);
    $hsp_num++;
    if($hsp_num&gt;1){
      $coverage_query=$query_end-$query_start+1;
      $coverage_subject=$subject_end-$subject_start+1;
      print &quot;$coverage_query\t$coverage_subject\t$query_start\t$query_end\t$subject_start\t$subject_end\t$query_seq\t$subject_seq\n&quot;;
    }
    $query_start=1000000000;$query_end=0;
    $subject_start=1000000000;$subject_end=0;
    $query_seq='';$subject_seq='';
    print &quot;$query_name\t$query_length\t$hit_name\t&quot;;
    print &quot;$score\t$expect\t&quot;;
  }
  if($eachline=~/^ Identities/){
    ($identity_query,$identity_subject,$identity)=($eachline =~ /Identities = (\d+)\/(\d+) \((\d+)%\)/);
    print &quot;$identity\t&quot;;
  }
  if($eachline=~/^ Frame = /){
    if($eachline =~ / Frame = -/){$subject_strand='Minus';}elsif($eachline =~ / Frame = +/){$subject_strand='Plus';}
    $query_strand='Plus';
    print &quot;$query_strand\t$subject_strand\t&quot;;
  }
  if($eachline=~/^Query: (\d+)/){
    if($query_strand eq 'Plus'){($query_start_temp,$query_seq_temp,$query_end_temp)=($eachline =~ /(\d+)(\D+)(\d+)/);}
    if($query_strand eq 'Minus'){($query_end_temp,$query_seq_temp,$query_start_temp)=($eachline =~ /(\d+)(\D+)(\d+)/);}
    $query_seq_temp=~s/[ -]//g;$query_seq.=$query_seq_temp;
    if($query_start&gt;$query_start_temp){$query_start=$query_start_temp;}
    if($query_end$subject_start_temp){$subject_start=$subject_start_temp;}
    if($subject_end  }
  if($eachline=~/^Matrix: /){
    $coverage_query=$query_end-$query_start+1;
    $coverage_subject=$subject_end-$subject_start+1;
    print &quot;$coverage_query\t$coverage_subject\t$query_start\t$query_end\t$subject_start\t$subject_end\t$query_seq\t$subject_seq\n&quot;;
  }
}
close IN;

[/perl]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>524</wp:post_id>
		<wp:post_date>2011-08-27 22:55:25</wp:post_date>
		<wp:post_date_gmt>2011-08-28 02:55:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>parse-blast</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blast"><![CDATA[Blast]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="regular-expression"><![CDATA[Regular Expression]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1397]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:2:"50";s:10:"post_title";s:50:"windows下用perl操作bl2seq进行两序列比对";s:7:"matches";s:1:"2";s:9:"permalink";s:51:"http://128.192.66.53/wordpress/2011/02/perl-bl2seq/";}i:1;a:4:{s:2:"ID";s:2:"41";s:10:"post_title";s:11:"本地blast";s:7:"matches";s:1:"2";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/02/windows-perl-blast/";}i:2;a:4:{s:2:"ID";s:3:"428";s:10:"post_title";s:13:"perl多线程";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/perl-multi-threads/";}i:3;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:4;a:4:{s:2:"ID";s:3:"346";s:10:"post_title";s:45:"KEGG: Kyoto Encyclopedia of Genes and Genomes";s:7:"matches";s:1:"1";s:9:"permalink";s:44:"http://128.192.66.53/wordpress/2011/04/kegg/";}i:5;a:4:{s:2:"ID";s:3:"343";s:10:"post_title";s:8:"InterPro";s:7:"matches";s:1:"1";s:9:"permalink";s:48:"http://128.192.66.53/wordpress/2011/04/interpro/";}i:6;a:4:{s:2:"ID";s:3:"331";s:10:"post_title";s:59:"google.pl - command line google search in a shell with perl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/04/google-search-perl/";}i:7;a:4:{s:2:"ID";s:3:"291";s:10:"post_title";s:36:"MCL - a cluster algorithm for graphs";s:7:"matches";s:1:"1";s:9:"permalink";s:74:"http://128.192.66.53/wordpress/2011/03/mcl-a-cluster-algorithm-for-graphs/";}i:8;a:4:{s:2:"ID";s:3:"292";s:10:"post_title";s:20:"Notes on using BLAST";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/notes-on-using-blast/";}i:9;a:4:{s:2:"ID";s:3:"229";s:10:"post_title";s:15:"parse gff3 file";s:7:"matches";s:1:"1";s:9:"permalink";s:55:"http://128.192.66.53/wordpress/2011/03/parse-gff3-file/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>做生物信息常用到的linux命令</title>
		<link>http://128.192.66.53/wordpress/?p=534</link>
		<pubDate>Sun, 28 Aug 2011 03:21:01 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=534</guid>
		<description></description>
		<content:encoded><![CDATA[1，统计一个序列文件中的序列个数（grep用好了可以非常快捷方便地处理一些数据）
<pre>grep -c '&gt;' seqfile</pre>
2, 查看大文件头几行或最后几行
<pre>head seqfile
tail seqfile</pre>
3，文件行数
<pre>wc -l seqfile</pre>
4，矩阵格式的文件，提取其中的某几列（例如<a href="http://www.pangloss.com/wiki/Blast" target="_blank">blast -m 8</a>）
<pre> cut -f 1,2,11 seq.cblast &gt; seq.abc</pre>
5，awk和sed

先学的perl，后知道awk和sed，认识到很多事情用awk和sed解决比写perl脚本方便多了

比如fastq转换fasta文件：
<pre>awk ‘NR % 4 == 1 || NR % 4 == 2′ myfile.fastq | sed -e ‘s/@/&gt;/’ &gt; myfile.fasta</pre>
6，screen管理远程任务，可以在远程会话断开后继续在后台运行，详见<a href="http://www.path8.net/tn/archives/3746" target="_blank">此文</a>。

7，vi/vim就不必细说了，编程必备。

8，暂时就这么多了。好长时间没做过东西了。等用到或者想到了再加。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>534</wp:post_id>
		<wp:post_date>2011-08-27 23:21:01</wp:post_date>
		<wp:post_date_gmt>2011-08-28 03:21:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux-command-bioinformatics</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="command"><![CDATA[Command]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1305]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_efficient_related_posts</wp:meta_key>
			<wp:meta_value><![CDATA[a:10:{i:0;a:4:{s:2:"ID";s:2:"60";s:10:"post_title";s:56:"ABySS: A parallel assembler for short read sequence data";s:7:"matches";s:1:"2";s:9:"permalink";s:95:"http://128.192.66.53/wordpress/2011/02/abyss-a-parallel-assembler-for-short-read-sequence-data/";}i:1;a:4:{s:2:"ID";s:2:"58";s:10:"post_title";s:77:"Software packages for next generation sequence analysis (from seqanswers.com)";s:7:"matches";s:1:"2";s:9:"permalink";s:115:"http://128.192.66.53/wordpress/2011/02/software-packages-for-next-generation-sequence-analysis-from-seqanswers-com/";}i:2;a:4:{s:2:"ID";s:3:"504";s:10:"post_title";s:63:"Structural variation detection by whole genome de novo assembly";s:7:"matches";s:1:"1";s:9:"permalink";s:103:"http://128.192.66.53/wordpress/2011/07/structural-variation-detection-by-whole-genome-de-novo-assembly/";}i:3;a:4:{s:2:"ID";s:3:"471";s:10:"post_title";s:67:"Comparison of de novo assembly tools for next-generation sequencing";s:7:"matches";s:1:"1";s:9:"permalink";s:86:"http://128.192.66.53/wordpress/2011/07/comparison-assembly-next-generation-sequencing/";}i:4;a:4:{s:2:"ID";s:3:"401";s:10:"post_title";s:54:"transfer protein alignment to DNA alignment by Bioperl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/05/aa-to-dna-aln-perl/";}i:5;a:4:{s:2:"ID";s:3:"382";s:10:"post_title";s:27:"Fedora下配置VNC服务器";s:7:"matches";s:1:"1";s:9:"permalink";s:56:"http://128.192.66.53/wordpress/2011/04/fedora-vncserver/";}i:6;a:4:{s:2:"ID";s:3:"346";s:10:"post_title";s:45:"KEGG: Kyoto Encyclopedia of Genes and Genomes";s:7:"matches";s:1:"1";s:9:"permalink";s:44:"http://128.192.66.53/wordpress/2011/04/kegg/";}i:7;a:4:{s:2:"ID";s:3:"343";s:10:"post_title";s:8:"InterPro";s:7:"matches";s:1:"1";s:9:"permalink";s:48:"http://128.192.66.53/wordpress/2011/04/interpro/";}i:8;a:4:{s:2:"ID";s:3:"331";s:10:"post_title";s:59:"google.pl - command line google search in a shell with perl";s:7:"matches";s:1:"1";s:9:"permalink";s:58:"http://128.192.66.53/wordpress/2011/04/google-search-perl/";}i:9;a:4:{s:2:"ID";s:3:"324";s:10:"post_title";s:23:"MySql常用命令总结";s:7:"matches";s:1:"1";s:9:"permalink";s:60:"http://128.192.66.53/wordpress/2011/03/mysql-common-command/";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_relation_threshold</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>712</wp:comment_id>
			<wp:comment_author><![CDATA[azalea]]></wp:comment_author>
			<wp:comment_author_email>mazhaorong@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://azaleasays.com</wp:comment_author_url>
			<wp:comment_author_IP>128.118.123.176</wp:comment_author_IP>
			<wp:comment_date>2011-09-01 14:48:05</wp:comment_date>
			<wp:comment_date_gmt>2011-09-01 18:48:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[最近也发现 awk 和 sed 的强大了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1314902885.2";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1314907165.41";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>713</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.53</wp:comment_author_IP>
			<wp:comment_date>2011-09-01 16:03:21</wp:comment_date>
			<wp:comment_date_gmt>2011-09-01 20:03:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[PSU？膜拜！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>712</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1314907401.28";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1540</wp:comment_id>
			<wp:comment_author><![CDATA[myh]]></wp:comment_author>
			<wp:comment_author_email>maoyuanhui@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>113.140.84.98</wp:comment_author_IP>
			<wp:comment_date>2012-03-25 10:19:27</wp:comment_date>
			<wp:comment_date_gmt>2012-03-25 14:19:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有时候用sed或者grep确实比perl脚本快多了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1332685167.34";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1332693095.13";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Bioperl HOWTOs中文翻译小组招募</title>
		<link>http://128.192.66.53/wordpress/?p=568</link>
		<pubDate>Sat, 03 Sep 2011 14:37:32 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=568</guid>
		<description></description>
		<content:encoded><![CDATA[Bioperl HOWTOs中文翻译小组招募

<a href="https://skydrive.live.com/redir.aspx?cid=3c28835207352b3c&amp;resid=3C28835207352B3C!154" target="_blank">https://skydrive.live.com/redir.aspx?cid=3c28835207352b3c&amp;resid=3C28835207352B3C!154</a>

有兴趣加入的请留hotmail

具体问题可留言询问

谢谢！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>568</wp:post_id>
		<wp:post_date>2011-09-03 10:37:32</wp:post_date>
		<wp:post_date_gmt>2011-09-03 14:37:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bioperl-howtos-translation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[609]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[bioperl-howtos-translatio]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2310</wp:comment_id>
			<wp:comment_author><![CDATA[huliang]]></wp:comment_author>
			<wp:comment_author_email>huliang1000@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>77.72.197.131</wp:comment_author_IP>
			<wp:comment_date>2013-03-25 07:07:29</wp:comment_date>
			<wp:comment_date_gmt>2013-03-25 11:07:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[good]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1364209650.03";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1364216887.69";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Next-generation transcriptome assembly</title>
		<link>http://128.192.66.53/wordpress/?p=588</link>
		<pubDate>Fri, 09 Sep 2011 01:22:32 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=588</guid>
		<description></description>
		<content:encoded><![CDATA[Nature Review Genetics <a href="http://www.nature.com/nrg/journal/vaop/ncurrent/full/nrg3068.html" target="_blank">doi:10.1038/nrg3068</a>

一篇入门文章，值得一看，包括引用的一些review

Abstract

Transcriptomics studies often rely on partial reference transcriptomes that fail to capture the full catalogue of transcripts and their variations. Recent advances in sequencing technologies and assembly algorithms have facilitated the reconstruction of the entire transcriptome by deep RNA sequencing (RNA-seq), even without a reference genome. However, transcriptome assembly from billions of RNA-seq reads, which are often very short, poses a significant informatics challenge. This Review summarizes the recent developments in transcriptome assembly approaches — reference-based, de novo and combined strategies — along with some perspectives on transcriptome assembly in the near future.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>588</wp:post_id>
		<wp:post_date>2011-09-08 21:22:32</wp:post_date>
		<wp:post_date_gmt>2011-09-09 01:22:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>next-generation-transcriptome-assembly</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="transcriptome"><![CDATA[Transcriptome]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[838]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1002</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.186.211</wp:comment_author_IP>
			<wp:comment_date>2011-09-24 08:19:12</wp:comment_date>
			<wp:comment_date_gmt>2011-09-24 12:19:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[sent to your qq mail]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1001</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1316866752.94";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1001</wp:comment_id>
			<wp:comment_author><![CDATA[YH]]></wp:comment_author>
			<wp:comment_author_email>yinghonggu@qq.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>221.10.55.205</wp:comment_author_IP>
			<wp:comment_date>2011-09-24 08:12:43</wp:comment_date>
			<wp:comment_date_gmt>2011-09-24 12:12:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Would you please give a full paper? I and many others could not access to that article. Thanks a lot!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1316866500.18";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1316866363.21";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Bioperl 入门（Bioperl HOWTO翻译1）</title>
		<link>http://128.192.66.53/wordpress/?p=596</link>
		<pubDate>Sat, 10 Sep 2011 04:34:43 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=596</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Beginners HOWTO</h3>
<a href="http://www.bioperl.org/wiki/HOWTO:Beginners" target="_blank">英文原文</a>
<h3>原作者</h3>
<a href="http://bioperl.org/wiki/Brian_Osborne">Brian Osborne</a>

<a href="mailto:briano@bioteam.net">briano at bioteam.net</a>
<h3>版权</h3>
原作者保留版权，基于 <a href="http://www.perl.com/pub/language/misc/Artistic.html">Perl Artistic License</a>协议可有限共享。
<h3>摘要</h3>
基于生物学者需要，此HOWTO文档主要是关于如何利用Bioperl进行脚本编程，来进行生物信息学方面的研究。Bioperl是开源的生物信息学工具箱，并且有独立的社区支持。Bioperl其实是一些Perl模块的集成，提供了生物信息学分析的Perl基本模块。虽然有简单的使用例子，但是没有针对具体需要的脚本例子。（译者注：HOWTO文档是基于具体任务的，对生物学者更有针对性。)
<h3>入门简介</h3>
如果你是在做分子生物学的研究，并且用一些常规的方法对基因和蛋白质序列进行分析。也许你想要把这些任务自动化，或者你只是想学一下生物信息学方面的编程技术。这个HOWTO正合你意。此文档会讲述一些Bioperl的常见应用，比如：利用<a href="http://en.wikipedia.org/wiki/BLAST">BLAST</a>进行序列分析，以及从公共数据库中提取序列。有时候会把很多不同的任务放在一起，这时候bioperl就显得非常强大高效。

不可避免会有一些晦涩的编程术语。如果你对编程越了解越好。不太了解也不必担心，这里只是介绍一些基本的编程知识。另外会有一些模块化和面向对象编程的基础内容，如果你需要写一些复杂的脚本，这一点是必须要掌握的。

当学习一门新技术的时候，所面临的挑战之一就是专业术语的学习。编程也不例外。耐心是最好的解决办法！你要知道，学计算机的再去学生物照样十分头疼，有木有！！！

注：bioperl中有一个模块，<a href="http://search.cpan.org/perldoc?Bio::Perl">Bio::Perl</a>，适用于Bioperl新手入门。（译者注：把bioperl一些基本应用转化成函数的形式调用，而不是大量的模块，更易于新手理解。）但这个HOWTO文档并不介绍这个模块，因为这只是其中一个很小的模块，不是真正的面向对象的，且不具备扩展性。这里会主要介绍Bioperl的核心，以及如何举一反三利用好Bioperl。
<h3>安装Bioperl</h3>
<a href="http://www.bioperl.org/wiki/Installing_BioPerl">安装Bioperl</a>是首要任务。总是不断的有人问关于安装的问题。下面三点是问的最多的问题：
<ol>
	<li>在windows下，会出现“Error: Failed to download URL http://bioperl.org/DIST/GD.ppd”，或者“Error: Failed to download URL http://bioperl.org/DIST/GD.ppd”等错误信息。这说明有一些安装Bioperl必须的Perl模块没有被安装，你需要手动安装这些模块。详见“<a href="http://www.bioperl.org/wiki/Installing_Bioperl_on_Windows">在windows上安装Bioperl</a>”。</li>
	<li>在Unix下，类似“Can't locate &lt;some module&gt;.pm in @INC...”的错误信息说明这个模块没有安装。详见“<a href="http://www.bioperl.org/wiki/Installing_Bioperl_for_Unix">在Unix下安装Bioperl</a>”。</li>
	<li>“Tests Failed”错误信息表明在安装过程中有些模块安装是测试不成功，可能会影响今后的使用。Bioperl大约有1一千多个模块，安装时会进行一万多个测试。（译者注：复杂性难以想象，很难避免出错。）一般这种情况出现在GD模块上，GD只和<a href="http://search.cpan.org/perldoc?Bio::Graphics">Bio::Graphics</a>相关，不影响其他的模块；<a href="http://en.wikipedia.org/wiki/XML">XML</a> parser也可能出现这种情况，但也只是影响到读取XML文件。如果要把所有模块安装成功，需要大量的工作。（译者注：新手勿入）</li>
</ol>
（译者注：将来会专门翻译“<a href="http://www.bioperl.org/wiki/Installing_BioPerl">安装bioperl</a>”、<a href="http://www.bioperl.org/wiki/Installing_Bioperl_on_Windows">在windows上安装Bioperl</a>”和“<a href="http://www.bioperl.org/wiki/Installing_Bioperl_for_Unix">在Unix下安装Bioperl</a>”。）
<h3>获取帮助</h3>
在安装和使用Bioperl过程中，出现问题是不可避免的。<a href="mailto:%E5%8F%AF%E4%BB%A5%E7%BB%99bioperl-l@bioperl.org">可以给bioperl-l@bioperl.org</a>邮件列表发邮件寻求帮助。有一批专业人员维护此邮件列表，并提供答复。在询问是，尽量提供详细的信息，这样他们才能有效的帮助你解决问题。

需要提供的信息包括但不限于以下几点：

1． 所使用的Bioperl版本号

2． 操作系统

3． 你的目的

4． 代码

5． 所有出现的错误信息

总是会有人给bioperl-l发邮件抱怨自己的问题没有被回复。一般原因是因为没有提供以上的所有信息，通常是没有提供代码和错误信息。
<h3>关于Perl</h3>
如果想学习更多关于Perl的知识，下面列举了一些学习资源：
<ol>
	<li><a href="http://www.oreilly.com/catalog/lperl2/">Learning Perl</a>是最流行的perl入门书籍。（译者注：google之，很多免费下载链接，包括中文翻译版《perl语言入门》。）</li>
	<li><a href="http://www.oreilly.com/catalog/perlnut2/">Perl in a Nutshell</a>也很好。提供的例子可能并不那么好，但覆盖了大量的内容。</li>
	<li>Perl有自己的文档。试着在命令行中输入“perldoc perl”查看perl帮助文档。对于特定的模块，输入“perldoc &lt;模块名字&gt;”，可以查看关于此模块的帮助文档。举例说明：</li>
</ol>
<pre>perldoc Bio::SeqIO</pre>
<h3>写脚本</h3>
万事开头难。对初学者来说最困难的莫过于写个简单的脚本并运行成功。

在Unix环境下，一般在<a href="http://en.wikipedia.org/wiki/Unix_shell">命令行（shell）</a>环境下工作。可在命令行中用这个命令查看Perl版本（译者注：windows下同样有效。以下命令除特殊说明外，默认在Unix系统下）：
<pre>perl –v</pre>
输出结果：
<pre>This is perl, v5.10.0 built for cygwin-thread-multi-64int

Copyright 1987-2007, Larry Wall Perl may be copied only under the terms of
either the Artistic License or the GNU General Public License, which may be
found in the Perl 5 source kit.

Complete documentation for Perl, including FAQ lists, should be found on this
system using "man perl" or "perldoc perl".  If you have access to the Internet,
point your browser at http://www.perl.org/, the Perl Home Page.</pre>
最好使用最新版本，5.4一下的版本可能会有些问题。查看Perl程序所在的位置
<pre>which perl</pre>
输出类似结果：
<pre>/bin/perl</pre>
知道perl的位置就可以编写脚本，在脚本中的第一行指定Perl所在位置，然后就可一通过Perl来运行此脚本。在Unix下，<a href="http://en.wikipedia.org/wiki/Emacs">emacs</a>和<a href="http://en.wikipedia.org/wiki/Vi">vi</a>都是比较强大的命令行文本编辑器，另外，<a href="http://en.wikipedia.org/wiki/Nano_(text_editor)">nano</a>或<a href="http://en.wikipedia.org/wiki/Pico_(text_editor)">pico</a>比较简单，容易上手。有些Unix系统可能没有自带这些编辑器，自行安装即可。Widows下记事本或者写字板都可。（译者注：Mac下推荐<a href="http://www.barebones.com/products/bbedit/">BBEdit</a>，windows下推荐<a href="http://notepad-plus-plus.org/">notepad++</a>，都有语法高亮等强大功能。）

开始写脚本：
<pre>emacs seqio.pl</pre>
第一行中输入：

[perl]#!/bin/perl[/perl]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>596</wp:post_id>
		<wp:post_date>2011-09-10 00:34:43</wp:post_date>
		<wp:post_date_gmt>2011-09-10 04:34:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bioperl-howto-beginners</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="introduction"><![CDATA[Introduction]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1137]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bioperl创建序列对象（Bioperl HOWTO翻译2）</title>
		<link>http://128.192.66.53/wordpress/?p=602</link>
		<pubDate>Sat, 10 Sep 2011 04:38:29 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=602</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>创建序列（序列对象）</h3>
<a href="http://www.bioperl.org/wiki/HOWTO:Beginners#Creating_a_sequence.2C_and_an_Object" target="_blank">英文原文</a>

第一个脚本先来学习如何创建一个序列，准确的说是一个序列对象。Bioperl是“<a href="http://en.wikipedia.org/wiki/Object_oriented">面向对象</a>”方式的。至于为什么要用“面向对象”，Why introduce these odd or intrusive notions into software that should be biological or intuitive?（不会翻译）。原因在于模块化或者面向对象化会使得处理复杂数据的时候更灵活更简单。一旦越过了这个坎儿，你会发现使用“对象”是理所当然的。

有一种简单的方式去理解“什么是对象”，对象就是一个装载数据的箱子。举一个典型的例子，一个生物学序列包含了不同类型数据（序列本身、序列标识和注释等等），这个序列就类似一个对象。

在Bioperl中，所有的对象都是有特定的模块来创建的，如果要创建某个对象，必须先告诉Perl需要加载哪个模块。例如：

[perl]#!/bin/perl -w
use Bio::Seq;
[/perl]

表示用Pel来加载“<a href="http://search.cpan.org/perldoc?Bio::Seq">Bio::Seq</a>”模块，这个模块在电脑中是一个“&lt;bioperl module directory&gt;/Bio/Seq.pm”文件。<a href="http://search.cpan.org/perldoc?Bio::Seq">Bio::Seq</a>模块可以用于创建一个<a href="http://search.cpan.org/perldoc?Bio::Seq">Bio::Seq</a>对象。这个模块是Bioperl的一个核心模块。在Bioperl中，“Bio::Seq object”、“Sequence object”或者“Seq object”都是指的同一个意思，这个对象包含了一个生物学序列及其名称、标识符和属性。先来看如何创建一个简单的序列对象：

[perl]#!/bin/perl -w
use Bio::Seq;
$seq_obj = Bio::Seq-&gt;new(-seq=&gt; &quot;aaaatgggggggggggccccgtt&quot;,
-alphabet =&gt; 'dna' );
[/perl]

变量$seq_obj就是一个简单的，包含一个序列的序列对象。另外也需要声明这个序列是DNA序列。（-alphabet可以是‘dna’、‘rna’或者‘protein’），如果不声明，Bioperl会猜测一个合理的序列类型。一般能猜测正确，但如果序列中有太多N或X表示未知序列的字符，Bioperl很有可能猜错从而导致更严重的问题。

如前所示，可以自己创建一个对象，<a href="http://search.cpan.org/perldoc?Bio::Seq">Bio::Seq</a>也可以通过读取特定格式的文件来自动创建对象。比如：序列比对结果、数据库记录以及<a href="http://en.wikipedia.org/wiki/BLAST">BLAST</a>结果文件。

必须用new()方法来创建一个新的对象。“模块名称-&gt;方法名称new(一些参数名称=&gt;参数值)”，是Bioperl的标准语法格式。

注：如果你有一些编程经验，你可能会知道“函数”或“子程序”的概念。在面向对象编程中，这个概念应该叫做“方法”。

前面说过，对象就是一个装载数据的箱子，但不止如此，这个箱子还有其他功能。一个对象会有多个方法用于调用。例如，<a href="http://search.cpan.org/perldoc?Bio::Seq">Bio::Seq</a>模块可以调用seq()方法来输出 <a href="http://search.cpan.org/perldoc?Bio::Seq">Bio::Seq</a>对象中的序列。举例说明：

[perl]#!/bin/perl -w
use Bio::Seq;
$seq_obj = Bio::Seq-&gt;new(-seq =&gt; &quot;aaaatgggggggggggccccgtt&quot;, -alphabet =&gt; 'dna' );
print $seq_obj-&gt;seq;
[/perl]

这个脚本会在屏幕上输出“aaaatgggggggggggccccgtt”。-&gt;符号表示一个对象调用它的某个方法。

再来举一个更实际点的例子。一个序列对象一般都要包含标识符、描述和序列。

[perl]#!/bin/perl -w
use Bio::Seq;
$seq_obj = Bio::Seq-&gt;new(-seq        =&gt; &quot;aaaatgggggggggggccccgtt&quot;,
                         -display_id =&gt; &quot;#12345&quot;,
                         -desc       =&gt; &quot;example 1&quot;,
                         -alphabet   =&gt; &quot;dna&quot; );
print $seq_obj-&gt;seq();
[/perl]

其中aaaatgggggggggggccccgtt、 #12345和 example 1叫做“参数”。这个例子展示了如何将各类参数传递给new()方法。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>602</wp:post_id>
		<wp:post_date>2011-09-10 00:38:29</wp:post_date>
		<wp:post_date_gmt>2011-09-10 04:38:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bioperl-howto-create-seq-object</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="seq"><![CDATA[Seq]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[807]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[bioperl-howto-create-seq-objec]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bioperl输出序列文件（Bioperl HOWTO翻译3）</title>
		<link>http://128.192.66.53/wordpress/?p=610</link>
		<pubDate>Sat, 10 Sep 2011 04:46:59 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=610</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>输出序列文件</h3>
<a href="http://www.bioperl.org/wiki/HOWTO:Beginners#Writing_a_sequence_to_a_file" target="_blank">英文原文</a>

下面将展示如何利用两个模块创建一个序列文件。上例中，已经有了一个序列对象$seq_obj，然后需要创建另一个用于读写文件的对象，SeqIO对象。IO表示Input-Output（输入输出）。<a href="http://search.cpan.org/perldoc?Bio::SeqIO">Bio::SeqIO</a>可用于读取和输出各种Bioperl支持的序列格式文件（支持的序列格式列表详见<a href="http://www.bioperl.org/wiki/HOWTO:SeqIO">SeqIO HOWTO</a>）。创建<a href="http://search.cpan.org/perldoc?Bio::SeqIO">Bio::SeqIO</a>对象和前述使用new()创建序列对象的方法类似，如下所示：

[perl]use Bio::SeqIO;
$seqio_obj = Bio::SeqIO-&gt;new(-file =&gt; '&gt;sequence.fasta', -format =&gt; 'fasta' );
[/perl]

注：在-file参数中，“&gt;”符号表示要创建一个名字为“sequence.fasta”的文件用于内容输出。这和一般Perl脚本中，使用函数open()来写文件也是用“&gt;”。（译者注：&lt; 输入、&gt; 输出）。在“-format”参数中声明序列格式是“fasta”，所以创建的会是一个<a href="http://www.bioperl.org/wiki/FASTA_sequence_format">fasta格式</a>的序列文件。

现在来把刚才的两个例子放在一起：

[perl]#!/bin/perl -w
use Bio::Seq;
use Bio::SeqIO;
$seq_obj = Bio::Seq-&gt;new(-seq        =&gt; &quot;aaaatgggggggggggccccgtt&quot;,
                         -display_id =&gt; &quot;#12345&quot;,
                         -desc       =&gt; &quot;example 1&quot;,
                         -alphabet   =&gt; &quot;dna&quot; );
$seqio_obj = Bio::SeqIO-&gt;new(-file =&gt; '&gt;sequence.fasta', -format =&gt; 'fasta' );
$seqio_obj-&gt;write_seq($seq_obj);
[/perl]

最后一行write_seq()是个新东西，是不？在这一行中，序列对象$seq_obj作为write_seq()的参数传递给了SeqIO对象。从另一个角度看，SeqIO对象能够识别并处理序列对象，并将此序列对象以<a href="http://www.bioperl.org/wiki/FASTA_sequence_format">fasta格式</a>输出到一个文件中。来试着运行一下这个脚本：
<pre>perl seqio.pl</pre>
在同一文件夹下会有一个新的文件，“sequence.fasta”，内容如下：
<pre>&gt;#12345 example 1
aaaatgggggggggggccccgtt</pre>
SeqIO非常聪明，比如我们把-format参数设置为“genbank”，序列文件会变成这样：
<pre>LOCUS       #12345                    23 bp    dna     linear   UNK
DEFINITION  example 1
ACCESSION   unknown
FEATURES             Location/Qualifiers
BASE COUNT        4 a      4 c     12 g      3 t
ORIGIN       1 aaaatggggg ggggggcccc gtt
//</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>610</wp:post_id>
		<wp:post_date>2011-09-10 00:46:59</wp:post_date>
		<wp:post_date_gmt>2011-09-10 04:46:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bioperl-howto-write-seq-to-file</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="seqio"><![CDATA[SeqIO]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[959]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bioperl从文件中提取序列（Bioperl HOWTO翻译4）</title>
		<link>http://128.192.66.53/wordpress/?p=619</link>
		<pubDate>Sat, 10 Sep 2011 04:57:43 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=619</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>从文件中提取序列</h3>
<a href="http://www.bioperl.org/wiki/HOWTO:Beginners#Retrieving_a_sequence_from_a_file" target="_blank">英文原文</a>

新手会不太习惯使用<a href="http://search.cpan.org/perldoc?Bio::SeqIO">Bio::SeqIO</a>来处理序列文件。从某些方面可以理解，因为学过了Perl一般的处理文件方式，会对Bioperl的方式不习惯，或者认为比较复杂。但使用open()函数会让提取序列变得非常复杂。请相信SeqIO！它可以处理几乎所有的序列格式、读写序列文件并且和其他很多Bioperl模块相辅相成。

前面我们已经创建了一个“sequence.fasta”的序列文件，现在我们来用SeqIO读取它，如下：

[perl]#!/bin/perl -w
use Bio::SeqIO;
$seqio_obj = Bio::SeqIO-&gt;new(-file =&gt; &quot;sequence.fasta&quot;, -format =&gt; &quot;fasta&quot; );
[/perl]

与前面写文件脚本明显不同的一点是-file参数值没有了“&gt;”符号，意思是读取“sequence.fasta”文件。现在我们加上最关键的一行，通过next_seq方法把序列文件中的序列生成序列对象。

[perl]use Bio::SeqIO;
$seqio_obj = Bio::SeqIO-&gt;new(-file =&gt; &quot;sequence.fasta&quot;, -format =&gt; &quot;fasta&quot; );
$seq_obj = $seqio_obj-&gt;next_seq;
[/perl]

next_seq()方法的作用是将下一个存在的序列提取到SeqIO对象中。在上例中，提取的是第一个序列。同时，将SeqIO对象变量命名为$seq_obj，此SeqIO对象和最开始的例子中，利用<a href="http://search.cpan.org/perldoc?Bio::SeqIO">Bio::Seq</a>自己手动创建的SeqIO对象是相似的。next_&lt;something&gt;方法在Bioperl中经常出现，都是类似的功能。比如，<a href="http://search.cpan.org/perldoc?Bio::AlignIO">Bio::AlignIO</a>中的next_aln()表示提取序列比对结果中的下一个比对，Bio::SearchIO中的next_hit()是提取<a href="http://en.wikipedia.org/wiki/BLAST">BLAST</a>或<a href="http://www.bioperl.org/wiki/HMMER">HMMER</a>结果中的下一个hit。

如果文件中有多个序列，就应该用一个循环来一个一个地读取，示例：

[perl]while ($seq_obj = $seqio_obj-&gt;next_seq){
# print the sequence
print $seq_obj-&gt;seq,&quot;\n&quot;;
}[/perl]

在读取序列时候，并不需要规定“-format”参数来指明文件格式。如果为了安全起见，可以声明。如果没有指定，SeqIO可以通过文件后缀名决定序列格式（Bioperl支持的序列后缀名详见<a href="http://www.bioperl.org/wiki/HOWTO:SeqIO">SeqIO HOWTO</a>）。在上例中，后缀“fasta”已经表明了这是一个fasta文件，SeqIO自动将其作为fasta文件读取。如果是未知的后缀名或没有后缀名，SeqIO会根据序列文件内容猜测可能的格式，但这种猜测无法保证100%正确。

指明“-alphabet”参数会比较有帮助，这样就避免Bioperl去猜测序列类型（"dna", "rna", "protein"），因为Bioperl有时候可能猜不对，例如MGGGGTCAATT这样的蛋白质序列会被当作DNA序列，或者类似“-”符号出现在序列中也会影响Bioperl的判断。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>619</wp:post_id>
		<wp:post_date>2011-09-10 00:57:43</wp:post_date>
		<wp:post_date_gmt>2011-09-10 04:57:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bioperl-howto-retrieve-seq-from-file</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="seqio"><![CDATA[SeqIO]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1020]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bioperl从网络数据库中提取一个序列（Bioperl HOWTO翻译5）</title>
		<link>http://128.192.66.53/wordpress/?p=626</link>
		<pubDate>Sat, 10 Sep 2011 05:04:12 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=626</guid>
		<description></description>
		<content:encoded><![CDATA[从网络数据库中提取一个序列

<a href="http://www.bioperl.org/wiki/HOWTO:Beginners#Retrieving_a_sequence_from_a_database" target="_blank">英文原文</a>

Bioperl强大的功能之一就是可以从各种类型的资源中提取序列而不用考虑其格式，序列文件、网络数据库、本地数据库等。在此举例说明如何利用<a href="http://search.cpan.org/perldoc?Bio::DB::GenBank">Bio::DB::Genbank</a>模块从<a href="http://en.wikipedia.org/wiki/GenBank">Genbank</a>中提取一个序列条目。

先声明要使用的模块：

[perl]use Bio::DB::GenBank;[/perl]

也可以从下列数据库中提取序列：<a title="wp:Swissprot" href="http://en.wikipedia.org/wiki/Swissprot">SwissProt</a> (<a title="http://search.cpan.org/perldoc?Bio::DB::SwissProt" href="http://search.cpan.org/perldoc?Bio::DB::SwissProt">Bio::DB::SwissProt</a>)、GenPept (<a title="http://search.cpan.org/perldoc?Bio::DB::GenPept" href="http://search.cpan.org/perldoc?Bio::DB::GenPept">Bio::DB::GenPept</a>)、 <a title="wp:EMBL" href="http://en.wikipedia.org/wiki/EMBL">EMBL</a> (<a title="http://search.cpan.org/perldoc?Bio::DB::EMBL" href="http://search.cpan.org/perldoc?Bio::DB::EMBL">Bio::DB::EMBL</a>)、SeqHound (<a title="http://search.cpan.org/perldoc?Bio::DB::SeqHound" href="http://search.cpan.org/perldoc?Bio::DB::SeqHound">Bio::DB::SeqHound</a>)、Entrez Gene (<a title="http://search.cpan.org/perldoc?Bio::DB::EntrezGene" href="http://search.cpan.org/perldoc?Bio::DB::EntrezGene">Bio::DB::EntrezGene</a>)、 RefSeq (<a title="http://search.cpan.org/perldoc?Bio::DB::RefSeq" href="http://search.cpan.org/perldoc?Bio::DB::RefSeq">Bio::DB::RefSeq</a>)等。

然后创建一个对象：

[perl]use Bio::DB::GenBank;
$db_obj = Bio::DB::GenBank-&gt;new;
[/perl]

这里创建了一个“数据库对象”，但并没有任何参数。再来看数据库对象的一个有用的功能：

[perl]use Bio::DB::GenBank;
$db_obj = Bio::DB::GenBank-&gt;new;
$seq_obj = $db_obj-&gt;get_Seq_by_id(2);
[/perl]

get_Seq_by_id方法 识别Genbank的GI号。另外，get_Seq_by_acc 可识别accession号 (e.g. "A12345")，get_Seq_by_version可识别带版本号的accession号(e.g. "A12345.2")。相应的方法只能识别相应的条目标识号。

Bioperl可以从数据库中提取一个或多个序列。但如果要提取大批量的序列时，要避免使用循环，否则NCBI会认为是滥用其服务资源而封掉使用者的IP。有其他很多更好更快的方法来大批量提取，例如，下载GenBank的某一部分数据（译者注：比如可以从NCBI ftp只下载人类的mRNA序列），然后从中直接提取需要的序列；或者使用格式化过的数据库（使用本地BLAST中formatdb格式化），然后用fastacmd（也在本地BLAST程序中）提取所需要的序列。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>626</wp:post_id>
		<wp:post_date>2011-09-10 01:04:12</wp:post_date>
		<wp:post_date_gmt>2011-09-10 05:04:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bioperl-howto-retrieve-seq-from-database</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="genbank"><![CDATA[Genbank]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[836]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bioperl从网络数据库中提取多个序列（Bioperl HOWTO翻译6）</title>
		<link>http://128.192.66.53/wordpress/?p=640</link>
		<pubDate>Sun, 11 Sep 2011 01:58:31 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=640</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>从网络数据库中提取多个序列</h3>
<a href="http://www.bioperl.org/wiki/HOWTO:Beginners#Retrieving_multiple_sequences_from_a_database" target="_blank">英文原文</a>

虽然有很多更复杂的方法从<a href="http://en.wikipedia.org/wiki/GenBank">Genbank</a>中提取多个序列，这里只展示一个比较“生物学”的办法，即利用<a href="http://search.cpan.org/perldoc?Bio::DB::Query::GenBank">Bio::DB::Query::GenBank</a>模块。查询Genbank中拟南芥拓扑异构酶（Arabidopsis topoisomerases）的核苷酸序列，代码示例：

[perl]use Bio::DB::Query::GenBank;
$query = &quot;Arabidopsis[ORGN] AND topoisomerase[TITL] and 0:3000[SLEN]&quot;;
$query_obj = Bio::DB::Query::GenBank-&gt;new(-db =&gt; 'nucleotide',
                                          -query =&gt; $query );
[/perl]

注：类似这种通过字符串获取序列的办法只适用于<a href="http://www.bioperl.org/wiki/Release_pumpkin">Bioper 1.5版</a>之后，且只能查询<a href="http://en.wikipedia.org/wiki/GenBank">Genbank</a>，至于其他数据库，如<a href="http://en.wikipedia.org/wiki/Swissprot">Swissprot</a>或<a href="http://en.wikipedia.org/wiki/EMBL">EMBL</a>，只能通过标识号或accession号查询。

另一个例子，获取布氏锥虫（<em>Trypanosoma brucei</em>）的  EST序列

[perl]
$query_obj = Bio::DB::Query::GenBank-&gt;new(
-query   =&gt;'gbdiv est[prop] AND Trypanosoma brucei [organism]',
-db      =&gt; 'nucleotide' );[/perl]

关于Genbank的查询字符串格式，详见<a href="http://www.ncbi.nlm.nih.gov/entrez/query/static/help/Summary_Matrices.html#Search_Fields_and_Qualifiers">此处</a>。

刚才的例子中只是创建了一个查询对象（query object），但并没有真正提取到序列。还需要创建一个数据库对象，然后就可以按照以前讲过的在数据库对象中提取序列信息。

[perl]
use Bio::DB::GenBank;
use Bio::DB::Query::GenBank;
$query = &quot;Arabidopsis[ORGN] AND topoisomerase[TITL] and 0:3000[SLEN]&quot;;
$query_obj = Bio::DB::Query::GenBank-&gt;new(-db =&gt; 'nucleotide',
                                          -query =&gt; $query );
$gb_obj = Bio::DB::GenBank-&gt;new;
$stream_obj = $gb_obj-&gt;get_Stream_by_query($query_obj);
while ($seq_obj = $stream_obj-&gt;next_seq) {
# do something with the sequence object
print $seq_obj-&gt;display_id, &quot;\t&quot;, $seq_obj-&gt;length, &quot;\n&quot;;
}[/perl]

$stream_obj 和get_Stream_by_query会比较陌生。需要提取多个序列信息时，可以使用这种数据流（stream）的形式。和get_Seq_by_id比较类似，只不过可以提取多个序列。

注意上述代码是一步一步分开执行的：先是查询对象，然后传递给数据库对象，最后用一个循环来输出序列信息，循环内用的是序列对象。

警告：一定要注意查询字符串的设置。现在核苷酸数据库非常庞大，如果返回的查询结果包含了非常多的序列的话，程序会长时间运行下去，甚至耗尽内存。可以通过设置[SLEN]来限制结果数量。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>640</wp:post_id>
		<wp:post_date>2011-09-10 21:58:31</wp:post_date>
		<wp:post_date_gmt>2011-09-11 01:58:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bioperl-howto-retrieve-multipleseq-from-database</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="genbank"><![CDATA[Genbank]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[788]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mac下类似apt-get和yum的软件——macports</title>
		<link>http://128.192.66.53/wordpress/?p=670</link>
		<pubDate>Tue, 20 Sep 2011 13:08:16 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=670</guid>
		<description></description>
		<content:encoded><![CDATA[用惯了apt-get和yum，现在转到mac上，总想着sudo apt-get install一下安装某些软件。其实mac也有类似的软件，<a href="http://www.macports.org/" target="_blank">MacPorts</a>和<a href="http://www.finkproject.org/index.php" target="_blank">fink</a>。

今天先介绍MacPorts。

先安装xcode和X11，然后到<a href="http://www.macports.org/install.php" target="_blank">这里</a>下载.dmg。安装以后就可以在终端里类似apt-get那样安装软件了（包括GNU软件、开源软件等），如：
<pre>sudo port install wget</pre>
其他操作还有：
<pre>
sudo port selfupdate       #升级port
sudo port sync                #同apt-get的update。
port list                            #列出所有软件
port search XXX              #查找XXX软件
port deps XXX                 #查看XXX软件的依赖
sudo port install XXX       #安装XXX软件
sudo port uninstall XXX   #卸载</pre>
等。

更多的细节可以在MacPorts官网获得。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>670</wp:post_id>
		<wp:post_date>2011-09-20 09:08:16</wp:post_date>
		<wp:post_date_gmt>2011-09-20 13:08:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>macports</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="apt-get"><![CDATA[apt-get]]></category>
		<category domain="category" nicename="mac"><![CDATA[Mac]]></category>
		<category domain="post_tag" nicename="mac"><![CDATA[Mac]]></category>
		<category domain="post_tag" nicename="macports"><![CDATA[MacPorts]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="yum"><![CDATA[yum]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[3485]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>BUSY</title>
		<link>http://128.192.66.53/wordpress/?p=685</link>
		<pubDate>Mon, 03 Oct 2011 20:27:28 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=685</guid>
		<description></description>
		<content:encoded><![CDATA[too busy in these days.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>685</wp:post_id>
		<wp:post_date>2011-10-03 16:27:28</wp:post_date>
		<wp:post_date_gmt>2011-10-03 20:27:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>busy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="busy"><![CDATA[Busy]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[629]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Steve Jobs (1955-2011)</title>
		<link>http://128.192.66.53/wordpress/?p=687</link>
		<pubDate>Thu, 06 Oct 2011 01:31:01 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=687</guid>
		<description></description>
		<content:encoded><![CDATA[Steve Jobs (1955-2011), "stay hungry, stay foolish."]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>687</wp:post_id>
		<wp:post_date>2011-10-05 21:31:01</wp:post_date>
		<wp:post_date_gmt>2011-10-06 01:31:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>steve-jobs-1955-2011</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="apple"><![CDATA[Apple]]></category>
		<category domain="post_tag" nicename="die"><![CDATA[Die]]></category>
		<category domain="category" nicename="mac"><![CDATA[Mac]]></category>
		<category domain="post_tag" nicename="mac"><![CDATA[Mac]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="steve-jobs"><![CDATA[Steve Jobs]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[359]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>使用perl模块迅速得到两数组的子集和并集</title>
		<link>http://128.192.66.53/wordpress/?p=693</link>
		<pubDate>Sun, 09 Oct 2011 03:39:52 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=693</guid>
		<description></description>
		<content:encoded><![CDATA[省得自己写代码，循环、遍历，纠结于各种算法的效率上。

直接拿来主义，用已有的模块，<a href="http://search.cpan.org/~jkeenan/List-Compare-0.37/lib/List/Compare.pm" target="_blank">List::Compare</a>。

既然发在CPAN上，估计是优化过的，而且反正perl的速度本来就不快，又只是自己用，简单易用省心，最好。

[perl]
use List::Compare; #需要安装
@Llist = qw(abel abel baker camera delta edward fargo golfer);
@Rlist = qw(baker camera delta delta edward fargo golfer hilton);
$lc = List::Compare-&gt;new(\@Llist, \@Rlist); #使用数组的reference

@intersection = $lc-&gt;get_intersection; #子集
@union = $lc-&gt;get_union; #并集

print &quot;@intersection\n@union\n&quot;;
[/perl]

List::Compare还有很多其他用法。

比如，get_unique()，返回第一个数组特有的那些元素；

而get_complement()，返回第二个数组特有的那些元素；

以及get_symmetric_difference()，返回属于某一数组但不同时属于两个数组的那些元素。

详见<a href="http://search.cpan.org/~jkeenan/List-Compare-0.37/lib/List/Compare.pm" target="_blank">List::Compare</a>。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>693</wp:post_id>
		<wp:post_date>2011-10-08 23:39:52</wp:post_date>
		<wp:post_date_gmt>2011-10-09 03:39:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>perl-list-compare</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="array"><![CDATA[Array]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl-module"><![CDATA[Perl module]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="subset"><![CDATA[Subset]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[554]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>使用Perl做频率分布图</title>
		<link>http://128.192.66.53/wordpress/?p=710</link>
		<pubDate>Sun, 09 Oct 2011 12:50:18 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=710</guid>
		<description></description>
		<content:encoded><![CDATA[[perl]
#需要安装相应模块
use GD::Graph::histogram;

#创建一个数组的reference
$data = [1,5,7,8,9,10,11,3,3,5,5,5,7,2,2];

#创建图片对象
my $graph = new GD::Graph::histogram(400,600);

#设置格式
$graph-&gt;set(
    x_label         =&gt; 'X Label',
    y_label         =&gt; 'Count',
    title           =&gt; 'A Simple Count Histogram Chart',
    x_labels_vertical =&gt; 1,
    bar_spacing     =&gt; 0,
    shadow_depth    =&gt; 1,
    shadowclr       =&gt; 'dred',
    transparent     =&gt; 0,
)
or warn $graph-&gt;error;

#输出频率分布图到图片对象上
my $gd = $graph-&gt;plot($data) or die $graph-&gt;error;

#打印到文件
open(IMG, '&gt;histogram.png') or die $!;
binmode IMG;
print IMG $gd-&gt;png;
close IMG;
[/perl]

详见<a href="http://search.cpan.org/dist/GDGraph-histogram/lib/GD/Graph/histogram.pm" target="_blank">GD::Graph::histogram</a>。

Perl做出来的图真是难看，跟R差太远了。

我是用了大量perl script提取出了一些数据，只是想先看看数据的分布情况，不做拟合和后续统计分析，懒得写R script了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>710</wp:post_id>
		<wp:post_date>2011-10-09 08:50:18</wp:post_date>
		<wp:post_date_gmt>2011-10-09 12:50:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>perl-gd-graph-histogram</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="histogram"><![CDATA[Histogram]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl-module"><![CDATA[Perl module]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[761]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e4%bd%bf%e7%94%a8perl%e5%81%9a%e9%a2%91%e7%8e%87%e5%88%86%e5%b8%83%e5%9b%be]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>life is tough</title>
		<link>http://128.192.66.53/wordpress/?p=781</link>
		<pubDate>Thu, 03 Nov 2011 13:26:40 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=781</guid>
		<description></description>
		<content:encoded><![CDATA[我是个不太容易生气的人，

依稀记得上次生气还是去年，

再上一次是前年。

最近某人一而再再而三的惹我。

祝愿那些曾经惹我生气的人或组织，

包括某政府，

早死早超生。

那人死后绝对上不了他所谓的天堂，

人品太差。

唉，

文人的毛病，

躲在某个角落，

愤愤。

其他人该怎样还怎样。

起身，

继续看paper。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>781</wp:post_id>
		<wp:post_date>2011-11-03 09:26:40</wp:post_date>
		<wp:post_date_gmt>2011-11-03 13:26:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>life-is-tough</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="angry"><![CDATA[Angry]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="stupid"><![CDATA[Stupid]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[387]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[转]海归，海不归：留学人员无法回避的两难抉择</title>
		<link>http://128.192.66.53/wordpress/?p=790</link>
		<pubDate>Thu, 03 Nov 2011 14:30:35 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=790</guid>
		<description></description>
		<content:encoded><![CDATA[（一篇好文，贴近现实，不造作，不谈“格调”）

作者：吕小羽 来源：科学时报

是在美国的好山好水之中体味寂寞呢，还是在国内拥挤嘈杂的人潮中快意拼搏？这是每一个留学人员无法回避的两难抉择，是横亘在他们心头的哈姆雷特之问。
<div id="ztload"></div>
秋千荡起的是快乐也是寂寞。

在美国的留学人员中流传着这样两句话，形容中国与美国的不同：美国是“好山好水好寂寞”，中国是“好挤好乱好快活”。

去年12月，中组部部长李源潮在第13届中国留学人员广州科技交流会开幕式上曾经引用这两句话，他在讲话中说：“一位回国创业的年轻人告诉我：在那边，是好山好水好寂寞；到这边，是好挤好乱好快活。确实，中国现在还不是世界上科研条件、生活条件最好的国家，但中国是现在世界上发展最活跃、人才创新创业机会最多的国家之一。”

李源潮说这番话的目的是吸引留学生回国创业。其实，每一位留学人员心里都明白，中国是自己的故乡，有自己熟悉的一切，可无法否认的是，其自然环境和社会环境尚有种种不尽如人意之处；美国有优美的自然环境，文明的社会氛围，然而中国人生活在美国却要忍受文化的疏离感。

那么，是在美国的好山好水之中体味寂寞呢，还是在国内拥挤嘈杂的人潮中快意拼搏？这是每一个留学人员无法回避的两难抉择，是横亘在他们心头的哈姆雷特之问。

然而这个问题在20年前，甚至10年前都不成其为问题。在改革开放初期和上世纪90年代，好容易走出国门的留学生们，一旦踏上美利坚的土地，见识到这个物质文明高度发达的社会，几乎立即就确定了要在这片土地上扎根的决心。一拿到学位就义无反顾地留在美国，很少有回国的考虑。因为在那时，中国的社会、经济各方面与美国相比还有较大的差距，两者基本上不具备可比性，很容易作出选择。

时过境迁，对于2000年以后出国的人来说，情况就完全不同了。经过近20年的高速发展，中国已经今非昔比，与美国的差距在渐渐缩小，一线大城市的设施与生活水平并不比美国差。再加上经济发展所创造的大量机会，使中国更具备吸引力。然而正是这一点，使今天的留学生们面临两难选择：两边都各有长短，取舍就变得分外困难。

于是乎，有人“海归”，有人“海不归”，还有的人则干脆当起了“海鸥”，在太平洋上空飞去飞来。

选择回国的往往是那些在国内有一定的人脉关系，对自己的社交能力还比较自信的人。他们对国内的环境适应性较强，也愿意折腾一番。

还有一些人是考虑到父母的养老问题而选择回国。因为语言、文化的原因，老年人很难适应美国的生活，再加上医疗保险等问题，将父母接到美国养老并不现实。这个问题往后会更加凸显，因为现在出国的留学生都是实行独生子女政策以后出生的，如何兼顾父母这一问题在他们身上会更为现实和严峻。

选择不回国的人也有各自的原因。其中很大一部分觉得自己缺少背景，回国不会比在美国发展得更好。国内大城市生活成本又比较高，一切靠自己打拼会很辛苦。这些人从内心里来说更喜欢美国简单的人际关系和一切皆守定规的社会氛围，更倾向于过简单自然的生活。

我的一个朋友就是如此。这位朋友是学机械制造的，在纽约大学拿了博士学位。当时，上海的一所著名高校和他在厦门的母校都邀请他去任教，并承诺给他丰厚的待遇。他最终没有回国。他跟我聊天时说：“我是个简单的人，不擅长处理错综复杂的人际关系。再说国内也太拥挤了。相对来说，美国这边的生活更让我觉得轻松。”2007年他在得克萨斯州找到了工作，带着妻子搬到了得克萨斯南部海边。他在电话中向我描述现在的生活：房子很大，仅院子就有500平方米。前院被他们布置成了花园，后院是草坪、游泳池。还种了一个很大的菜园，四季的蔬菜除了自给自足以外，还能分赠给周围的邻居。房子离海边开车半小时，周末夫妻两人常常到海边游泳、散步、垂钓，只需用绳子绑住一根生鸡腿浸到海水里，一会儿工夫就能钓上来一串大海蟹。前不久他把父母接过去小住，让他们也享受那里干净的空气和大自然。

还有很多人是为了孩子的教育留在美国。到美国留学的人无疑是同龄人中的佼佼者，是应试教育的胜出者。然而深知其中甘苦的他们却不愿意让自己的孩子再走同样的路。

我的另一家朋友就是如此。他家已经在洛杉矶一个不错的学区买了房子，家里有两个上小学和幼儿园的孩子。他们按照美国人的习惯在后院布置了儿童活动区，有秋千、沙坑、滑梯，还有一棵枝繁叶茂的大树，树上建造了树屋。孩子们每天下午两点半放学后，有时去同学家玩，有时就在自己家的后院里自由玩耍。偶尔也弹弹钢琴，纯粹出于兴趣。孩子们的妈妈常说，国内的孩子上学太累了，几乎没有快乐的童年。经受那么大的压力，目的不过是为了上一个好大学。而在美国这边，轻轻松松，玩着长大，也能上大学，而且是世界名校，毕业以后的发展空间更大。在美国上学，家长也更轻松，不需要像国内那样托关系、找门路去争取所谓的重点学校。

正因为生活在美国有这么多好处，而中国也确实有很多机会，不少人实在难以取舍，只好选择当“海鸥”，把孩子、家庭留在美国享受优质环境和教育，自己只身回国创业，体验中国经济成长期的无限可能性，定期往返于中美之间。

归，还是不归？这的确是个问题。这个问题并不是爱不爱国这一简单的划分所能涵盖的，而是关乎人的自由、价值与尊严等多方面的命题。

留在美国的，生活的确安稳富足，但远离故土与亲人，内心深处总有思乡的愁绪。回到国内的，在热热闹闹的生活之余，回想彼岸的风景，也会有一丝留恋与怅然。

归与不归都有遗憾，鱼和熊掌不可兼得。这也许就是生活的真谛。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>790</wp:post_id>
		<wp:post_date>2011-11-03 10:30:35</wp:post_date>
		<wp:post_date_gmt>2011-11-03 14:30:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>back-or-not</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="abroad"><![CDATA[Abroad]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="return"><![CDATA[Return]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[543]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[转]传说中的程序猿</title>
		<link>http://128.192.66.53/wordpress/?p=792</link>
		<pubDate>Sun, 06 Nov 2011 14:35:04 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=792</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.cnblogs.com/God-froest/archive/2011/11/06/programMonkey.html" target="_blank">原文链接</a>

<img class="alignright size-medium wp-image-797" style="border-style: initial; border-color: initial; color: #0000ee; text-decoration: underline;" title="programming monkey" src="http://128.192.66.53/wordpress/wp-content/uploads/2011/11/Screenshot-at-2011-11-06-213721-300x163.png" alt="" width="300" height="163" />

程序猿是一种近几十年来出现的新物种，是工业革命的产物。<strong>英文</strong>(Programmer Monkey)是一种非常特殊的、可以从事程序开发、维护的动物。一般分为程序设计猿和程序编码猿，但两者的界限并不非常清楚，都可以进行开发、维护工作，特别是在中国，而且最重要的一点，二者都是一种非常悲剧的存在。
<div><span style="color: #0000ee;"><span style="text-decoration: underline;">
</span></span>他的特点是：对技术充满JI情（因为能够得到香蕉）将编程作为一种爱好（不一定，只有少数的程序猿有这一素质）

如果你允许会滔滔不绝地跟你谈论技术（程序猿使用特殊的语言，别的人或猴子很难听懂）

有过个人的开发经历（独立的寻找过香蕉或追寻母猿）

坚持认为某种技术最好（程序猿都很固执）

如果让他用他认为不好的技术他会非常别扭（同上）

聪明、健谈、兴趣广泛（只限于NEET和有关宅话题）

在大学和工作前就开始接触程序（程序猿从小就是程序猿了）

总而言之，程序猿和它的一些同种族（如网管猿，技术猿）一样，都是人类用来帮助提高生产力的家畜，由于许多程序猿的智力很高，所以经常自己去寻找香蕉或妹子而无心工作，但这只是个别现象，总体来说程序猿是一种对人类很有用的动物，它们工作时很勤劳，而且不像 业务猿 那样喜欢跳奇怪的舞蹈（也叫增猿舞）吵的人们想鬼畜它，程序猿一般到了30岁左右就会进化成别的猿类（一般是管理猿），不过据报道，也有一些少数一生都是没有母猿的悲剧程序猿。

程序猿是被诅咒的悲惨生物，它们受到的诅咒有：过度的劳作、永远不足的睡眠、低廉的收入等等……

程序猿并不擅长战斗，它们生活中最主要的活动是——在树叶上打洞，然后将打洞的树叶放进一个木盒子里念咒语，并声称那些是能够提高族群的食物供给或提供其他神奇功能的伟大产品。但是，因为每个程序猿打洞的方式各不相同，他们之间也会经常爆发冲突，每个程序猿都声称自己所用的打洞方式是最好最先进，打出的洞是最美最华丽的，并不惜因此用打洞的树叶互相投掷。根据一些冒险者收集到的程序猿族群的资料，所谓的打洞方式，现在所知，有——西珈岬式、爪哇式、希沙埔式等等。不过，另人惊异的是，虽然每个程序猿所用的打洞方式都不同，但它们能用几乎所有的方式来给树叶打洞，来表达“你好，世界”的意思……

因为长时间的不运动，程序猿的体力普遍低下，不擅长近战。不过，它们的高超智力弥补了这个缺陷。投掷打洞树叶是它们常用的攻击方式，而且，一如它们所宣称的一样，那些树叶有着一些神奇的功能——很多冒险者在受到树叶攻击后，虽然受伤并不严重，但都不同程度表现出反应迟缓、四肢不听指挥、眼前一片蓝色等症状，甚至于昏迷不醒。不过，好在这些症状都不致命，但是这足以保护程序猿远离冒险者的侵扰。

程序猿只为了保护栖息地才会战斗，因此，一般冒险者都会绕开它们的地界。而且，由于程序猿的智力达到了能和冒险者交流的程度，甚至有的冒险者和程序猿族群建立了良好的关系，并且得到了它们的打洞树叶作为向族群提供食物的交换——只是这些礼物在冒险者手上远不如在程序猿手上可靠……

诗歌歌颂：锄禾日当午，不如coding苦，对着C++，一调一下午； 锄禾日当午，不如coding苦，调了一下 午，Bug还得补; 锄禾日当午，不如coding苦，Bug刚补完，结构需重组； 锄禾日当午，哪有coding苦，Bug改不完，无言见列祖。

日常行为特点：
<h3><a name="5_1"></a>一、准备工作</h3>
“工欲善其事必先利其器。”

1.电脑不一定要配置高，但是双屏是必须的，越大越好，能一个横屏一个竖屏更好。一个用来查资料，一个用来写代码。总之要显得信息量很大，效率很高。

2.椅子不一定要舒服，但是一定要可以半躺着。

3.大量的便签，各种的颜色的，用来记录每天要完成的事务，多多益善。沿着电脑屏幕的边框，尽量贴满，显出有很多事情的样子。

4.工具书，orelly的，机械工业，电子工业什么的都可以，能英文就英文，不行影印版的也可以，反正越厚越好，而且千万不要放在书架上，一定要堆在桌上，半打开状。
<h3><a name="5_2"></a>二、从进门开始</h3>
1.着装！着装！不管你是去实验室，或者去公司的大楼，在或者是小公司的民宅，或是自己创业的黑作坊；无论是春夏秋冬白天晚上刮风下雨电闪雷鸣台风龙卷风，一个装b的程序员都要十分在意自己着装！这里只提出参考建议。初级装：衬衣+牛仔裤+休闲鞋。中级装：T恤+宽松短裤+拖鞋。高级装：背心+宽松大花裤衩+人字拖。

2.得体的举止。在走廊以及任何形式的过道里，一定要双手插兜，走得像个痞子，至少要看起来有点反社会，如若不行，可走文弱天才型geek路线。。

3.如果有女性在你背后指指点点，小声嘀咕说这一定是一个技术男的时候，应该先低头，然后保持低头状态，缓缓回头，坏坏地蔑笑但是不要出声，然后快步前行。

4.进门后，一定不要跟任何人打招呼，笔直走向自己的位置，最多路过打一杯咖啡，千万不要有多余的动作，显示出自己的专注与心无旁骛。
<h3><a name="5_3"></a>三、坐下就不要再动了</h3>
1.坐下以后，姿势需要略微后仰，能翘着二郎腿最好了，然后在后仰的情况下低着头，以便看到屏幕，然后千万就不要再动了。
<div>　　2.粗暴地把电脑前的大堆书推开一个口，然后摘下电脑上的一个便签，看一眼，不过3秒，可以开始coding了。</div>
3.能不用IDE就不要用，实在装不了，无论IDE是什么，一定要调成DOS那种黑色背景的。

4.如果写前台界面，就不停地调试后台代码；如果写java，就在里面混编C；如果写C，就在里面混编汇编。不光要coding，还要时不时的翻出一本什么英文的书翻一翻，看不懂就看看插图，然后扔到面前假装懂了继续coding。

5.什么看起来高端就用什么，不要管实用不实用。例如对C++：switch统统重构成多态；如果有指针，统统改成智能的；C++一定要自己写 template；数字是全部要替换成宏的名字能起多长就起多长；struct就不要出现了，如果出现，也一定要用__attriburte__修饰一下；运算都是位操作的；操作符都是重载的；网络都是并发缓冲线程池的；int只用int32_t声明的;继承不用普通的，什么多继承虚继承啊；helloworld也要写捕获异常的；后人一看代码，中间一堆关键字 extern,asm,auto,XXXXX_cast,volatile,explicit,register,template，让一般总在敲 int,if,else,for的小程序员顿时心生崇拜。

6.注释？算了吧。只有两个路线可以选：一，变量名起得巨长无比，看代码就和读英文文章一样顺畅，根本不需要加注释。 二，代码无比晦涩，加不加注释根本无影响。

7.千万不要用IM工具交流，千万不要问同事问题，显得自己没有水平，都是自己上网或者查书。

8.无论是同事间开玩笑或者发生任何群体性时间，不要抬头，更不要东张西望，即使地震火灾，也一定要先提交代码再行离开。
<h3><a name="5_4"></a>四、潇洒地离开</h3>
1.人走，主机是千万千万不能关的，至少要跑个daily build，实在不行正在svn提交也勉强算过关。

2.书应该已经又堆到屏幕前了，千万不要整理，明天再来推开。

3.不强求最后一个走，但一定要所有的非程序员，什么市场啊前台啊pm啊都走光了，才可以走。

4.走得时候一定要率性，千万不要收拾任何东西，站起来，出门，好的，就这样。

5.如果今天一定要说句话的话，找到那个最苦逼的程序员，跟他说，你进度太慢了啊，不要老让我等你。

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>792</wp:post_id>
		<wp:post_date>2011-11-06 09:35:04</wp:post_date>
		<wp:post_date_gmt>2011-11-06 14:35:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%e4%bc%a0%e8%af%b4%e4%b8%ad%e7%9a%84%e7%a8%8b%e5%ba%8f%e7%8c%bf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="coder"><![CDATA[Coder]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[558]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[co-author] Nat. Biotechnol.：木豆基因组破译加速育种发展</title>
		<link>http://128.192.66.53/wordpress/?p=795</link>
		<pubDate>Mon, 07 Nov 2011 02:23:06 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=795</guid>
		<description></description>
		<content:encoded><![CDATA[2011年11月7日，由国际半干旱地区热带作物研究所(ICRISAT)主导，美国乔治亚大学、美国加州大学戴维斯分校、美国冷泉港实验室、美国国家基因组资源中心、深圳华大基因研究院等单位共同合作完成的木豆基因组研究成果在国际权威杂志《自然-生物技术》（Nature Biotechnology）上在线发表。木豆是继大豆之后第二个完成基因组测序的食用豆类，其基因组测序的完成将有助于科学家们从基因组水平更好地了解木豆的生物学特性，对提高木豆的质量、产量和促进亚洲及撒哈拉以南的非洲等地区的可持续性粮食生产具有重大意义。本项目得到了国际农业研究顾问机构(CGIAR)开展的全球挑战计划(Generation Challenge Programme, GCP)的大力支持。

木豆是木豆属Cajanus中唯一的一个栽培种Cajanus cajan，为世界第六大食用豆类，也是迄今为止唯一的一种木本食用豆类作物。木豆原产于印度，距今大约已有6000年的栽培历史，目前全世界木豆栽培面积为500多万公顷，主要分布在亚洲、非洲撒哈拉沙漠以南和美国中南部，其中，栽培面积最大的是印度，占世界的80%以上。木豆在世界的半干旱地区是一种非常重要的食用豆类，由于其高蛋白含量被称为“穷人的肉”，与谷类一起搭配食用可保证当地居民的膳食平衡。木豆基因组结构和功能的研究对提高木豆的质量、产量和增强其对恶劣环境的抵抗能力和防治病虫害等方面具有重要意义。

研究人员通过新一代测序技术对木豆的DNA进行测序、组装和注释，推测出木豆的基因组大小约为833.07Mb（组装得到的基因组大小约为605.78Mb），并预测其含有48,680个基因。研究人员发现了一些木豆所特有的耐旱基因，这些基因可以被转入到大豆、豇豆或者菜豆等其他豆类植物中，从而提高这些豆类的耐旱性，这将有助于改善干旱地区贫困农民的生计。文章的第一作者之一、华大基因该项目负责人陈文彬介绍说：“在对木豆的基因组进行分析时，我们发现这些与耐旱相关的基因在整个木豆的驯化及其祖先的进化历史上很可能扮演着非常重要的角色。木豆基因组序列图谱的完成为深入探讨其重要农业性状奠定了坚实的遗传学基础，并将有助于具有优良性状的木豆新品种的研究与开发”。

国际半干旱地区热带作物研究所所长 William D. Dar说：“目前全球正面临着几十年来最严重的旱灾和饥荒，尤其是非洲。以科学为基础的、可持续的农业发展对帮助干旱地区人民摆脱贫困和饥荒是至关重要的。木豆基因组序列图谱的完成对加速新品种培育、提高作物产量以及改善民生具有非常重要的意义。”

文章的第一作者、该项目的首席科学家Rajeev Varshney博士解释说：“目前，通过传统的方法培育一个新品种大概需要6-10年的时间，而木豆基因组序列图谱将有助于加快木豆‘优良基因’的筛选，可使培育一个新品种的时间缩短至3年，同时也会使成本大大降低。” 华大基因主席杨焕明院士表示：“此次木豆基因组项目的重大成果对中印两国科学家之间的合作具有里程碑式的意义，说明中印两国的科学家在基因组学研究领域已经建立了良好的合作关系和深刻的共识。希望将来我们能有更多的合作机会，为整个世界和人类做出更多贡献。”(<a href="http://www.bioon.com/" target="_blank">生物谷</a>Bioon.com)

nature链接<a title="" href="http://dx.doi.org/10.1038/nbt.2022" target="_blank">doi:10.1038/nbt.2022</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>795</wp:post_id>
		<wp:post_date>2011-11-06 22:23:06</wp:post_date>
		<wp:post_date_gmt>2011-11-07 02:23:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>co-author-nat-biotechnol-pigeonpe</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="post_tag" nicename="bgi"><![CDATA[BGI]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="nature"><![CDATA[Nature]]></category>
		<category domain="post_tag" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="pigeonpea"><![CDATA[Pigeonpea]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[497]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[co-author] ICRISAT-led global team cracks pigeonpea genome</title>
		<link>http://128.192.66.53/wordpress/?p=802</link>
		<pubDate>Mon, 07 Nov 2011 03:52:47 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=802</guid>
		<description></description>
		<content:encoded><![CDATA[<em>First legume genome sequence to improve livelihoods of smallholder farmers in the dryland tropics</em>

<strong>Hyderabad, India</strong><strong> and Shenzhen, China,</strong><strong> 07 November 2011 – </strong>Once referred to as an “orphan crop” mainly grown by poor farmers, pigeonpea is now set to join the world’s league of major food crops with the completion of its genome sequence.

The completed genome sequence of pigeonpea is featured as an advance online publication on 06 November 2011 on the website of the journal <em><a href="http://www.nature.com/nbt/journal/vaop/ncurrent/abs/nbt.2022.html" target="_blank">Nature Biotechnology</a></em>, the highest ranked journal in the area of biotechnology<em>. </em>The <a href="http://www.icrisat.org/gt-bt/iipg/Genome_Manuscript.html" target="_blank">paper</a> provides an overview of the structure and function of the genes that define what makes a pigeonpea plant. It also reveals valuable clues on how the genomic sequence can be useful to crop improvement for sustainable food production particularly in the marginal environments of Asia and sub-Saharan Africa.

Years of genome analysis by a global research partnership led by the International Crops Research Institute for the Semi-Arid Tropics (ICRISAT) based in Hyderabad, India have resulted in the identification of 48,680 pigeonpea genes. A couple of hundred of these genes were found unique to the crop in terms of drought tolerance, an important trait that can be transferred to other similar legume crops like soybean, cowpea or common bean that belong to the same family.

In the fight against poverty and hunger amid the threat of climate change, highly nutritious, drought-tolerant crops are the best bets for smallholder farmers in marginal environments to survive and improve their livelihoods.

Pigeonpea, grown on about 5 million hectares in Asia, sub-Saharan Africa and South-Central America, is a very important food legume for millions of the poor in the semi-arid regions of the world. Known as the “poor people’s meat” because of its high protein content, it provides a well-balanced diet when accompanied with cereals.

“The mapping of the pigeonpea genome is a breakthrough that could not have come at a better time. Now that the world is faced with hunger and famine particularly in the Horn of Africa brought about by the worst drought of the decades, science-based, sustainable agricultural development solutions are vital in extricating vulnerable dryland communities out of poverty and hunger for good,” says ICRISAT Director General William D. Dar.

“Modern crop improvement technologies for smallholder farmer crops such as pigeonpea will be crucial to speed up the development of improved varieties that can provide high yields and improved livelihoods, and at the same time meet the challenges of marginal environments and the threat of climate change and scarce natural resources," adds Dar.

Rajeev Varshney, the lead scientist and coordinator for the pigeonpea genome sequencing project explains how this breakthrough will unlock pigeonpea’s potential.

“Having the pigeonpea genome sequence as a reference will significantly speed up and reduce the cost of screening the ‘good genes’ within the stored pigeonpea seed collections in genebanks like that of ICRISAT. This also means dramatically reducing the cost of developing new improved varieties for farmers,” says Varshney.

“At the moment, in general, it can take 6-10 years to breed a new variety. With the use of this genome sequence data, in the future, we could be breeding a new variety in just about 3 years.” he adds.

"The pigeonpea collaboration with ICRISAT is a milestone in the partnership between India and China, showcasing the excellent working dynamics and understanding among Indian and Chinese genomics scientists. I hope more partnerships like this will be established in the future, and I believe this will surely bring a significant difference to the whole world," says Professor Huanming Yang, Chairman of BGI-Shenzhen, the world’s largest genomics institute and a key partner of this project.

India is the largest producer of pigeonpea, but crop productivity in the country, as well as in sub-Saharan Africa, is only less than 1 ton per hectare. An improved understanding of the pigeonpea genome will have a major impact on improved crop productivity, tackling pests and disease constraints in production, and improved resistance to harsh environments and the future variable climate.

Pigeonpea is the first “orphan crop”, the first “non-industrial crop” and the second food legume (after soybean) with a completed genome sequence.

It is also the first time that a Consultative Group on International Agricultural Research (CGIAR) supported Center like ICRISAT has led the genome sequencing of a food crop.

The sequencing was accomplished by a global research partnership, the International Initiative for Pigeonpea Genomics (IIPG), led by ICRISAT with partners such as BGI – Shenzhen (China), US research laboratories like University of Georgia, University of California-Davis, Cold Spring Harbor Laboratory, and National Centre for Genome Resources, European research institutes like the UK-based National University of Ireland Galway and also support from the CGIAR Generation Challenge Programme, US National Science Foundation and in-kind contribution from the collaborating research institutes.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>802</wp:post_id>
		<wp:post_date>2011-11-06 22:52:47</wp:post_date>
		<wp:post_date_gmt>2011-11-07 03:52:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>co-author-nat-biotechnol-pigeonpea-english</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="post_tag" nicename="bgi"><![CDATA[BGI]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="nature"><![CDATA[Nature]]></category>
		<category domain="post_tag" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="pigeonpea"><![CDATA[Pigeonpea]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[642]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>C++ hello world</title>
		<link>http://128.192.66.53/wordpress/?p=812</link>
		<pubDate>Sun, 13 Nov 2011 16:04:07 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=812</guid>
		<description></description>
		<content:encoded><![CDATA[write in file "hello.cpp":

[cpp]// my first program in C++

#include &lt;iostream&gt;;
using namespace std;

int main ()
{
  cout &lt;&lt; &quot;Hello World!&quot;;
  return 0;
}[/cpp]

compile:
<pre>g++ -o hello hello.cpp</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>812</wp:post_id>
		<wp:post_date>2011-11-13 11:04:07</wp:post_date>
		<wp:post_date_gmt>2011-11-13 16:04:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>c-hello-world</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="cplusplus"><![CDATA[C++]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[433]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[paper] Differentiation of the maize subgenomes by genome dominance and both ancient and ongoing gene loss</title>
		<link>http://128.192.66.53/wordpress/?p=834</link>
		<pubDate>Sun, 13 Nov 2011 16:30:05 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=834</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>前些天去<a href="http://plantcenter.uga.edu/retreat/index.php" target="_blank">plant center retreat</a>的时候跟<a title="freeling" href="http://microscopy.berkeley.edu/~freeling/" target="_blank">Michael Freeling</a>有过交流。
是一个很和蔼矍铄的一个老人。
做的研究也跟我们实验室比较接近。
</pre>
<strong>Differentiation of the maize subgenomes by genome dominance and both ancient and ongoing gene loss</strong>

James C. Schnable, Nathan M. Springerb, and Michael Freeling

Abstract

Ancient tetraploidies are found throughout the eukaryotes. After duplication, one copy of each duplicate gene pair tends to be lost (fractionate). For all studied tetraploidies, the loss of duplicated genes, known as homeologs, homoeologs, ohnologs, or syntenic paralogs, is uneven between duplicate regions. In maize, a species that experienced a tetraploidy 5–12 million years ago, we show that in addition to uneven ancient gene loss, the two complete genomes contained within maize are differentiated by ongoing fractionation among diverse inbreds as well as by a pattern of overexpression of genes from the genome that has experienced less gene loss. These expression differences are consistent over a range of experiments quantifying RNA abundance in different tissues. We propose that the universal bias in gene loss between the genomes of this ancient tetraploid, and perhaps all tetraploids, is the result of selection against loss of the gene responsible for the majority of total expression for a duplicate gene pair. Although the tetraploidy of maize is ancient, biased gene loss and expression continue today and explain, at least in part, the remarkable genetic diversity found among modern maize cultivars.

<a href="http://www.pnas.org/content/108/10/4069" target="_blank">http://www.pnas.org/content/108/10/4069</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>834</wp:post_id>
		<wp:post_date>2011-11-13 11:30:05</wp:post_date>
		<wp:post_date_gmt>2011-11-13 16:30:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>paper-maize-subgenome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="evolution"><![CDATA[Evolution]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="synteny"><![CDATA[Synteny]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[412]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[paper] Assemblathon 1: A competitive assessment of de novo short read assembly methods</title>
		<link>http://128.192.66.53/wordpress/?p=838</link>
		<pubDate>Sun, 13 Nov 2011 16:48:21 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=838</guid>
		<description></description>
		<content:encoded><![CDATA[<a title="assemblathon" href="http://assemblathon.org/" target="_blank">Assemblathon</a>是一个关于<em>de novo</em> Genome Assembly for Next-generation Sequencing 的竞赛。

各个研究组使用同一测序数据，各自进行拼接，最后比较各个结果。

第一次竞赛数据来源于模拟<a title="hiseq_2000" href="http://www.illumina.com/systems/hiseq_2000.ilmn" target="_blank">HiSeq 2000</a>的sequencing，以便于分析拼接错误。

第一次竞赛结果在<a title="cshl_meeting" href="http://meetings.cshl.edu/meetings.html" target="_blank">CSHL Biology of Genomes meeting</a>（我明年会去）上<a href="http://korflab.ucdavis.edu/Datasets/Assemblathon/Assemblathon1/biology_of_genomes_assemblathon_talk.pdf" target="_blank">公布</a>，并<a href="http://genome.cshlp.org/content/early/2011/09/16/gr.126599.111" target="_blank">发表</a>在近期genome research上。

第二次竞赛使用真实测序数据，已经截止提交各自结果，正在进行后续比较分析。

<strong>Assemblathon 1: A competitive assessment of de novo short read assembly methods</strong>

Abstract

Low cost short read sequencing technology has revolutionised genomics, though it is only just becoming practical for the high quality de novo assembly of a novel large genome. We describe the Assemblathon 1 competition, which aimed to comprehensively assess the state of the art in de novo assembly methods when applied to current sequencing technologies. In a collaborative effort teams were asked to assemble a simulated Illumina HiSeq dataset of an unknown, simulated diploid genome. A total of 41 assemblies from 17 different groups were received. Novel haplotype aware assessments of coverage, contiguity, structure, base calling and copy number were made. We establish that within this benchmark (1) it is possible to assemble the genome to a high level of coverage and accuracy, and that (2) large differences exist between the assemblies, suggesting room for further improvements in current methods.

<a href="http://genome.cshlp.org/content/early/2011/09/16/gr.126599.111" target="_blank">paper link</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>838</wp:post_id>
		<wp:post_date>2011-11-13 11:48:21</wp:post_date>
		<wp:post_date_gmt>2011-11-13 16:48:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>paper-assemblathon-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[829]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[paper] Comparison of lists of genes based on functional profiles</title>
		<link>http://128.192.66.53/wordpress/?p=855</link>
		<pubDate>Sun, 13 Nov 2011 18:23:24 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=855</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.biomedcentral.com/1471-2105/12/401" target="_blank">http://www.biomedcentral.com/1471-2105/12/401</a>
<h3>Comparison of lists of genes based on functional profiles</h3>
Abstract (provisional)

<strong>Background</strong>
How to compare studies on the basis of their biological significance is a problem of central importance in high-throughput genomics. Many methods for performing such comparisons are based on the information in databases of functional annotation, such as those that form the Gene Ontology (GO). Typically, they consist of analyzing gene annotation frequencies in some pre-specified GO classes, in a class-by-class way, followed by p-value adjustment for multiple testing. Enrichment analysis, where a list of genes is compared against a wider universe of genes, is the most common example.

<strong>Results</strong>
A new global testing procedure and a method incorporating it are presented. Instead of testing separately for each GO class, a single global test for all classes under consideration is performed. The test is based on the distance between the functional profiles, defined as the joint frequencies of annotation in a given set of GO classes. These classes may be chosen at one or more GO levels. The new global test is more powerful and accurate with respect to type I errors than the usual class-by-class approach. When applied to some real datasets, the results suggest that the method may also provide useful information that complements the tests performed using a class-by-class approach if gene counts are sparse in some classes. An R library, goProfiles, implements these methods and is available from Bioconductor, http://bioconductor.org/packages/release/bioc/html/goProfiles.html.

<strong>Conclusions</strong>
The method provides an inferential basis for deciding whether two lists are functionally different. For global comparisons it is preferable to the global chi-square test of homogeneity. Furthermore, it may provide additional information if used in conjunction with class-by-class methods.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>855</wp:post_id>
		<wp:post_date>2011-11-13 13:23:24</wp:post_date>
		<wp:post_date_gmt>2011-11-13 18:23:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>paper-comparison-go</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="comparative-genomics"><![CDATA[Comparative Genomics]]></category>
		<category domain="post_tag" nicename="functional-genomics"><![CDATA[Functional Genomics]]></category>
		<category domain="post_tag" nicename="gene-ontology"><![CDATA[Gene Ontology]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[431]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>shortcut cheat sheet</title>
		<link>http://128.192.66.53/wordpress/?p=858</link>
		<pubDate>Sun, 13 Nov 2011 18:29:26 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=858</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://128.192.66.53/wordpress/wp-content/uploads/2011/11/12UQ1920Y0-2Y45.png"><img class="alignnone size-medium wp-image-859" title="12UQ1920Y0-2Y45" src="http://128.192.66.53/wordpress/wp-content/uploads/2011/11/12UQ1920Y0-2Y45-300x211.png" alt="" width="300" height="211" /></a><a href="http://128.192.66.53/wordpress/wp-content/uploads/2011/11/bash_emacs.jpg"><img class="alignnone size-medium wp-image-860" title="bash_emacs" src="http://128.192.66.53/wordpress/wp-content/uploads/2011/11/bash_emacs-300x107.jpg" alt="" width="300" height="107" /></a>
<a href="http://128.192.66.53/wordpress/wp-content/uploads/2011/11/bash_sheet.png"><img class="size-medium wp-image-861 alignnone" title="bash_sheet" src="http://128.192.66.53/wordpress/wp-content/uploads/2011/11/bash_sheet-300x225.png" alt="" width="300" height="225" /></a><a href="http://128.192.66.53/wordpress/wp-content/uploads/2011/11/regular-expressions-cheat-sheet-v1.png"><img class="alignnone size-medium wp-image-862" title="regular-expressions-cheat-sheet-v1" src="http://128.192.66.53/wordpress/wp-content/uploads/2011/11/regular-expressions-cheat-sheet-v1-220x300.png" alt="" width="220" height="300" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>858</wp:post_id>
		<wp:post_date>2011-11-13 13:29:26</wp:post_date>
		<wp:post_date_gmt>2011-11-13 18:29:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shortcut-cheat-sheet</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="regular-expression"><![CDATA[Regular Expression]]></category>
		<category domain="post_tag" nicename="shortcut"><![CDATA[Shortcut]]></category>
		<category domain="post_tag" nicename="system"><![CDATA[System]]></category>
		<category domain="post_tag" nicename="terminal"><![CDATA[Terminal]]></category>
		<category domain="post_tag" nicename="vim"><![CDATA[Vim]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1439]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>利用Perl将数据导入excel中</title>
		<link>http://128.192.66.53/wordpress/?p=886</link>
		<pubDate>Sun, 13 Nov 2011 23:59:12 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=886</guid>
		<description></description>
		<content:encoded><![CDATA[[perl]
#旧文回收
#将数据导入excel，再用excel处理基本是多此一举
#且excel可以直接导入按一定规律排列的数据（如用tab分隔的数据）
#留给有需要的人用吧


use Spreadsheet::WriteExcel; #需要安装此模块
use strict;

#新建一个工作簿，gethomo.xls
my $workbook = Spreadsheet::WriteExcel-&gt;new(&quot;gethomo.xls&quot;);

#新建一个工作表
my $worksheet = $workbook-&gt;add_worksheet();

#需要导入的数据
my $datafile=&quot;gethomo.txt&quot;;

#打开数据文件
unless( open(GET_FILE_DATA, $datafile) ) {
      print STDERR &quot;Cannot open file \&quot;$filename\&quot;\n\n&quot;;
      exit;
}
my @input=&lt;GET_FILE_DATA&gt;;

#写入excel
for (my $i=0;$i&lt;scalar @input;$i++){
       
       #按照输入文件内容的排列格式修改此行
       my @input_row=split (/\t/, $input[$i]); 
       
       for (my $j=0;$j&lt;scalar @input_row;$j++){
              my $input_cell=$input_row[$j];
              
              #在$i行$j列的单元格中写入数据.(注: 行列初始值为0)
              unless ($input_cell=~/=/){$worksheet-&gt;write($i, $j, $input_cell);} 
       }
}
#打完收工

#若要从excel中提取数据，
#则需要使用Spreadsheet::ParseExcel模块
#常用的几条语句如下：
my $parser=Spreadsheet::ParseExcel-&gt;new();
my $workbook = $parser-&gt;Parse('RNA1.xls');
for my $worksheet ( $workbook-&gt;worksheets() ) {
      my ( $row_min, $row_max ) = $worksheet-&gt;row_range();
      my ( $col_min, $col_max ) = $worksheet-&gt;col_range();
      for my $col ( $col_min .. $col_max ) {
            #......
       }
}
#关于更多用perl操作excel的方式和代码可以参考CPAN
[/perl]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>886</wp:post_id>
		<wp:post_date>2011-11-13 18:59:12</wp:post_date>
		<wp:post_date_gmt>2011-11-13 23:59:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>perl-parse-and-write-excel</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="data-processing"><![CDATA[Data Processing]]></category>
		<category domain="post_tag" nicename="excel"><![CDATA[Excel]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[550]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e5%88%a9%e7%94%a8perl%e5%b0%86%e6%95%b0%e6%8d%ae%e5%af%bc%e5%85%a5excel%e4%b8%ad]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>perl模拟随机漂变</title>
		<link>http://128.192.66.53/wordpress/?p=896</link>
		<pubDate>Mon, 14 Nov 2011 00:15:41 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=896</guid>
		<description></description>
		<content:encoded><![CDATA[[perl]
#旧文回收
#当时写的代码有点傻傻的

#!/usr/bin/perl
#---------------------------------------------------------------------------------------
#Author: me
#Date: 2009-05-13 19:00
#Version: 1.0
#Project: random genetic drift
#模拟随机漂变对某一群体等位基因频率的影响，只是简单写了一下核心的程序。
#---------------------------------------------------------------------------------------
use strict;
use warnings;
srand(time | $$);                               #为随机数发生器设定种子
my $a1percent;                                  #声明变量：
my $i;my $j; my $a1sum; my $randomnum;
my $generation; my $avegeneration;my $sumgeneration;
my $fix1; my $fix2;
for($i=0; $i&lt;10000; ++$i){                      #10000次重复
    $a1percent=0.7;                             #设定等位基因a1初始频率为0.7
    for($generation=0; 1;++$generation){        #模拟世代更替，记录a1或a2固定时经历的世代数（$generation）
          if ($a1percent==0 or $a1percent==1){
              last;                             #当a1固定或丢失的时候跳出世代更替的循环
          }
          $a1sum=0;
          for ($j=0; $j&lt;20; ++$j){              #随机挑选20个配子作为下一代个体的组成
                $randomnum=rand(1);
                if ($randomnum&lt;=$a1percent){
                    ++$a1sum;                   #记录挑选到a1基因的总数
                }
          }
    $a1percent=$a1sum/20;                       #记录挑选到a1基因的频率
   }
   $sumgeneration+=$generation;                 #将每次a1或a2固定时经历世代数求和
   if ($a1percent==1){                          #a1固定
      ++$fix1;                                  #记录a1固定的次数
   }else{                                       #a1丢失，a2固定
      ++$fix2;                                  #记录a2固定的次数
   }
}
$avegeneration=$sumgeneration/10000;
$fix1=$fix1/10000;
$fix2=$fix2/10000;
print &quot;a1或a2固定的平均世代数为: $avegeneration\n&quot;;
print &quot;a1固定的概率为:$fix1\n&quot;;
print &quot;a2固定的概率为:$fix2\n&quot;;
exit;
[/perl]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>896</wp:post_id>
		<wp:post_date>2011-11-13 19:15:41</wp:post_date>
		<wp:post_date_gmt>2011-11-14 00:15:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>perl-simulate-random-genetic-drift</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="evolution"><![CDATA[Evolution]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[896]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[508]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>C++ note 1</title>
		<link>http://128.192.66.53/wordpress/?p=910</link>
		<pubDate>Mon, 14 Nov 2011 12:23:48 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=910</guid>
		<description></description>
		<content:encoded><![CDATA[可读性差，只留着自己用
[cpp]
// my first program in C++

/* my second program in C++
   with more comments */

#include
using namespace std;

int main ()
{
  cout &lt;&lt; &quot;Hello World!&quot;;
  return 0;
}
[/cpp]
<table>
<tbody>
<tr>
<th>Name</th>
<th>Description</th>
<th>Size*</th>
<th>Range*</th>
</tr>
<tr>
<td><code>char</code></td>
<td>Character or small integer.</td>
<td>1byte</td>
<td>signed: -128 to 127
unsigned: 0 to 255</td>
</tr>
<tr>
<td><code>short int</code> (<code>short</code>)</td>
<td>Short Integer.</td>
<td>2bytes</td>
<td>signed: -32768 to 32767
unsigned: 0 to 65535</td>
</tr>
<tr>
<td><code>int</code></td>
<td>Integer.</td>
<td>4bytes</td>
<td>signed: -2147483648 to 2147483647
unsigned: 0 to 4294967295</td>
</tr>
<tr>
<td><code>long int</code> (<code>long</code>)</td>
<td>Long integer.</td>
<td>4bytes</td>
<td>signed: -2147483648 to 2147483647
unsigned: 0 to 4294967295</td>
</tr>
<tr>
<td><code>bool</code></td>
<td>Boolean value. It can take one of two values: true or false.</td>
<td>1byte</td>
<td><code>true</code> or <code>false</code></td>
</tr>
<tr>
<td><code>float</code></td>
<td>Floating point number.</td>
<td>4bytes</td>
<td>+/- 3.4e +/- 38 (~7 digits)</td>
</tr>
<tr>
<td><code>double</code></td>
<td>Double precision floating point number.</td>
<td>8bytes</td>
<td>+/- 1.7e +/- 308 (~15 digits)</td>
</tr>
<tr>
<td><code>long double</code></td>
<td>Long double precision floating point number.</td>
<td>8bytes</td>
<td>+/- 1.7e +/- 308 (~15 digits)</td>
</tr>
<tr>
<td><code>wchar_t</code></td>
<td>Wide character.</td>
<td>2 <em>or</em> 4 bytes</td>
<td>1 wide character</td>
</tr>
</tbody>
</table>

<table>
<tbody>
<tr>
<td><code>\n</code></td>
<td>newline</td>
</tr>
<tr>
<td><code>\r</code></td>
<td>carriage return</td>
</tr>
<tr>
<td><code>\t</code></td>
<td>tab</td>
</tr>
<tr>
<td><code>\v</code></td>
<td>vertical tab</td>
</tr>
<tr>
<td><code>\b</code></td>
<td>backspace</td>
</tr>
<tr>
<td><code>\f</code></td>
<td>form feed (page feed)</td>
</tr>
<tr>
<td><code>\a</code></td>
<td>alert (beep)</td>
</tr>
<tr>
<td><code>\'</code></td>
<td>single quote (<samp>'</samp>)</td>
</tr>
<tr>
<td><code>\"</code></td>
<td>double quote (<samp>"</samp>)</td>
</tr>
<tr>
<td><code>\?</code></td>
<td>question mark (<samp>?</samp>)</td>
</tr>
<tr>
<td><code>\\</code></td>
<td>backslash (<samp>\</samp>)</td>
</tr>
</tbody>
</table>

[cpp]
// In order to use a variable in C++
// we must first declare it specifying which data type we want it to be.
int a, b, c;

// Signed types can represent both positive and negative values
//  whereas unsigned types can only represent positive values (and zero).
unsigned short int NumberOfSisters;
signed int MyAccountBalance;

int a = 0;
int a (0);

string mystring = &quot;This is a string&quot;;
string mystring (&quot;This is a string&quot;);

// String literals can extend to more than a single line of code by
// putting a backslash sign (\) at the end of each unfinished line.
&quot;string expressed in \
two lines&quot; 

//does not require a semicolon (;)
#define PI 3.14159
#define NEWLINE '\n' 

const int pathwidth = 100;
const char tabulator = '\t';

// +, -, *, /, %
// +=, -=, *=, /=, %=, &gt;&gt;=, &lt;&lt;=, &amp;=, ^=, |=
// ++, --
// ==, !=, &gt;, &lt;, &gt;=, &lt;=

7==5 ? 4 : 3     // returns 3, since 7 is not equal to 5.
7==5+2 ? 4 : 3   // returns 4, since 7 is equal to 5+2.
5&gt;3 ? a : b      // returns the value of a, since 5 is greater than 3.
a&gt;b ? a : b      // returns whichever is greater, a or b. 

a = (b=3, b+2);
// Would first assign the value 3 to b, and then assign b+2 to variable a.
// variable a would contain the value 5 while variable b would contain value 3.

// Bitwise Operators ( &amp;, |, ^, ~, &lt;&lt;, &gt;&gt; )

int i;
float f = 3.14;
i = (int) f;
i = int ( f );

//  returns the size in bytes of that type or object:
a = sizeof (char);

cout &lt;&lt; &quot;Hello, I am &quot; &lt;&lt; age &lt;&lt; &quot; years old and my zipcode is &quot; &lt;&lt; zipcode;
// Hello, I am 24 years old and my zipcode is 90064 
cout &lt;&lt; &quot;First sentence.\n&quot;;
cout &lt;&lt; &quot;First sentence.&quot; &lt;&lt; endl;

// Standard Input (cin).
int age;
cin &gt;&gt; age;

// to request more than one datum input from the user: 
cin &gt;&gt; a &gt;&gt; b;

// In order to get entire lines, we can use the function getline,
// which is the more recommendable way to get user input with cin
#include &lt;iostream&gt;
#include &lt;string&gt;
using namespace std;

int main ()
{
  string mystr;
  cout &lt;&lt; &quot;What's your name? &quot;;
  getline (cin, mystr);
  cout &lt;&lt; &quot;Hello &quot; &lt;&lt; mystr &lt;&lt; &quot;.\n&quot;;
  cout &lt;&lt; &quot;What is your favorite team? &quot;;
  getline (cin, mystr);
  cout &lt;&lt; &quot;I like &quot; &lt;&lt; mystr &lt;&lt; &quot; too!\n&quot;;
  return 0;
}

// The standard header file &lt;sstream&gt; defines a class called stringstrea
// that allows a string-based object to be treated as a stream.
// This way we can perform extraction or insertion operations from/to strings, 
// which is especially useful to convert strings to numerical values and vice versa.
// For example, if we want to extract an integer from a string we can write:
string mystr (&quot;1204&quot;);
int myint;
stringstream(mystr) &gt;&gt; myint;

// stringstreams
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;sstream&gt;
using namespace std;

int main ()
{
  string mystr;
  float price=0;
  int quantity=0;

  cout &lt;&lt; &quot;Enter price: &quot;;
  getline (cin,mystr);
  stringstream(mystr) &gt;&gt; price;
  cout &lt;&lt; &quot;Enter quantity: &quot;;
  getline (cin,mystr);
  stringstream(mystr) &gt;&gt; quantity;
  cout &lt;&lt; &quot;Total price: &quot; &lt;&lt; price*quantity &lt;&lt; endl;
  return 0;
}

if (x == 100)
  cout &lt;&lt; &quot;x is 100&quot;;

if (x == 100)
{
   cout &lt;&lt; &quot;x is &quot;;
   cout &lt;&lt; x;
}

if (x == 100)
  cout &lt;&lt; &quot;x is 100&quot;;
else
  cout &lt;&lt; &quot;x is not 100&quot;;

if (x &gt; 0)
  cout &lt;&lt; &quot;x is positive&quot;;
else if (x &lt; 0)
  cout &lt;&lt; &quot;x is negative&quot;;
else
  cout &lt;&lt; &quot;x is 0&quot;;

  while (n&gt;0) {
    cout &lt;&lt; n &lt;&lt; &quot;, &quot;;
    --n;
  }

do {
    cout &lt;&lt; &quot;Enter number (0 to end): &quot;;
    cin &gt;&gt; n;
    cout &lt;&lt; &quot;You entered: &quot; &lt;&lt; n &lt;&lt; &quot;\n&quot;;
  } while (n != 0);

  for (int n=10; n&gt;0; n--) {
    cout &lt;&lt; n &lt;&lt; &quot;, &quot;;
  }

for ( n=0, i=100 ; n!=i ; n++, i-- )
{
   // whatever here...
}

 for (n=10; n&gt;0; n--)
  {
    cout &lt;&lt; n &lt;&lt; &quot;, &quot;;
    if (n==3)
    {
      cout &lt;&lt; &quot;countdown aborted!&quot;;
      break;
    }
  }

 for (int n=10; n&gt;0; n--) {
    if (n==5) continue;
    cout &lt;&lt; n &lt;&lt; &quot;, &quot;;
  }

 int n=10;
  loop:
  cout &lt;&lt; n &lt;&lt; &quot;, &quot;;
  n--;
  if (n&gt;0) goto loop;


// exit is a function defined in the cstdlib library.
// to terminate the current program with a specific exit code. 
void exit (int exitcode);

// Functions
int addition (int a, int b)
{
  int r;
  r=a+b;
  return (r);
}
int main ()
{
  int z;
  z = addition (5,3);
  cout &lt;&lt; &quot;The result is &quot; &lt;&lt; z;
  return 0;
}

// void function example
void printmessage ()
{
  cout &lt;&lt; &quot;I'm a function!&quot;;
}
int main ()
{
  printmessage ();
  // printmessage; wrong!!!
  return 0;
}

[/cpp]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>910</wp:post_id>
		<wp:post_date>2011-11-14 07:23:48</wp:post_date>
		<wp:post_date_gmt>2011-11-14 12:23:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>c-note-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="cplusplus"><![CDATA[C++]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[574]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>详解Bioperl的序列对象（Bioperl HOWTO翻译7）</title>
		<link>http://128.192.66.53/wordpress/?p=957</link>
		<pubDate>Mon, 21 Nov 2011 01:56:24 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=957</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>序列对象</h3>
<a href="http://www.bioperl.org/wiki/HOWTO:Beginners#The_Sequence_Object" target="_blank">英文原文</a>

前面涉及到了很多序列对象，展示了序列对象的一些创建和使用方法。这里来详细描述序列对象的功能。

下表列出了序列对象的‘方法’（面向对象编程中的概念，见前文；表的内容就不翻译了）。‘return’表示使用这个方法时，对象所返回的值（或内容）。其中有些方法，如seq()，既可用于输出，也可以向其输入。例如，从已有的序列对象中获取序列。

[perl]$sequence_as_string = $seq_obj-&gt;seq;[/perl]

也可以自己设定序列：

[perl]$seq_obj-&gt;seq(&quot;MMTYDFFFFVVNNNNPPPPAAAW&quot;);[/perl]
<table border="1" cellspacing="0" cellpadding="4"><caption>Table 1: Sequence Object Methods</caption>
<tbody>
<tr>
<th>Name</th>
<th>Returns</th>
<th>Example</th>
<th>Note</th>
</tr>
<tr>
<td>accession_number</td>
<td>identifier</td>
<td>$acc = $so-&gt;accession_number</td>
<td>get or set an identifier</td>
</tr>
<tr>
<td>alphabet</td>
<td>alphabet</td>
<td>$so-&gt;alphabet('dna')</td>
<td>get or set the alphabet ('dna','rna','protein')</td>
</tr>
<tr>
<td>authority</td>
<td>authority, if available</td>
<td>$so-&gt;authority("FlyBase")</td>
<td>get or set the organization</td>
</tr>
<tr>
<td>desc</td>
<td>description</td>
<td>$so-&gt;desc("Example 1")</td>
<td>get or set a description</td>
</tr>
<tr>
<td>display_id</td>
<td>identifier</td>
<td>$so-&gt;display_id("NP_123456")</td>
<td>get or set an identifier</td>
</tr>
<tr>
<td>division</td>
<td>division, if available (e.g. PRI)</td>
<td>$div = $so-&gt;division</td>
<td>get division (e.g. "PRI")</td>
</tr>
<tr>
<td>get_dates</td>
<td>array of dates, if available</td>
<td>@dates = $so-&gt;get_dates</td>
<td>get dates</td>
</tr>
<tr>
<td>get_secondary_accessions</td>
<td>array of secondary accessions, if available</td>
<td>@accs = $so-&gt;get_secondary_accessions</td>
<td>get other identifiers</td>
</tr>
<tr>
<td>is_circular</td>
<td>Boolean</td>
<td>if $so-&gt;is_circular { # }</td>
<td>get or set</td>
</tr>
<tr>
<td>keywords</td>
<td>keywords, if available</td>
<td>@array = $so-&gt;keywords</td>
<td>get or set keywords</td>
</tr>
<tr>
<td>length</td>
<td>length, a number</td>
<td>$len = $so-&gt;length</td>
<td>get the length</td>
</tr>
<tr>
<td>molecule</td>
<td>molecule type, if available</td>
<td>$type = $so-&gt;molecule</td>
<td>get molecule (e.g. "RNA", "DNA")</td>
</tr>
<tr>
<td>namespace</td>
<td>namespace, if available</td>
<td>$so-&gt;namespace("Private")</td>
<td>get or set the name space</td>
</tr>
<tr>
<td>new</td>
<td>Sequence object</td>
<td>$so = Bio::Seq-&gt;new(-seq =&gt; "MPQRAS")</td>
<td>create a new one, see <a title="http://search.cpan.org/perldoc?Bio::Seq" href="http://search.cpan.org/perldoc?Bio::Seq" rel="nofollow" target="_blank">Bio::Seq</a> for more</td>
</tr>
<tr>
<td>pid</td>
<td>pid, if available</td>
<td>$pid = $so-&gt;pid</td>
<td>get pid</td>
</tr>
<tr>
<td>primary_id</td>
<td>identifier</td>
<td>$so-&gt;primary_id(12345)</td>
<td>get or set an identifier</td>
</tr>
<tr>
<td>revcom</td>
<td>Sequence object</td>
<td>$so2 = $so1-&gt;revcom</td>
<td>Reverse complement</td>
</tr>
<tr>
<td>seq</td>
<td>sequence string</td>
<td>$seq = $so-&gt;seq</td>
<td>get or set the sequence</td>
</tr>
<tr>
<td>seq_version</td>
<td>version, if available</td>
<td>$so-&gt;seq_version("1")</td>
<td>get or set a version</td>
</tr>
<tr>
<td>species</td>
<td>Species object</td>
<td>$species_obj = $so-&gt;species</td>
<td>See <a title="http://search.cpan.org/perldoc?Bio::Species" href="http://search.cpan.org/perldoc?Bio::Species" rel="nofollow" target="_blank">Bio::Species</a> for more</td>
</tr>
<tr>
<td>subseq</td>
<td>sequence string</td>
<td>$string = $seq_obj-&gt;subseq(10,40)</td>
<td>Arguments are start and end</td>
</tr>
<tr>
<td>translate</td>
<td>protein Sequence object</td>
<td>$prot_obj = $dna_obj-&gt;translate</td>
<td>See the <a title="http://www.bioperl.org/wiki/Bptutorial.pl#Translating" href="http://www.bioperl.org/wiki/Bptutorial.pl#Translating" rel="nofollow" target="_blank">Bioperl Tutorial</a> for more</td>
</tr>
<tr>
<td>trunc</td>
<td>Sequence object</td>
<td>$so2 = $so1-&gt;trunc(10,40)</td>
<td>Arguments are start and end</td>
</tr>
</tbody>
</table>
需要注意的是，上表列出的有些方法，如molecule和division，仅在序列对象有相应值的时候才有效，有些序列格式并不包括这些信息。所以，使用某种方法之前，一定要了解清楚输入的序列文件，及其包含的内容。

还有一些方法是关于序列注释信息的，但这些内容可能有点离题，如果要了解的话，详见<a title="HOWTO:Feature-Annotation" href="http://www.bioperl.org/wiki/HOWTO:Feature-Annotation" target="_blank">Feature-Annotation HOWTO</a>。下表列出了一些有关的方法。
<table border="1" cellspacing="0" cellpadding="4"><caption>Table 2: Feature and Annotation Methods</caption>
<tbody>
<tr>
<th>Name</th>
<th>Returns</th>
<th>Note</th>
</tr>
<tr>
<td>get_SeqFeatures</td>
<td>array of SeqFeature objects</td>
<td></td>
</tr>
<tr>
<td>get_all_SeqFeatures</td>
<td>array of SeqFeature objects array</td>
<td>includes sub-features</td>
</tr>
<tr>
<td>remove_SeqFeatures</td>
<td>array of SeqFeatures removed</td>
<td></td>
</tr>
<tr>
<td>feature_count</td>
<td>number of SeqFeature objects</td>
<td></td>
</tr>
<tr>
<td>add_SeqFeature</td>
<td>annotation array of Annotation objects</td>
<td>get or set</td>
</tr>
</tbody>
</table>
<a id="Example_Sequence_Objects" name="Example_Sequence_Objects"></a>
<h3>举例</h3>
接着来看一下如何使用上面提到的各种方法。看看这些方法如何从不同的来源获取序列对象以及输出内容。先来看看如何从Genbank获取并创建序列对象，代码如下：

[perl]use Bio::DB::GenBank;

$db_obj = Bio::DB::GenBank-&gt;new;
$seq_obj = $db_obj-&gt;get_Seq_by_acc(&quot;J01673&quot;);[/perl]

或者从本地已有的Genbank文件中获取，代码如下

[perl]use Bio::SeqIO;

$seqio_obj = Bio::SeqIO-&gt;new(-file =&gt; &quot;J01673.gb&quot;, -format =&gt; &quot;genbank&quot; );
$seq_obj = $seqio_obj-&gt;next_seq;[/perl]

<a href="http://www.bioperl.org/wiki/GenBank_sequence_format" target="_blank">Genbank文件格式</a>如下所示：
<pre>LOCUS       ECORHO                  1880 bp    DNA     linear   BCT 26-APR-1993
DEFINITION  E.coli rho gene coding for transcription termination factor.
ACCESSION   J01673 J01674
VERSION     J01673.1  GI:147605
KEYWORDS    attenuator; leader peptide; rho gene; transcription terminator.
SOURCE      Escherichia coli
ORGANISM  Escherichia coli
                  Bacteria; Proteobacteria; Gammaproteobacteria; Enterobacteriales;
                  Enterobacteriaceae; Escherichia.
REFERENCE   1  (bases 1 to 1880)
AUTHORS   Brown,S., Albrechtsen,B., Pedersen,S. and Klemm,P.
TITLE     Localization and regulation of the structural gene for
             transcription-termination factor rho of Escherichia coli
JOURNAL   J. Mol. Biol. 162 (2), 283-298 (1982)
MEDLINE   83138788
PUBMED   6219230
REFERENCE   2  (bases 1 to 1880) AUTHORS   Pinkham,J.L. and Platt,T.
TITLE     The nucleotide sequence of the rho gene of E. coli K-12
JOURNAL   Nucleic Acids Res. 11 (11), 3531-3545 (1983)
MEDLINE   83220759
PUBMED   6304634
COMMENT      Original source text: Escherichia coli (strain K-12) DNA.
                      A clean copy of the sequence for [2] was kindly provided by
                      J.L.Pinkham and T.Platt.
FEATURES       Location/Qualifiers
     source      1..1880
                     /organism="Escherichia coli"
                     /mol_type="genomic DNA"
                     /strain="K-12"
                     /db_xref="taxon:562"
     mRNA       212..&gt;1880
                     /product="rho mRNA"
     CDS          282..383
                     /note="rho operon leader peptide"
                     /codon_start=1
                     /transl_table=11
                     /protein_id="AAA24531.1"
                     /db_xref="GI:147606"
                     /translation="MRSEQISGSSLNPSCRFSSAYSPVTRQRKDMSR"
     gene         468..1727
                     /gene="rho"
     CDS          468..1727
                     /gene="rho"
                     /note="transcription termination factor"
                     /codon_start=1
                     /transl_table=11
                     /protein_id="AAA24532.1"
                     /db_xref="GI:147607"
                     /translation="MNLTELKNTPVSELITLGENMGLENLARMRKQDIIFAILKQHAK
                     SGEDIFGDGVLEILQDGFGFLRSADSSYLAGPDDIYVSPSQIRRFNLRTGDTISGKIR
                     PPKEGERYFALLKVNEVNFDKPENARNKILFENLTPLHANSRLRMERGNGSTEDLTAR
                     VLDLASPIGRGQRGLIVAPPKAGKTMLLQNIAQSIAYNHPDCVLMVLLIDERPEEVTE
                     MQRLVKGEVVASTFDEPASRHVQVAEMVIEKAKRLVEHKKDVIILLDSITRLARAYNT
                     VVPASGKVLTGGVDANALHRPKRFFGAARNVEEGGSLTIIATALIDTGSKMDEVIYEE
                     FKGTGNMELHLSRKIAEKRVFPAIDYNRSGTRKEELLTTQEELQKMWILRKIIHPMGE
                     IDAMEFLINKLAMTKTNDDFFEMMKRS"
ORIGIN      15 bp upstream from HhaI site.
        1 aaccctagca ctgcgccgaa atatggcatc cgtggtatcc cgactctgct gctgttcaaa
      61 aacggtgaag tggcggcaac caaagtgggt gcactgtcta aaggtcagtt gaaagagttc

                                  ...deleted...  

  1801 tgggcatgtt aggaaaattc ctggaatttg ctggcatgtt atgcaatttg catatcaaat
  1861 ggttaatttt tgcacaggac
//</pre>
不论用那种方式，都能得到一样的序列对象。下表列出了这个序列对象的可用方法及其返回值。
<table border="1" cellspacing="0" cellpadding="4"><caption>Table 3: Values from the Sequence object (<a title="GenBank sequence format" href="http://www.bioperl.org/wiki/GenBank_sequence_format" target="_blank">Genbank</a>)</caption>
<tbody>
<tr>
<th>Method</th>
<th>Returns</th>
</tr>
<tr>
<td>display_id</td>
<td>ECORHO</td>
</tr>
<tr>
<td>desc</td>
<td>E.coli rho gene coding for transcription termination factor.</td>
</tr>
<tr>
<td>display_name</td>
<td>ECORHO</td>
</tr>
<tr>
<td>accession</td>
<td>J01673</td>
</tr>
<tr>
<td>primary_id</td>
<td>147605</td>
</tr>
<tr>
<td>seq_version</td>
<td>1</td>
</tr>
<tr>
<td>keywords</td>
<td>attenuator; leader peptide; rho gene; transcription terminator</td>
</tr>
<tr>
<td>is_circular</td>
<td></td>
</tr>
<tr>
<td>namespace</td>
<td></td>
</tr>
<tr>
<td>authority</td>
<td></td>
</tr>
<tr>
<td>length</td>
<td>1880</td>
</tr>
<tr>
<td>seq</td>
<td>AACCCT...ACAGGAC</td>
</tr>
<tr>
<td>division</td>
<td>BCT</td>
</tr>
<tr>
<td>molecule</td>
<td>DNA</td>
</tr>
<tr>
<td>get_dates</td>
<td>26-APR-1993</td>
</tr>
<tr>
<td>get_secondary_accessions</td>
<td>J01674</td>
</tr>
</tbody>
</table>
这里需要说明一下。首先，很多序列信息没有被返回。这些“丢失”的信息都是和序列注释信息有关，可详见<a title="HOWTO:Feature-Annotation" href="http://www.bioperl.org/wiki/HOWTO:Feature-Annotation" target="_blank">Feature and Annotation HOWTO</a>。并且，有些方法返回的是空值，比如namespace和authority。原因是对应的序列信息还没有一个普遍接受的格式或确定的名字，也许等确定的时候，作者会重写代码。（译者注：可能作者是先构造了一个结构，没有对应的内容。反正现在这些方法是没用的，暂不用管。）最后，你可能会问各个序列信息如何和相应的方法对应起来的。一般来说，由于没有一个通用标准，代码作者根据自己的常识，将相应的序列信息命一个合理的名字，然后对应到某个方法上。（最后一句可能翻译的不准确）

再来看<a title="FASTA sequence format" href="http://www.bioperl.org/wiki/FASTA_sequence_format">fasta</a>格式文件作为输入（仍是同一序列）。<a title="FASTA sequence format" href="http://www.bioperl.org/wiki/FASTA_sequence_format" target="_blank">fasta</a>格式如下所示，相对Genbank，显得非常简单：
<pre>&gt;gi|147605|gb|J01673.1|ECORHO E.coli rho gene coding for transcription termination factor
AACCCTAGCACTGCGCCGAAATATGGCATCCGTGGTATCCCGACTCTGCTGCTGTTCAAAAACGGTGAAG
TGGCGGCAACCAAAGTGGGTGCACTGTCTAAAGGTCAGTTGAAAGAGTTCCTCGACGCTAACCTGGCGTA

                        ...deleted...

ACGTGTTTACGTGGCGTTTTGCTTTTATATCTGTAATCTTAATGCCGCGCTGGGCATGTTAGGAAAATTC
CTGGAATTTGCTGGCATGTTATGCAATTTGCATATCAAATGGTTAATTTTTGCACAGGAC</pre>
可返回的内容：
<table border="1" cellspacing="0" cellpadding="4"><caption>Table 4: Values from the Sequence object (<a title="FASTA sequence format" href="http://www.bioperl.org/wiki/FASTA_sequence_format" target="_blank">Fasta</a>)</caption>
<tbody>
<tr>
<th>Method</th>
<th>Returns</th>
</tr>
<tr>
<td>display_id</td>
<td>147605|gb|J01673.1|ECORHO</td>
</tr>
<tr>
<td>desc</td>
<td>E.coli rho gene coding for transcription termination factor</td>
</tr>
<tr>
<td>display_name</td>
<td>147605|gb|J01673.1|ECORHO</td>
</tr>
<tr>
<td>accession</td>
<td>unknown</td>
</tr>
<tr>
<td>primary_id</td>
<td>147605|gb|J01673.1|ECORHO</td>
</tr>
<tr>
<td>is_circular</td>
<td></td>
</tr>
<tr>
<td>namespace</td>
<td></td>
</tr>
<tr>
<td>authority</td>
<td></td>
</tr>
<tr>
<td>length</td>
<td>1880</td>
</tr>
<tr>
<td>seq</td>
<td>AACCCT...ACAGGAC</td>
</tr>
</tbody>
</table>
和上面使用<a title="GenBank sequence format" href="http://www.bioperl.org/wiki/GenBank_sequence_format" target="_blank">Genbank</a>文件得到的信息相比，会缺少一些序列信息，如seq_version。另外，如display_id，显示的是不同值。原因在于Genbank服务器将Genbank格式转换fasta格式时遵循的规则和<a title="Swissprot sequence format" href="http://www.bioperl.org/wiki/Swissprot_sequence_format" target="_blank">SwissProt</a>服务器将SwissProt格式转换fasta格式的规则不一样。除非有一个统一的标准，否则代码作者一般是根据自己的理解将各个序列信息对应到某一方法上。虽然Bioperl可以遵循某一个特定的规则，如Genbank所使用的。但Bioperl的作者们通过投票决定不遵循任何一个只来源于某一个组织的转换规则。

接着看一下<a title="Swissprot sequence format" href="http://www.bioperl.org/wiki/Swissprot_sequence_format" target="_blank">SwissProt</a>格式文件的输入。

ID A2S3_RAT STANDARD; PRT; 913 AA.
<pre>AC   Q8R2H7; Q8R2H6; Q8R4G3;
DT   28-FEB-2003 (Rel. 41, Created)
DE   Amyotrophic lateral sclerosis 2 chromosomal region candidate gene
DE   protein 3 homolog (GABA-A receptor interacting factor-1) (GRIF-1) (O-
DE   GlcNAc transferase-interacting protein of 98 kDa).
GN   ALS2CR3 OR GRIF1 OR OIP98.
OS   Rattus norvegicus (Rat).
OC   Eukaryota; Metazoa; Chordata; Craniata; Vertebrata; Euteleostomi;
OC   Mammalia; Eutheria; Rodentia; Sciurognathi; Muridae; Murinae; Rattus.
OX   NCBI_TaxID=10116;
RN   [1]
RP   SEQUENCE FROM N.A. (ISOFORMS 1 AND 2), SUBCELLULAR LOCATION, AND
RP   INTERACTION WITH GABA-A RECEPTOR.
RC   TISSUE=Brain;
RX   MEDLINE=22162448; PubMed=12034717;
RA   Beck M., Brickley K., Wilkinson H.L., Sharma S., Smith M.,
RA   Chazot P.L., Pollard S., Stephenson F.A.;
RT   "Identification, molecular cloning, and characterization of a novel
RT   GABAA receptor-associated protein, GRIF-1.";
RL   J. Biol. Chem. 277:30079-30090(2002).
RN   [2]
RP   REVISIONS TO 579 AND 595-596, AND VARIANTS VAL-609 AND PRO-820.
RA   Stephenson F.A.;
RL   Submitted (FEB-2003) to the EMBL/GenBank/DDBJ databases.
RN   [3]
RP   SEQUENCE FROM N.A. (ISOFORM 3), INTERACTION WITH O-GLCNAC TRANSFERASE,
RP   AND O-GLYCOSYLATION.
RC   STRAIN=Sprague-Dawley; TISSUE=Brain;
RX   MEDLINE=22464403; PubMed=12435728;
RA   Iyer S.P.N., Akimoto Y., Hart G.W.;
RT   "Identification and cloning of a novel family of coiled-coil domain
RT   proteins that interact with O-GlcNAc transferase.";
RL   J. Biol. Chem. 278:5399-5409(2003).
CC   -!- SUBUNIT: Interacts with GABA-A receptor and O-GlcNac transferase.
CC   -!- SUBCELLULAR LOCATION: Cytoplasmic.
CC   -!- ALTERNATIVE PRODUCTS:
CC       Event=Alternative splicing; Named isoforms=3;
CC       Name=1; Synonyms=GRIF-1a;
CC         IsoId=Q8R2H7-1; Sequence=Displayed;
CC       Name=2; Synonyms=GRIF-1b;
CC         IsoId=Q8R2H7-2; Sequence=VSP_003786, VSP_003787;
CC       Name=3;
CC         IsoId=Q8R2H7-3; Sequence=VSP_003788;
CC   -!- PTM: O-glycosylated.
CC   -!- SIMILARITY: TO HUMAN OIP106.
DR   EMBL; AJ288898; CAC81785.2; -.
DR   EMBL; AJ288898; CAC81786.2; -.
DR   EMBL; AF474163; AAL84588.1; -.
DR   GO; GO:0005737; C:cytoplasm; IEP.
DR   GO; GO:0005634; C:nucleus; IDA.
DR   GO; GO:0005886; C:plasma membrane; IEP.
DR   GO; GO:0006357; P:regulation of transcription from Pol II pro...; IDA.
DR   InterPro; IPR006933; HAP1_N.
DR   Pfam; PF04849; HAP1_N; 1.
KW   Coiled coil; Alternative splicing; Polymorphism.
FT   DOMAIN      134    355       COILED COIL (POTENTIAL).
FT   VARSPLIC    653    672       VATSNPGKCLSFTNSTFTFT -&gt; ALVSHHCPVEAVRAVHP
FT                                TRL (in isoform 2).
FT                                /FTId=VSP_003786.
FT   VARSPLIC    673    913       Missing (in isoform 2).
FT                                /FTId=VSP_003787.
FT   VARSPLIC    620    687       VQQPLQLEQKPAPPPPVTGIFLPPMTSAGGPVSVATSNPGK
FT                                CLSFTNSTFTFTTCRILHPSDITQVTP -&gt; GSAASSTGAE
FT                                ACTTPASNGYLPAAHDLSRGTSL (in isoform 3).
FT                                /FTId=VSP_003788.
FT   VARIANT     609    609       E -&gt; V.
FT   VARIANT     820    820       S -&gt; P.
SQ   SEQUENCE   913 AA;  101638 MW;  D0E135DBEC30C28C CRC64;
     MSLSQNAIFK SQTGEENLMS SNHRDSESIT DVCSNEDLPE VELVNLLEEQ LPQYKLRVDS
     LFLYENQDWS QSSHQQQDAS ETLSPVLAEE TFRYMILGTD RVEQMTKTYN DIDMVTHLLA
                             ...deleted...
     GIARVVKTPV PRENGKSREA EMGLQKPDSA VYLNSGGSLL GGLRRNQSLP VMMGSFGAPV
     CTTSPKMGIL KED
//</pre>
相应的返回值如下表所示：
<table border="1" cellspacing="0" cellpadding="4"><caption>Table 5: Values from the Sequence object (<a title="Swissprot sequence format" href="http://www.bioperl.org/wiki/Swissprot_sequence_format" target="_blank">Swissprot</a>)</caption>
<tbody>
<tr>
<th>Method</th>
<th>Returns</th>
</tr>
<tr>
<td>display_id</td>
<td>A2S3_RAT</td>
</tr>
<tr>
<td>desc</td>
<td>Amyotrophic lateral ... protein of 98 kDa).</td>
</tr>
<tr>
<td>display_name</td>
<td>A2S3_RAT</td>
</tr>
<tr>
<td>accession</td>
<td>Q8R2H7</td>
</tr>
<tr>
<td>is_circular</td>
<td></td>
</tr>
<tr>
<td>namespace</td>
<td></td>
</tr>
<tr>
<td>authority</td>
<td></td>
</tr>
<tr>
<td>seq_version</td>
<td></td>
</tr>
<tr>
<td>keywords</td>
<td>Coiled coil; Alternative splicing; Polymorphism</td>
</tr>
<tr>
<td>length</td>
<td>913</td>
</tr>
<tr>
<td>seq</td>
<td>MSLSQ...ILKED</td>
</tr>
<tr>
<td>division</td>
<td>RAT</td>
</tr>
<tr>
<td>get_dates</td>
<td>28-FEB-2003 (Rel. 41, Created)</td>
</tr>
<tr>
<td>get_secondary_accessions</td>
<td>Q8R2H6 Q8R4G3</td>
</tr>
</tbody>
</table>
和Genbank一样，详见<a title="HOWTO:Feature-Annotation" href="http://www.bioperl.org/wiki/HOWTO:Feature-Annotation" target="_blank">Feature and Annotation HOWTO</a>，查看序列注释信息。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>957</wp:post_id>
		<wp:post_date>2011-11-20 20:56:24</wp:post_date>
		<wp:post_date_gmt>2011-11-21 01:56:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bioperl-howto-seq-object</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="seq"><![CDATA[Seq]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1107]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>利用Bioperl将编码序列翻译成蛋白质（Bioperl HOWTO翻译8）</title>
		<link>http://128.192.66.53/wordpress/?p=966</link>
		<pubDate>Mon, 21 Nov 2011 02:19:37 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=966</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>翻译</h3>
<a href="http://www.bioperl.org/wiki/HOWTO:Beginners#Translating" target="_blank">英文原文</a>

在生物信息学中翻译的概念有两种，一是将任意核苷酸序列从头到尾顺次翻译；二是将真实的编码序列，如mRNA或cDNA，翻译成相应的氨基酸序列。Bioperl都可处理。

任何alphabet值是‘dna’或‘rna’的序列对象都可以用translate方法来返回一个蛋白质序列对象，例如：

[perl]$prot_obj = $my_seq_object-&gt;translate;[/perl]

所有的密码子都会被翻译，包括那些起始密码子和终止密码子。例如 <strong>ttttttatgccctaggggg</strong>会被翻译成<strong>FFMP*G。</strong>

另外，可以设定一些参数来改变translate()方法的输出内容。例如，可以设定终止密码子的符号（缺省是*），以及未知氨基酸的符号（缺省是X）。

[perl]$prot_obj = $my_seq_object-&gt;translate(-terminator =&gt; '-');
$prot_obj = $my_seq_object-&gt;translate(-unknown =&gt; '_');[/perl]

也可以设定翻译起始位置（译者注：也称阅读框；一个序列有六个阅读框，分别从第一、二和三个核苷酸，反向互补的第一、二和三个核苷酸开始翻译。缺省是翻译的第一个阅读框）。例如，可以从第二个核苷酸开始翻译（译者注：也可以说是第二个阅读框）：

[perl]$prot_obj = $my_seq_object-&gt;translate(-frame =&gt; 1);[/perl]

如果要进行一条完整编码序列的翻译，translate()需要进行更多的检查。详细来说，translate()需要确定开放阅读框的起始子和终止子位置正好是序列的起始和终止；并且序列中间没有终止子；如果不是常见的起始子，translate()会将其转换为甲硫氨酸（M）。需要设定"complete" 为1，如

[perl]$prot_obj = $my_seq_object-&gt;translate(-complete =&gt; 1);[/perl]

如果上面所说的完整编码序列的条件不满足，会给出警告信息。通过设定"throw" 为1，程序会在遇到此情况时终止执行，而不只仅是只给出警告信息而继续执行后面的代码。

[perl]$prot_obj = $my_seq_object-&gt;translate(-complete =&gt; 1,
                                      -throw =&gt; 1);[/perl]

codontable_id可用于设定不同的遗传密码表。现在有16种不同的遗传密码表包括 'Standard', 'Vertebrate Mitochondrial', 'Bacterial', 'Alternative Yeast Nuclear' and 'Ciliate, Dasycladacean and Hexamita Nuclear'。详见<a title="http://search.cpan.org/perldoc?Bio::Tools::CodonTable" href="http://search.cpan.org/perldoc?Bio::Tools::CodonTable" rel="nofollow" target="_blank">Bio::Tools::CodonTable</a>。例如，要翻译线粒体DNA：

[perl]$prot_obj = $seq_obj-&gt;translate(-codontable_id =&gt; 2);[/perl]

也可以自己创建一个特殊的遗传密码表，详见<a title="http://search.cpan.org/perldoc?Bio::Tools::CodonTable" href="http://search.cpan.org/perldoc?Bio::Tools::CodonTable" rel="nofollow" target="_blank">Bio::Tools::CodonTable</a>查看密码表格式，如：

[perl]use Bio::Tools::CodonTable;

@custom_table =
    ( 'test1',
      'FFLLSSSSYY**CC*WLLLL**PPHHQQR*RRIIIFT*TT*NKKSSRRV*VVAA*ADDEE*GGG'
    );

$codon_table = Bio::Tools::CodonTable-&gt;new;

$id = $codon_table-&gt;add_table(@custom_table);

$prot_obj = $my_seq_object-&gt;translate(-codontable_id =&gt; $id);[/perl]

translate()也可以找出开放阅读框，默认从第一个找到的起始子开始翻译。如：

[perl]$prot_obj = $my_seq_object-&gt;translate(-orf =&gt; 1);[/perl]

大部分遗传密码表中，包括NCBI中的默认设定，AUG都是起始子。可设定AUG为唯一的起始子，如：

[perl]$prot_obj = $my_seq_object-&gt;translate(-orf =&gt; 1,
                                      -start =&gt; &quot;atg&quot; );[/perl]

-start参数只有在orf设定为1的情况下才有效。

最后一个要说的是，默认translate()会将终止子翻译成一个特殊的符号，如*，也可通过-terminator自行设定。但是，当-complete设定为1的时候，这个特殊符号会被去掉，如：

[perl]$prot_obj = $my_seq_object-&gt;translate(-orf =&gt; 1,
                                      -complete =&gt; 1);[/perl]

序列<strong>tttttatgccctaggggg</strong>会被翻译成<strong>MP</strong>，而不是<strong>MP*</strong>。

详见<a title="http://search.cpan.org/perldoc?Bio::Tools::CodonTable" href="http://search.cpan.org/perldoc?Bio::Tools::CodonTable" rel="nofollow" target="_blank">Bio::Tools::CodonTable</a>和<a title="http://search.cpan.org/perldoc?Bio::PrimarySeqI" href="http://search.cpan.org/perldoc?Bio::PrimarySeqI" rel="nofollow" target="_blank">Bio::PrimarySeqI</a>，查看更多的关于翻译的信息。
<h3>下一篇：<a href="http://128.192.66.53/wordpress/2011/11/bioperl-howto-statistics/" target="_blank">利用Biperl获取序列基本统计信息（Bioperl HOWTO翻译9）</a></h3>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>966</wp:post_id>
		<wp:post_date>2011-11-20 21:19:37</wp:post_date>
		<wp:post_date_gmt>2011-11-21 02:19:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bioperl-howto-translating</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="protein"><![CDATA[protein.]]></category>
		<category domain="post_tag" nicename="translating"><![CDATA[Translating]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1000]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>利用Biperl获取序列基本统计信息（Bioperl HOWTO翻译9）</title>
		<link>http://128.192.66.53/wordpress/?p=979</link>
		<pubDate>Mon, 21 Nov 2011 03:19:17 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=979</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>获取序列基本统计信息</h3>
<a href="http://www.bioperl.org/wiki/HOWTO:Beginners#Obtaining_basic_sequence_statistics" target="_blank">英文原文</a>

除了前面讲的可通过序列对象的不同方法来获取序列文件中已有的序列信息，也可以利用bioperl获取序列的其他一些信息。例如，SeqStats对象可以获取序列的分子质量，单个氨基酸或核苷酸频率，核苷酸序列所包括的密码子频率，等等。

[perl]use Bio::Tools::SeqStats;
$seq_stats  = Bio::Tools::SeqStats-&gt;new($seqobj);
$weight = $seq_stats-&gt;get_mol_wt();
$monomer_ref = $seq_stats-&gt;count_monomers();
$codon_ref = $seq_stats-&gt;count_codons();  # for nucleic acid sequence[/perl]

注：有些序列包含一些有歧义的code，get_mol_wt()会返回两个数组，一个是最大的分子质量，一个是最小的分子质量。

SeqWords对象可以统计氨基酸或核苷酸片段的频率。详见See <a title="http://search.cpan.org/perldoc?Bio::Tools::SeqStats" href="http://search.cpan.org/perldoc?Bio::Tools::SeqStats" rel="nofollow" target="_blank">Bio::Tools::SeqStats</a>和<a title="http://search.cpan.org/perldoc?Bio::Tools::SeqWords" href="http://search.cpan.org/perldoc?Bio::Tools::SeqWords" rel="nofollow" target="_blank">Bio::Tools::SeqWords</a>。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>979</wp:post_id>
		<wp:post_date>2011-11-20 22:19:17</wp:post_date>
		<wp:post_date_gmt>2011-11-21 03:19:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bioperl-howto-statistics</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="statistics"><![CDATA[Statistics]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[776]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>利用Biperl进行本地blast（Bioperl HOWTO翻译10）</title>
		<link>http://128.192.66.53/wordpress/?p=988</link>
		<pubDate>Tue, 22 Nov 2011 14:06:57 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=988</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>BLAST</h3>
<a href="http://www.bioperl.org/wiki/HOWTO:Beginners#BLAST" target="_blank">英文原文</a>

（译者注：可以先参考这两篇文章：1）<a href="http://128.192.66.53/wordpress/2011/02/windows-perl-blast/" target="_blank">本地blast</a>   2）<a href="http://128.192.66.53/wordpress/2011/08/parse-blast/" target="_blank">perl脚本提取BLAST结果中的信息【以tblastn为例】</a> ）

bioperl有很多序列分析软件的接口，这意味着可以用bioperl来运行其他序列分析程序，更确切地说，可以提取程序运行结果并进行分析。在这里让我们来用最常用的序列分析软件，BLAST，作举例说明。首先要获取并安装<a href="http://www.ncbi.nlm.nih.gov/blast/" target="_blank">BLAST</a> (<a href="ftp://ftp.ncbi.nlm.nih.gov/blast/" target="_blank">ftp</a>)。（译者注：BLAST+和BLAST有很大的不同，此文默认使用的是BLAST。）然后用formatdb将序列文件索引并生成的一个叫“db.fa”的数据库文件，然后再看下面的代码。

和前面一样，我们要用一个模块，这次是<a title="http://search.cpan.org/perldoc?Bio::Tools::Run::StandAloneBlast" href="http://search.cpan.org/perldoc?Bio::Tools::Run::StandAloneBlast" rel="nofollow">Bio::Tools::Run::StandAloneBlast</a>。先创建一个BLAST对象，并用new()方法设定blastall的运行参数，然后以一个序列对象作为输入。程序运行后将结果输入到另一个“report”对象。

[perl]use Bio::Seq;
use Bio::Tools::Run::StandAloneBlast;

$blast_obj = Bio::Tools::Run::StandAloneBlast-&gt;new(-program  =&gt; 'blastn',
                                             -database =&gt; 'db.fa'));

$seq_obj = Bio::Seq-&gt;new(-id  =&gt;&quot;test query&quot;,
          -seq =&gt;&quot;TTTAAATATATTTTGAAGTATAGATTATATGTT&quot;);

$report_obj = $blast_obj-&gt;blastall($seq_obj);

$result_obj = $report_obj-&gt;next_result;

print $result_obj-&gt;num_hits;[/perl]

blastall()方法是核心，运行BLAST并提取运行结果。blastall生成的结果是一个“report”对象。利用这个对象，可以按照自己的需求访问或输出结果中的数据。report对象（$report_obj）和result对象（$result_obj）都来自SearchIO模块。后面的<a title="HOWTO:SearchIO" href="http://www.bioperl.org/wiki/HOWTO:SearchIO">SearchIO HOWTO</a>会更详细的介绍如何从这些对象中提取分析数据。

这里给出一个用SearchIO从BLAST结果文件中提取所需结果的例子。（译者注：这里是先单独运行BLAST并生成一个结果文件，然后使用SearchIO从结果文件创建一个report对象，而上面例子是用bioperl运行BLAST后获取一个report对象。）

[perl]use Bio::SearchIO;
$report_obj = new Bio::SearchIO(-format =&gt; 'blast',
                                  -file   =&gt; 'report.bls');
while( $result = $report_obj-&gt;next_result ) {
    while( $hit = $result-&gt;next_hit ) {
      while( $hsp = $hit-&gt;next_hsp ) {
         if ( $hsp-&gt;percent_identity &gt; 75 ) {
           print &quot;Hit\t&quot;, $hit-&gt;name, &quot;\n&quot;,
                   &quot;Length\t&quot;, $hsp-&gt;length('total'),
                   &quot;\n&quot;, &quot;Percent_id\t&quot;, $hsp-&gt;percent_identity, &quot;\n&quot;;
         }
       }
     }
}[/perl]

此代码是提取大于75%一致性的HSP的信息。

有时候使用<a title="http://search.cpan.org/perldoc?Bio::Tools::Run::StandAloneBlast" href="http://search.cpan.org/perldoc?Bio::Tools::Run::StandAloneBlast" rel="nofollow">Bio::Tools::Run::StandAloneBlast</a>的时候会出现一些错误。（译者注：后面的就不翻译了，主要是说使用bioperl调用BLAST等其他程序时会有可能出错之类。我的经验是，<a title="http://search.cpan.org/perldoc?Bio::Tools::Run::StandAloneBlast" href="http://search.cpan.org/perldoc?Bio::Tools::Run::StandAloneBlast" rel="nofollow">Bio::Tools::Run::StandAloneBlast</a>只适用于UNIX/LINUX系统下能直接在终端运行BLAST相关命令的情况（复制相关程序到/usr/bin/或设定PATH profile）。Windows下没成功经验，有兴趣的自己搜一下。建议不用Bioperl调用外部程序，可如上面第二个例子，先用blast生成结果，然后再用bioperl提取结果中想要的部分。）

Sometimes you'll see errors when you try to use <a title="http://search.cpan.org/perldoc?Bio::Tools::Run::StandAloneBlast" href="http://search.cpan.org/perldoc?Bio::Tools::Run::StandAloneBlast" rel="nofollow">Bio::Tools::Run::StandAloneBlast</a> that have nothing to do with Bioperl. Make sure that <a title="wp:BLAST" href="http://en.wikipedia.org/wiki/BLAST">BLAST</a> is set up properly and running before you attempt to script it using <a title="http://search.cpan.org/perldoc?Bio::Tools::Run::StandAloneBlast" href="http://search.cpan.org/perldoc?Bio::Tools::Run::StandAloneBlast" rel="nofollow">Bio::Tools::Run::StandAloneBlast</a>. There are some notes on setting up BLAST in the <a title="http://bioperl.open-bio.org/SRC/bioperl-live/INSTALL" href="http://bioperl.open-bio.org/SRC/bioperl-live/INSTALL" rel="nofollow">INSTALL</a> file.

Bioperl enables you to run a wide variety of bioinformatics programs but in order to do so, in most cases, you will need to install the accessory bioperl-run package. In addition there is no guarantee that there is a corresponding parser for the program that you wish to run, but parsers have been built for the most popular programs. You can find the bioperl-run package on the download page.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>988</wp:post_id>
		<wp:post_date>2011-11-22 09:06:57</wp:post_date>
		<wp:post_date_gmt>2011-11-22 14:06:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>bioperl-howto-local-blast</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="blast"><![CDATA[Blast]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1239]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[bioperl-howto-online-blast]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2192</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.211.251.24</wp:comment_author_IP>
			<wp:comment_date>2012-12-26 20:59:06</wp:comment_date>
			<wp:comment_date_gmt>2012-12-27 01:59:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[some hsp info:
    $r_type = $hsp->algorithm;
    $pvalue = $hsp->p();
    $evalue = $hsp->evalue();
    $frac_id = $hsp->frac_identical( ['query'|'hit'|'total'] );
    $frac_cons = $hsp->frac_conserved( ['query'|'hit'|'total'] );
    $gaps = $hsp->gaps( ['query'|'hit'|'total'] );
    $qseq = $hsp->query_string;
    $hseq = $hsp->hit_string;
    $homo_string = $hsp->homology_string;
    $len = $hsp->length( ['query'|'hit'|'total'] );
    $len = $hsp->length( ['query'|'hit'|'total'] );
    $rank = $hsp->rank;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1356573546.1";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2193</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.211.251.24</wp:comment_author_IP>
			<wp:comment_date>2012-12-26 21:31:48</wp:comment_date>
			<wp:comment_date_gmt>2012-12-27 02:31:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[some "$result" info
    my $id = $result->query_name();
    my $desc = $result->query_description();
    my $name = $result->database_name();
    my $size = $result->database_letters();
    my $num_entries = $result->database_entries();
    my $gap_ext = $result->get_parameter('e');
    my @params = $result->available_parameters;
    my $kappa = $result->get_statistic('kappa');
    my @statnames = $result->available_statistics;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1356575508.84";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>vi编辑器的属性设置</title>
		<link>http://128.192.66.53/wordpress/?p=1037</link>
		<pubDate>Fri, 25 Nov 2011 17:28:56 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1037</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>#在当前用户目录下用vi新建并打开.vimrc文件
vi .vimrc

" 在文件中写入以下设置

" 设置显示行号
set nu 

" 设置tab的长度为4
set tabstop=4 

" 打开状态栏标尺
set ruler

" 突出当前行
set cursorline

" 自动语法高亮
syntax on

#保存退出后即可生效</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1037</wp:post_id>
		<wp:post_date>2011-11-25 12:28:56</wp:post_date>
		<wp:post_date_gmt>2011-11-25 17:28:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>linux-vi-configure</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="note"><![CDATA[Note]]></category>
		<category domain="category" nicename="os"><![CDATA[OS]]></category>
		<category domain="post_tag" nicename="vim"><![CDATA[Vim]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[603]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[linux-vim-configure]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>生物信息大牛Eric Lander</title>
		<link>http://128.192.66.53/wordpress/?p=1063</link>
		<pubDate>Tue, 03 Jan 2012 19:28:39 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1063</guid>
		<description></description>
		<content:encoded><![CDATA[最近New York Times对Eric Lander做了个访谈，并简单介绍了其个人经历。懒得翻译了，转发一篇和这篇通讯内容大致相同的中文文章。有兴趣的同学直接进<a href="http://www.nytimes.com/2012/01/03/science/broad-institute-director-finds-power-in-numbers.html" target="_blank">New York Times</a> 或<a href="http://en.wikipedia.org/wiki/Eric_Lander" target="_blank">wikipedia</a>，看一看这个平民家庭出身、数学底蕴深厚的人类基因组计划领导人、Broad Institute创始人以及奥巴马政府智囊团成员的人生经历和点滴思想。

DOI: 10.3724/SP.J.1005.2010.00095

遗传 HEREDITAS (Beijing) 2010年2月, 32(2): 95―96

郭晓强
解放军白求恩军医学院生化教研室, 石家庄 050081

1990年开始的人类基因组计划（Human Genome Project,HGP）是可以和“曼哈顿计划”、“阿波罗计划”相媲美的第三项宏大工程，但前者意义更为重大，一方面世界各国的科学家都参与其中，另一方面是对更复杂的体系——生命的本质问题进行深入探索，从本质上改变了前期分子生物学研究方法。尽管人类基因组计划由多名科学家参与，并且都做出重要贡献，但其中尤以埃里克•史蒂文•兰德尔（Eric Steven Lander）的作用最为关键。

1957年2月3日，兰德尔出生于美国纽约市的布鲁克林。兰德尔从小就表现出数学的极大兴趣，并且绝对称的上一位数学天才，在全美数学测试中获得第二名，并在纽约一所高级中学获得最高等级毕业。17岁时，兰德尔就证明准完美数的存在，这项成就使他赢得威斯丁豪斯（Westinghouse）奖学金，同时来到著名的普林斯顿大学数学系学习，于1978年获得学士学位。毕业后，兰德尔又获得罗氏（Rhodes）奖学金而有机会进入牛津大学继续深造，于1981年又获得数学专业的哲学博士学位。兰德尔在数学方面可以说一帆风顺，按照常规他似乎会成为一名数学家，然而兰德尔的个性却改变了他的职业轨迹。兰德尔认为他虽然喜欢纯数学，但不愿意让数学作为自己终身的职业，这是因为钻研数学需要过一种僧侣般的生活，充满了孤独和清净的环境，而兰德尔自认为不是一个好的修道士，他更喜欢和周围人士进行大量交流，因此决定毕业后改到其他专业。

1981年，兰德尔回到美国，通过普林斯顿大学一名教授的推荐最后在哈佛大学商学院获得一份工作，担任经济学助理教授。当时兰德尔对经济学几乎一无所知，然而这丝毫无法难倒兰德尔，他认为经济学比纯数学更适合自己，不足之处可通过业余时间自学来弥补。兰德尔自学能力惊人，并且在教学方面也具有超强的天赋，不久讲授经济学已得心应手并得到学生和同行的肯定，于1987年还升任为副教授。在经济学方面已有所见长的兰德尔在工作中却发现经济学也并非是他最爱，因此决定再次寻找其他方向。

一个偶然的机会，兰德尔的弟弟亚瑟•兰德尔（Arthur Lander）给予了很大的帮助。亚瑟的专业是神经生物学，因此送给兰德尔一些数量神经生物学方面的论文。兰德尔虽然无法完全理解论文的含义，然而他已经被生命的巨大奥秘所深深吸引，尤其是对DNA神奇结构所着迷，这次他再一次改变了自己的专业。缺乏相关背静的兰德尔选修了哈佛大学的生物学课程，同时利用晚上时间在实验室进行果蝇基因的克隆工作。兰德尔半开玩笑的认为他是在大街拐角偶然听到并理解了生物学，当然坎布里奇大街上对生物学的讨论和对其他事物讨论一样司空见惯。

在一次演讲中，兰德尔偶遇麻省理工的遗传学家伯特斯坦（David Botstein），伯特斯坦已开发出从基因组中寻找导致简单疾病发生的单一基因方法，而当时正打算处理更为复杂的问题，研究多基因的人类疾病如癌症、糖尿病、精神分裂症和肥胖等。兰德尔对此研究很感兴趣，因此演讲完毕后两人开始讨论如何将统计学应用于复杂人类疾病基因研究中，不久，他们就有了大致的答案。由于兰德尔对遗传学的兴趣因此于1984年加入麻省理工，第二年又成为怀特海生物医学研究所（Whitehead Institute for Biomedical Research）的一名员工，与伯特斯坦合作开始遗传学的研究。兰德尔当时仍是哈佛商学院的副教授，但幸运的是他获得了麦克阿瑟奖学金，使他能够在讲授经济学的同时还可以进行生命科学的实验。

在麻省理工研究的早期，兰德尔将自己在数学和经济学方面的背景充分应用到生物学领域，这些尝试获得了极大的成功。兰德尔开始使用新方法来革新传统的生物学研究，如利用限制片段长度多态性来进行遗传位点的定位<sup>[1]</sup> ，并初步建立了人和小鼠的一系列简单图谱。兰德尔还开发新的方法从人类基因组中寻找有用信息，从而能够发现复杂人类疾病的基础。不久兰德尔意识到没有全面分析人类基因组的工具，这些单一方法将毫无用途。兰德尔成功制备了早期人类全基因组的遗传图谱，该图谱包括大约400个标记物。这项成就使兰德尔于1990年获得NIH人类基因组计划的首个资助，从而在怀特海研究所建立了怀特海研究所/麻省理工基因组研究中心（Whitehead Institute/MIT Center for Genome Research,WICGR），该中心成为人类基因组计划重要组成部分并发挥了关键性的作用。

WICGR开发了基因组自动化的工具，并将这些工具应用于小鼠和人基因组更为密集的遗传图谱的制备，这些图谱是随后测序图谱的前身。人类物理图谱于1995年发表，包含15 000个标记物。在人类基因组计划之初，主要由公共基金支持，涉及多个国家的研究机构和科学家，他们的目的是将所获得成果为公众免费开放，但一直进展缓慢，主要原因是美国能源部的作用不太明晰和当时的测序技术不太成熟，但一家私人的塞拉昂基因组公司（Celera Genomics）进入大大改变了这个进程。塞拉昂的目的是将获得信息申请专利，并对这些信息的使用者收取费用（后来他们取消了这个政策，并将大量序列信息免费向公众开放），这对HGP是一个巨大的挑战。为了让数据尽可能向公众免费开放，因此加快了研究步伐。兰德尔力促科林斯（Francis Collins）首先完成基因组草图的绘制，从而与塞拉昂小组能够于2001年同时发表了这些结果。在整个测序过程中，兰德尔领导的WICGR完成了整个人类基因组测序工作的1/3，兰德尔本人还亲自完成60页论文大部分内容的书写，因此论文发表时兰德尔成为众多贡献者中的第一位<sup>[2]</sup> 。

兰德尔还是生物信息学专家小组的核心成员，该小组负责对草图数据的分析工作。基因组测序仅仅是人类基因组的第一步，接下来如何分析并应用这些信息成为更关键的问题，但存在一系列障碍。人类基因组非常巨大，包含3×109 bp，但大小并不是唯一障碍，科学家还不得不将30亿的字母信息进行破译，从而理解每一对碱基的意义。人类基因组只代表一本生命之书，然而这本书还没有被完全读懂，解决这些难题的关键是寻找新的技术。兰德尔和同事在完成基因组前就已开发出新的生物化学程序、新的机器人技术和新的分析软件，这些工具成为基因组后期工作的基础，从而为更好理解基因组奠定了坚实的基础。兰德尔研究小组还于其他人合作于2002年发表了小鼠的基因组测序结果<sup>[3]</sup>，此外还在其他模式生物如酵母等测序方面做出了重大贡献。

为了更好应用基因组所获得的大量信息，兰德尔联合麻省理工、哈佛大学、怀特海研究所及附属医院建立了Broad研究所，并亲自担任第一任主任。Broad研究所的主要目标是联合基础生物科学、临床医学和计算生物学的知识，努力使用人类基因组的信息以开发新的对抗疾病策略，为基因组医学创造工具，并将这些工具推广到整个生命科学界，从而加深对一些复杂疾病的理解和治疗。为了实现这个目标，兰德尔等研究了人类基因组中的变异状况，并和国际上其他研究小组共同努力，创造了包含2100万单核苷酸多态性（Single nucleotide polymorphisms,SNP）的文库。这些多态性可作为疾病敏感基因的筛选标志，使用SNP中被称为连锁失衡（linkage disequilibrium,LD）的路标来构建人类基因组图谱，该图谱对医学遗传学的发展具有重要作用，研究者可将给定的一种疾病与一种或多种基因建立联系而LD作为筛选标志则大大改善诊断程序。兰德尔根据基因表达及这些基因在化疗过程中反应而发展了癌症新的分类法<sup>[4]</sup>，这对理解癌症分子起源并设计更加有效的治疗方案具有十分重要的意义。

兰德尔研究小组除了对人、小鼠和其他基因组的绘图和测序工作外还对其他生命科学问题进行深入研究，包括通过比较分析而理解基因组中编码的功能元件<sup>[5]</sup>；疾病及对药物反应的不同细胞信号等。尤为重要的是兰德尔小组还开发了新的基因组分析和实验室技术，这些技术已经应用于许多复杂性疾病如癌症、糖尿病、炎症和遗传性疾病的研究之中。 兰德尔由于在基因组和医学研究方面的巨大贡献而获得大量的荣誉。获得的重要奖励包括：麦克阿瑟基金会奖学金（1987年），普林斯顿大学威尔逊公共服务奖（1998年），内科学奖（2001年），Gairdner基金会国际奖（2002年），美国科学促进会公共科学和技术奖（2004年），当代最有影响力的百人之一（2004年）。除了卓越的科研才能外，兰德尔还是一位富有激情的教师，他在麻省理工讲授生物学通论达10年以上，因此于1992年赢得麻省理工纪念贝克本科生教学奖。兰德尔还为科学家和普通民众介绍遗传学的医学及社会应用，特别是2000年还在白宫做了新千年演讲。兰德尔1997年当选美国科学院院士（40岁），1999年当选美国医学院院士，此外还是美国艺术和科学院院士和美国科学促进会会员。兰德尔还是一些政府组织、学术机构、科学团体和商业公司的顾问，如千年医药公司（Millennium Pharmaceuticals）和无限医药公司（Infinity Pharmaceuticals）的首席科学顾问和主任之一。兰德尔已在许多顶尖杂志上发表重要的研究论文达200多篇，涵盖数学、经济学和生物学等多个领域。兰德尔的工作经历也像他试图破译的DNA结构一样，呈现螺旋样结构，从数学到经济学最终到现在的生命科学，是当代罕见的科学天才之一。兰德尔被认为是诺贝尔奖最强有力的竞争者之一，而随着基因组计划及相关研究重要性的体现，相信这种预测很快就会实现。

<strong><span style="font-size: small;">参考文献：</span></strong><strong><span style="font-size: medium;"> </span></strong>

<strong><span style="font-size: medium;">
</span></strong>[1] Lander ES,Botstein D. Strategies for studying heterogeneous genetic traits in humans by using a linkage map of  restriction fragment length polymorphisms.Proc Natl Acad Sci USA,1986,83(19):7353-7357.
[2] International Human Genome Sequencing Consortium: Lander ES,et al.Initial sequencing and analysis of the human genome.Nature,2001,409(6822):860-921.
[3] Waterston RH,Lindblad-Toh K,Birney E,et al.Mouse Genome Sequencing Consortium. Initial sequencing and comparative analysis of the mouse genome.Nature,2002, 420(6915):520-562.
[4] Ramaswamy S,Ross KN,Lander ES, Golub TR.A molecular signature of metastasis in primary solid tumors.Nat Genet,2003,33(1):49-54.
[5] Kellis M,Patterson N,Endrizzi M,Birren B,Lander ES.Sequencing and comparison of yeast species to identify genes and regulatory elements.Nature,2003,423:241-254.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1063</wp:post_id>
		<wp:post_date>2012-01-03 14:28:39</wp:post_date>
		<wp:post_date_gmt>2012-01-03 19:28:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>bioinformatist-eric-lander</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="elite"><![CDATA[Elite]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[863]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>展望2012超级计算技术</title>
		<link>http://128.192.66.53/wordpress/?p=1071</link>
		<pubDate>Wed, 04 Jan 2012 19:13:24 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1071</guid>
		<description></description>
		<content:encoded><![CDATA[By Eng Lim Goh, Translated by <a href="http://bioops.info" target="_blank">Bioops</a>

只做了简要翻译，有兴趣请查看<a href="http://www.bio-itworld.com/2012/01/04/predictions-supercomputing-2012.html" target="_blank">原文</a>。

十个关于2012年高性能计算（high performance computing）的预测：

1 个人医疗成真。个人基因组测序话费变得和磁共振成像一样便宜。药物设计和开方会根据个人基因组的不同而因地制宜（译者注：不敢苟同，前一句可能成真，后一句还有很长的路要走。）

2 预报恶劣天气更加精准。气象学上对于恶劣天气方位和时间的预测上有了长足的发展。

3 共享式内存系统会有预想不到的发现。共享式系统仍会是下年的主流。随着计算能力的扩大，必然会有新的预想不到的发现（“expect to find the unexpected”）

4 分布式系统的快速增长。分布式系统将成为各个需要处理大批量非结构性数据的企业和政府机构的首选。

5. 对协处理器的兴趣增加。有那么一群人会对协处理器感兴趣，并关注如何平衡协处理器所带来的性能增强与编程困难。（译者注：目前很火的GPU就是一个例子。）

6 开放式的云计算服务。目前使用云计算的主要是政府机构，但下年，类似Amazon、Facebook和微软等提供公用云计算的公司会越来越多。

7 数据中心的绿色化。数据中心低能耗，冷却水的重新利用，等等。

8 计算流体力学（computational fluid dynamics (CFD)）。通过计算机的模拟，可以对小到自行车，大到航天飞机进行流体力学的研究。同时CFD也被用于医学上对血液流动的模拟。下一年CFD将在系统生物学方面大展身手。

9 全球变暖的预测更加精确。更准确得预测下一个百年全球气候变化，并指出全球不同地区的关键“热点”（hot spots）

10 关于宇宙的部分理论将被证明。霍金关于黑洞和宇宙形成的关键理论会被实验和观测证实。（译者注：有点瞎扯淡）

在未来，我们更关注的是使用高性能计算技术能给其他学科带来新的发现和发展，而不只是用计算机做分析和写报告。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1071</wp:post_id>
		<wp:post_date>2012-01-04 14:13:24</wp:post_date>
		<wp:post_date_gmt>2012-01-04 19:13:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>predictions-supercomputing-2012</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cluster"><![CDATA[Cluster]]></category>
		<category domain="post_tag" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<category domain="post_tag" nicename="supercomputing"><![CDATA[Supercomputing]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[301]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e5%b1%95%e6%9c%9b2012%e8%b6%85%e7%ba%a7%e8%ae%a1%e7%ae%97]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>华大基因利用GPU加速基因组数据分析</title>
		<link>http://128.192.66.53/wordpress/?p=1087</link>
		<pubDate>Mon, 09 Jan 2012 14:36:34 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1087</guid>
		<description></description>
		<content:encoded><![CDATA[基因组数据爆炸式地增长，带来计算上极大的困难，让超级计算机也捉襟见肘。要解决起来，一方面是软件，包括算法的优化和数据压缩技术等；另一方面是硬件，GPU计算、云计算等等。

前一段时间看到华大网站上SOAP系列的软件都了GPU的版本，现在wired出了篇通讯，报道华大用GPU加速基因组数据分析。面向大众的，没有什么专业术语，有兴趣的看看。

<a href="http://www.wired.com/wiredenterprise/2012/01/genomes-and-gpus/all/1" target="_blank">Chinese Crunch Human Genome With Videogame Chips</a>

主要讲的是：世界最大基因测序中心<a href="http://www.genomics.cn/navigation/index.action">华大基因</a>（BGI）和NVIDIA合作将基因分析工具移植到NVIDIA的GPU架构，将基因组分析时间降低一个数量级。以前分析个人的基因组数据需要4天，现在缩短到6小时。

另外：genome research新出一篇<a href="http://genome.cshlp.org/content/early/2012/01/05/gr.131383.111.full.pdf+html?rss=1" target="_blank">论文</a>，说是序列质量比不同拼接软件对拼接结果影响要大。顿时让我联想到种种关于下一代测序技术的论文和报道。下一代测序技术的开发和应用，看似如火如荼，其实非常不成熟，问题很多，还很难用此测序技术做出突破性的新发现。不过，话说回来，不成熟，有问题，很多人都在关注，正好说明了可以做一些东西，且能灌几篇高IF的水文（虽然在科学上不算什么新突破）。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1087</wp:post_id>
		<wp:post_date>2012-01-09 09:36:34</wp:post_date>
		<wp:post_date_gmt>2012-01-09 14:36:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>bgi-gpu-sequencing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="post_tag" nicename="bgi"><![CDATA[BGI]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="gpu"><![CDATA[GPU]]></category>
		<category domain="post_tag" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[442]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>用Reaver破解WPA加密的WIFI密码</title>
		<link>http://128.192.66.53/wordpress/?p=1095</link>
		<pubDate>Mon, 09 Jan 2012 22:26:00 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1095</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://lifehacker.com/5873407/how-to-crack-a-wi+fi-networks-wpa-password-with-reaver" target="_blank">How to Crack a Wi-Fi Network’s WPA Password with Reaver</a>

不用字典，而是利用一个WPS的漏洞进行暴力破解，时长2-10小时不等。

很早就有关于此漏洞的理论研究（<a href="http://cnbeta.com/articles/168498.htm" target="_blank">参考</a>），Reaver将其变成现实。

ENJOY!!!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1095</wp:post_id>
		<wp:post_date>2012-01-09 17:26:00</wp:post_date>
		<wp:post_date_gmt>2012-01-09 22:26:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>crack-wifi-wpa-password-reaver</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="hacker"><![CDATA[Hacker]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1746]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[paper] De novo assembly and genotyping of variants using colored de Bruijn graphs</title>
		<link>http://128.192.66.53/wordpress/?p=1104</link>
		<pubDate>Tue, 10 Jan 2012 00:59:03 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1104</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><a href="http://www.nature.com/ng/journal/vaop/ncurrent/full/ng.1028.html" target="_blank"><em>De novo</em> assembly and genotyping of variants using colored de Bruijn graphs</a></strong>

Detecting genetic variants that are highly divergent from a reference sequence remains a major challenge in genome sequencing. We introduce <em>de novo</em>assembly algorithms using colored de Bruijn graphs for detecting and genotyping simple and complex genetic variants in an individual or population. We provide an efficient software implementation, <a href="http://cortexassembler.sourceforge.net/" target="_blank">Cortex</a>, the first <em>de novo </em>assembler capable of assembling multiple eukaryotic genomes simultaneously. Four applications of Cortex are presented. First, we detect and validate both simple and complex structural variations in a high-coverage human genome. Second, we identify more than 3 Mb of sequence absent from the human reference genome, in pooled low-coverage population sequence data from the 1000 Genomes Project. Third, we show how population information from ten chimpanzees enables accurate variant calls without a reference sequence. Last, we estimate classical human leukocyte antigen (HLA) genotypes at <em>HLA-B</em>, the most variable gene in the human genome.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1104</wp:post_id>
		<wp:post_date>2012-01-09 19:59:03</wp:post_date>
		<wp:post_date_gmt>2012-01-10 00:59:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cortex-nature-paper</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="cortex"><![CDATA[Cortex]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="variation-discovery"><![CDATA[Variation Discovery]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[467]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[paper-cortex-paper]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Life Technologies和Illumina竞相发布新测序机器</title>
		<link>http://128.192.66.53/wordpress/?p=1112</link>
		<pubDate>Wed, 11 Jan 2012 12:54:40 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1112</guid>
		<description></description>
		<content:encoded><![CDATA[1月10日，Life Technologies（Ion Torrent）发布Ion Proton™ Sequencer。就在同一天，Illumina也发布Hiseq 2500。测序技术的竞争已经进入白热化，都在瞄准1000美元测个体基因组的目标。Ion Torrent说年末就能达到，而Illumina反击说他们在夏天就能实现。让我们拭目以待吧。

（目前的形势是Illumina一直领先，从reads长度、测序通量、价钱等方面都要优于Ion Torrent。但Ion Torrent采用的是不同的测序技术（Semiconductor Sequencing），所有测序进程都在一个芯片上完成。如果要升级机器，只需要更换新的芯片即可。Ion Torrent很有可能后来居上。）

（最近比较忙，先发布出来，以后再慢慢分析，有兴趣的直接看英文报道。）

<a href="http://www.genomeweb.com/sequencing/life-tech-plans-new-ion-torrent-instrument-deliver-whole-genomes-hours-1k" target="_blank">http://www.genomeweb.com/sequencing/life-tech-plans-new-ion-torrent-instrument-deliver-whole-genomes-hours-1k</a>

<a href="http://www.lifetechnologies.com/us/en/home/about-us/news-gallery/press-releases/2012/life-techologies-itroduces-the-bechtop-io-proto.html" target="_blank">http://www.lifetechnologies.com/us/en/home/about-us/news-gallery/press-releases/2012/life-techologies-itroduces-the-bechtop-io-proto.html</a>

<a href="http://www.genomeweb.com/sequencing/illumina-introduces-one-day-genome-sequencer-new-business-groups" target="_blank">http://www.genomeweb.com/sequencing/illumina-introduces-one-day-genome-sequencer-new-business-groups</a>

<a href="http://pathogenomics.bham.ac.uk/blog/2012/01/ion-torrent-proton-the-chip-is-not-the-machine/ " target="_blank">http://pathogenomics.bham.ac.uk/blog/2012/01/ion-torrent-proton-the-chip-is-not-the-machine/</a>

<a href="http://blogs.nature.com/news/2012/01/the-1000-genome-are-we-there-yet.html" target="_blank">http://blogs.nature.com/news/2012/01/the-1000-genome-are-we-there-yet.html</a>

<a href="http://core-genomics.blogspot.com/2012/01/agbt-previews.html" target="_blank">http://core-genomics.blogspot.com/2012/01/agbt-previews.html</a>

<a href="http://omicsomics.blogspot.com/2012/01/sequencing-technology-fireworks.html" target="_blank">http://omicsomics.blogspot.com/2012/01/sequencing-technology-fireworks.html</a>

<a href="http://pathogenomics.bham.ac.uk/blog/2012/01/ion-torrent-proton-the-chip-is-not-the-machine/" target="_blank">http://pathogenomics.bham.ac.uk/blog/2012/01/ion-torrent-proton-the-chip-is-not-the-machine/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1112</wp:post_id>
		<wp:post_date>2012-01-11 07:54:40</wp:post_date>
		<wp:post_date_gmt>2012-01-11 12:54:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>life-technologies-illumina-new-machine-competitio</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="1000-genome"><![CDATA[$1000 genome]]></category>
		<category domain="post_tag" nicename="illumina"><![CDATA[Illumina]]></category>
		<category domain="post_tag" nicename="ion-torrent"><![CDATA[Ion Torrent]]></category>
		<category domain="post_tag" nicename="life-tech"><![CDATA[Life Tech]]></category>
		<category domain="post_tag" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[572]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>转方向啦</title>
		<link>http://128.192.66.53/wordpress/?p=1137</link>
		<pubDate>Sun, 29 Jan 2012 23:41:07 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1137</guid>
		<description></description>
		<content:encoded><![CDATA[PhD研究的基本方向初步定下来了。会继续关注测序技术，不过会更关注基因组、转录组、表观遗传组、蛋白质组、代谢组等组学数据的获取，处理和分析，特别是对如何整合多个组学、组学间调控关系的分析。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1137</wp:post_id>
		<wp:post_date>2012-01-29 18:41:07</wp:post_date>
		<wp:post_date_gmt>2012-01-29 23:41:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>phd-thesis-topic-decided</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[319]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[%e8%bd%ac%e6%96%b9%e5%90%91%e5%95%a6]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>新一期Science上有关BGI的通讯</title>
		<link>http://128.192.66.53/wordpress/?p=1141</link>
		<pubDate>Thu, 02 Feb 2012 20:16:59 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1141</guid>
		<description></description>
		<content:encoded><![CDATA[看看BGI在政府支持下，如何起家、发展并在全球扩张的。

<a href="http://www.sciencemag.org/content/335/6068/516.full" target="_blank">http://www.sciencemag.org/content/335/6068/516.full</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1141</wp:post_id>
		<wp:post_date>2012-02-02 15:16:59</wp:post_date>
		<wp:post_date_gmt>2012-02-02 20:16:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>sciencemag-news-bgi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bgi"><![CDATA[BGI]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="science"><![CDATA[Science]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[407]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[paper] Efficient de novo assembly of large genomes using compressed data structures</title>
		<link>http://128.192.66.53/wordpress/?p=1158</link>
		<pubDate>Fri, 02 Mar 2012 03:10:26 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1158</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Efficient de novo assembly of large genomes using compressed data structures</strong>

Jared T. Simpson and Richard Durbin

Wellcome Trust Sanger Institute, Wellcome Trust Genome Campus, Hinxton, Cambridge CB10 1SA, United Kingdom

<strong>Abstract</strong>

De novo genome sequence assembly is important both to generate new sequence assemblies for previously uncharacterized genomes and to identify the genome sequence of individuals in a reference-unbiased way. We present memory efficient data structures and algorithms for assembly using the FM-index derived from the compressed Burrows-Wheeler transform, and a new assembler based on these called <a href="https://github.com/jts/sga" target="_blank">SGA </a>(String Graph Assembler). We describe algorithms to error-correct, assemble, and scaffold large sets of sequence data. SGA uses the overlap-based string graph model of assembly, unlike most de novo assemblers that rely on de Bruijn graphs, and is simply parallelizable. We demonstrate the error correction and assembly performance of SGA on 1.2 billion sequence reads from a human genome, which we are able to assemble using 54 GB of memory. The resulting contigs are highly accurate and contiguous, while covering 95% of the reference genome (excluding contigs &lt;200 bp in length). Because of the low memory requirements and parallelization without requiring inter-process communication, SGA provides the first practical assembler to our knowledge for a mammalian-sized genome on a low-end computing cluster.

<a href="http://genome.cshlp.org/content/22/3/549.full?rss=1" target="_blank">fulltext</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1158</wp:post_id>
		<wp:post_date>2012-03-01 22:10:26</wp:post_date>
		<wp:post_date_gmt>2012-03-02 03:10:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-sga-assembler</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[376]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[paper-sga-assemble]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[paper] GAGE: A critical evaluation of genome assemblies and assembly algorithms</title>
		<link>http://128.192.66.53/wordpress/?p=1162</link>
		<pubDate>Fri, 02 Mar 2012 03:14:21 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1162</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>GAGE: A critical evaluation of genome assemblies and assembly algorithms</strong>

Abstract

New sequencing technology has dramatically altered the landscape of whole-genome sequencing, allowing scientists to initiate numerous projects to decode the genomes of previously unsequenced organisms. The lowest-cost technology can generate deep coverage of most species, including mammals, in just a few days. The sequence data generated by one of these projects consist of millions or billions of short DNA sequences (reads) that range from 50 to 150 nt in length. These sequences must then be assembled de novo before most genome analyses can begin. Unfortunately, genome assembly remains a very difficult problem, made more difficult by shorter reads and unreliable long-range linking information. In this study, we evaluated several of the leading de novo assembly algorithms on four different short-read data sets, all generated by Illumina sequencers. Our results describe the relative performance of the different assemblers as well as other significant differences in assembly difficulty that appear to be inherent in the genomes themselves. Three overarching conclusions are apparent: first, that data quality, rather than the assembler itself, has a dramatic effect on the quality of an assembled genome; second, that the degree of contiguity of an assembly varies enormously among different assemblers and different genomes; and third, that the correctness of an assembly also varies widely and is not well correlated with statistics on contiguity. To enable others to replicate our results, all of our data and methods are freely available, as are all assemblers used in this study.

<a href="http://genome.cshlp.org/content/22/3/557.full?rss=1" target="_blank">fulltext</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1162</wp:post_id>
		<wp:post_date>2012-03-01 22:14:21</wp:post_date>
		<wp:post_date_gmt>2012-03-02 03:14:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-gage-a-critical-evaluation-of-genome-assemblies-and-assembly-algorithms</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="abyss"><![CDATA[ABySS]]></category>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[472]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[paper] BGI单细胞基因组测序</title>
		<link>http://128.192.66.53/wordpress/?p=1164</link>
		<pubDate>Fri, 02 Mar 2012 03:29:36 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1164</guid>
		<description></description>
		<content:encoded><![CDATA[转自<a href="http://www.weibo.com/hibgi" target="_blank">BGI华大基因（微博）</a>

【Cell文章“双生子”诞生】华大基因在肿瘤研究上获得突破性进展，于国际著名学术期刊《细胞》上同时发表两篇研究论文。研究团队研发了一种解析单细胞基因组的新方法，并将该方法应用于原发性血小板增多症ET和肾透明细胞癌ccRCC的肿瘤内部遗传特征研究。

1. 研究人员发现此次研究的肾癌病例并非由常见的两个突变基因VHL和PBRM1导致，提示在癌症分析和诊断过程中进行个性化治疗的重要性。此外还发现了一些与此肾癌发生相关的重要功能基因。<a href="http://www.cell.com/abstract/S0092-8674(12)00225-5" target="_blank"> Single-Cell Exome Sequencing Reveals Single-Nucleotide Mutation Characteristics of a Kidney Tumor</a>

2为了探究肿瘤的演化及遗传特性，研究人员对取自一例典型的JAK2阴性ET病人的90个单细胞进行了全外显子测序，揭示了此ET在肿瘤发生中遵循单克隆演化模型，并鉴定了一些与ET的发生、发展相关的突变基因。<a href="http://www.cell.com/abstract/S0092-8674(12)00228-0" target="_blank">Single-Cell Exome Sequencing and Monoclonal Evolution of a JAK2-Negative Myeloproliferative Neoplasm</a>

News from BGI website: <a href="http://en.genomics.cn/navigation/show_news.action?newsContent.id=8990" target="_blank">Cell highlights BGI studies on single-cell sequencing, leading to a new era of cancer research</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1164</wp:post_id>
		<wp:post_date>2012-03-01 22:29:36</wp:post_date>
		<wp:post_date_gmt>2012-03-02 03:29:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-bgi-single-cell-sequencing-cell-papers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bgi"><![CDATA[BGI]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="illumina"><![CDATA[Illumina]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="single-cell-sequencing"><![CDATA[Single-cell sequencing]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[518]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[paper-bgi%e5%8d%95%e7%bb%86%e8%83%9e%e5%9f%ba%e5%9b%a0%e7%bb%84%e6%b5%8b%e5%ba%8f]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bioperl快速检索序列（Bioperl HOWTO翻译11）</title>
		<link>http://128.192.66.53/wordpress/?p=1235</link>
		<pubDate>Sun, 04 Mar 2012 01:50:36 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1235</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>索引序列文件以用于快速检索</h3>
<a href="http://www.bioperl.org/wiki/HOWTO:Beginners#Indexing_for_Fast_Retrieval" target="_blank">英文原文</a>

索引序列是Bioperl一个非常出色的功能。你可以将需要处理的本地序列文件建立一个索引然后利用这个索引提取你所需要的序列文件。这样做最重要的原因是——速度！从有索引的大量本地序列中提取所需序列要比用<a title="http://search.cpan.org/perldoc?Bio::DB::GenBank" href="http://search.cpan.org/perldoc?Bio::DB::GenBank" rel="nofollow" target="_blank">Bio::DB::GenBank</a>从远程数据库中提取快得多。也比用SeqIO快，因为SeqIO要一个一个通读每一个序列，然后才能找到所需的。灵活性是另一个原因。自己的有些序列毕竟不同于公共数据库上的序列，将自己收集的序列建立索引可用于日后快速的提取。

需要说明，在提取序列时的唯一要求是，所提供的要提取序列的id必须具有唯一性。（译者注：如果要提取所有相同有某特征序列，比如想要refseq，即id中包含“_”的序列，可以灵活变通：先输出所有id，然后选取那些有“_”的id，然后再用这些id提取序列信息。）

Bioperl有多个用于索引序列的模块，如 Bio::Index::*类和<a title="http://search.cpan.org/perldoc?Bio::DB::Fasta" href="http://search.cpan.org/perldoc?Bio::DB::Fasta" rel="nofollow" target="_blank">Bio::DB::Fasta</a>。 这些模块的原理都是一样的，先索引一个或多个序列文件，然后再根据id提取序列。先以<a href="http://www.bioperl.org/wiki/Module:Bio::Index::Fasta" target="_blank">Bio::Index::Fasta</a>为例。使用此模块时要先设定一个终端环境变量，如下：

[perl]use Bio::Index::Fasta;
$ENV{BIOPERL_INDEX_TYPE} = &quot;SDBM_File&quot;;
$ENV{BIOPERL_INDEX}='/nfs/datadisk/bioperlindex/';
[/perl]

可见在Perl脚本中也可以设定终端环境变量，此变量存贮在叫%ENV的特殊hash中。此设置当然也可以在终端中设定，在tcsh或csh中如下:
<pre>&gt;setenv BIOPERL_INDEX_TYPE SDBM_File</pre>
在bash shell中设定如下：
<pre>&gt;export BIOPERL_INDEX_TYPE=SDBM_File</pre>
BIOPERL_INDEX_TYPE是环境变量名， SDBM_File是变量的值。（译者注：SDBM是perl使用的一种文件格式，用于将hash保存在一个SDBM文件中。见<a href="http://search.cpan.org/dist/perl-5.12.4/ext/SDBM_File/SDBM_File.pm" target="_blank">这里</a>）. BIOPERL_INDEX指定索引文件所在的目录，可以通过设定此变量建立多个索引文件。（译者注：可以设定“setenv BIOPERL_INDEX /nfs/datadisk/bioperlindex/”，<a href="http://www.bioperl.org/wiki/Module:Bio::Index::Fasta" target="_blank">详见</a>）

看例子：

[perl]$ENV{BIOPERL_INDEX_TYPE} = &quot;SDBM_File&quot;;
use Bio::Index::Fasta;

$file_name = &quot;sequence.fa&quot;;
$id = &quot;48882&quot;;
$inx = Bio::Index::Fasta-&gt;new (-filename =&gt; $file_name . &quot;.idx&quot;,
                               -write_flag =&gt; 1);
$inx-&gt;make_index($file_name);[/perl]

在sequence.fa所在的目录下运行此脚本，将会在该目录下自动生成一个equence.fa.idx索引文件，然后可以通过下一语句提取所需序列：

[perl]$seq_obj = $inx-&gt;fetch($id)[/perl]

默认以 &gt;符号来识别fasta格式的序列，如果是要提取“48882”为id的序列，该序列头信息应该是类似下面的格式：
<pre>&gt;48882 pdb|1CRA</pre>
但是，如果想按照其他字符串提取序列，比如上例中“1CRA”，可以通过id_parser改变索引id的格式，（将自定义的index格式通过一个子函数传递给id_parser），详见<a title="http://search.cpan.org/perldoc?Bio::Index::Fasta" href="http://search.cpan.org/perldoc?Bio::Index::Fasta" rel="nofollow" target="_blank">Bio::Index::Fasta</a>。例如：

[perl]$inx-&gt;id_parser(\&amp;get_id);
$inx-&gt;make_index($file_name);

sub get_id {
    $header = shift;
    $header =~ /pdb\|(\S+)/;
    $1;
}[/perl]

准确地说，id_parser接受的是一个子函数的引用变量（a reference to a function）。

再来看<a title="http://search.cpan.org/perldoc?Bio::DB::Fasta" href="http://search.cpan.org/perldoc?Bio::DB::Fasta" rel="nofollow" target="_blank">Bio::DB::Fasta</a>，相对<a title="http://search.cpan.org/perldoc?Bio::Index::Fasta" href="http://search.cpan.org/perldoc?Bio::Index::Fasta" rel="nofollow" target="_blank">Bio::Index::Fasta</a>有些更好的功能。主要是：可以处理大批量序列 ；可以很方便地提取序列片段。示例：

[perl]use Bio::DB::Fasta;

($file,$id,$start,$end) = (&quot;genome.fa&quot;,&quot;CHROMOSOME_I&quot;,11250,11333);

$db = Bio::DB::Fasta-&gt;new($file);

$seq = $db-&gt;seq($id,$start,$end);

print $seq,&quot;\n&quot;;[/perl]

此脚本将genome.fa建立索引，然后提取CHROMOSOME_I上从11250到11333的序列片段。也可以如<a title="http://search.cpan.org/perldoc?Bio::Index::Fasta" href="http://search.cpan.org/perldoc?Bio::Index::Fasta" rel="nofollow" target="_blank">Bio::Index::Fasta</a>一样自定义要索引的id。（译者注：在new()中设定-makeid参数，此参数使用方法和上面的id_parser一样。详见<a title="http://search.cpan.org/perldoc?Bio::DB::Fasta" href="http://search.cpan.org/perldoc?Bio::DB::Fasta" rel="nofollow" target="_blank">Bio::DB::Fasta</a>）

更多的信息可见<a title="HOWTO:Local Databases" href="http://www.bioperl.org/wiki/HOWTO:Local_Databases" target="_blank">HOWTO:Local_Databases</a>.（译者注：等翻译到此部分时会将链接定向到翻译后的博客内容。）]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1235</wp:post_id>
		<wp:post_date>2012-03-03 20:50:36</wp:post_date>
		<wp:post_date_gmt>2012-03-04 01:50:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>bioperl-howto-index-for-fast-etrieval</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="index"><![CDATA[Index]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[508]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bioperl入门其他部分（Bioperl HOWTO翻译12）</title>
		<link>http://128.192.66.53/wordpress/?p=1290</link>
		<pubDate>Tue, 20 Mar 2012 02:21:18 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1290</guid>
		<description></description>
		<content:encoded><![CDATA[(译者注：<a href="http://www.bioperl.org/wiki/HOWTO:Beginners" target="_blank">Beginners HOWTO</a>翻译到此结束，从<a href="http://www.bioperl.org/wiki/HOWTO:Beginners#Searching_for_genes_in_genomic_DNA" target="_blank">Searching for genes in genomic DNA</a>部分往后都是一些有关bioperl和其他程序接口：调用其他程序并分析结果。专一性比较强，且需要对各个软件有很好的了解并正确安装和设定。个人觉得不怎么值得翻译，对此有兴趣的童鞋应该可以看懂英文然后自己研究清楚的。

后面的HOWTO都是一个个专题，会将同一个HOWTO放在单篇blog里，大部分HOWTO内容都比较长，翻译的时间可能也比较长，先发布全英文的，然后再慢慢翻译成中文，请见谅。)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1290</wp:post_id>
		<wp:post_date>2012-03-19 22:21:18</wp:post_date>
		<wp:post_date_gmt>2012-03-20 02:21:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>bioperl-howto-beginners-else</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[523]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[bioperl-howto-beginners-els]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>利用Bioperl进行序列输入和输出（Bioperl HOWTO翻译13）</title>
		<link>http://128.192.66.53/wordpress/?p=1295</link>
		<pubDate>Tue, 20 Mar 2012 02:32:14 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1295</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>利用Bioperl进行序列输入和输出</h3>
<a href="http://www.bioperl.org/wiki/HOWTO:SeqIO" target="_blank">英文原文</a>

<span style="color: #ff0000;">注意：由于SyntaxHighlighter的缘故，代码有错误，可能没修改完。</span>
<div id="toctitle">
<h2>目录</h2>
</div>
<ul>
	<li><a href="http://128.192.66.53/wordpress/2012/03/bioperl-howto-seqio/#Authors">1 作者 </a></li>
	<li><a href="http://128.192.66.53/wordpress/2012/03/bioperl-howto-seqio/#Copyright">2 版权</a></li>
	<li><a href="http://128.192.66.53/wordpress/2012/03/bioperl-howto-seqio/#The_basics">3 基础</a></li>
	<li><a href="http://128.192.66.53/wordpress/2012/03/bioperl-howto-seqio/#10_second_overview">4 十秒速览</a></li>
	<li><a href="http://128.192.66.53/wordpress/2012/03/bioperl-howto-seqio/#Background_Information">5 背景</a></li>
	<li><a href="http://128.192.66.53/wordpress/2012/03/bioperl-howto-seqio/#Formats">6 格式</a></li>
	<li><a href="http://128.192.66.53/wordpress/2012/03/bioperl-howto-seqio/#Working_Examples">7 举例</a></li>
	<li><a href="http://128.192.66.53/wordpress/2012/03/bioperl-howto-seqio/#To_and_From_a_String">8 字符串相关</a></li>
	<li><a href="http://128.192.66.53/wordpress/2012/03/bioperl-howto-seqio/#And_more_examples...">9 更多示例</a></li>
	<li><a href="http://128.192.66.53/wordpress/2012/03/bioperl-howto-seqio/#Caveats">10 警告</a></li>
	<li><a href="http://128.192.66.53/wordpress/2012/03/bioperl-howto-seqio/#Error_Handling">11 纠错</a></li>
	<li><a href="http://128.192.66.53/wordpress/2012/03/bioperl-howto-seqio/#Speed.2C_Bio::Seq::SeqBuilder">12 使用Bio::Seq::SeqBuilder提速</a></li>
</ul>
<a id="Authors" name="Authors"></a>
<h2>作者</h2>
<ul>
	<li><a title="Ewan Birney" href="http://www.bioperl.org/wiki/Ewan_Birney">Ewan Birney</a> &lt;<a title="mailto:birney-at-ebi.ac.uk" href="mailto:birney-at-ebi.ac.uk" rel="nofollow">birney at ebi.ac.uk</a>&gt;</li>
	<li><a title="Brian Osborne" href="http://www.bioperl.org/wiki/Brian_Osborne">Brian Osborne</a> &lt;<a title="mailto:briano-at-bioteam.net" href="mailto:briano-at-bioteam.net" rel="nofollow">briano at bioteam.net</a>&gt;</li>
	<li><a title="Darin London" href="http://www.bioperl.org/wiki/Darin_London">Darin London</a> &lt;<a title="mailto:darin.london-at-duke.edu" href="mailto:darin.london-at-duke.edu" rel="nofollow">darin.london at duke.edu</a>&gt;</li>
</ul>
<a id="Copyright" name="Copyright"></a>
<h2>版权</h2>
<a title="Ewan Birney" href="http://www.bioperl.org/wiki/Ewan_Birney">Ewan Birney</a>拥有此文档版权。 基于 <a href="http://www.perl.com/pub/language/misc/Artistic.html">Perl Artistic License</a>协议有限共享。

<a id="The_basics" name="The_basics"></a>
<h2>基础</h2>
作者假定阅读此文章的读者没有用过<a title="BioPerl" href="http://www.bioperl.org/wiki/BioPerl">BioPerl</a>，也许是一个想要获取一些序列信息的生物学者；也许是一个想学习一下目前流行的所谓“<a href="http://www.bioperl.org/wiki/Bioinformatics" target="_blank">生物新信息学</a>”的IT人士。我们讲解的第一个脚本就是如何从包含一个或多个序列的序列文件中提取相关信息。

一个小建议：坚持使用<a title="Module:Bio::SeqIO" href="http://www.bioperl.org/wiki/Module:Bio::SeqIO">Bio::SeqIO</a>模块来处理序列。先来看一下完成任务所需要的前几行脚本：

[perl]#!/bin/perl

use strict;
use Bio::SeqIO;

my $file         = shift; # get the file name, somehow
my $seqio_object = Bio::SeqIO-&gt;new(-file =&gt; $file);
my $seq_object   = $seqio_object-&gt;next_seq;[/perl]

为什么要用<a title="Module:Bio::SeqIO" href="http://www.bioperl.org/wiki/Module:Bio::SeqIO">Bio::SeqIO</a>？部分原因是SeqIO能识别各种不同的序列格式并从中提取然后创建相应的BioPerl对象。有些序列格式很简单，例如<a title="FASTA sequence format" href="http://www.bioperl.org/wiki/FASTA_sequence_format">FASTA</a>。fasta格式仅包含序列和一个简单的序列标识符，而不包含序列内部的一些详细的特征或信息（<a title="HOWTO:Feature-Annotation" href="http://www.bioperl.org/wiki/HOWTO:Feature-Annotation">Feature-Annotation HOWTO</a>里具体讲了序列的特征）。一般来说，SeqIO能识别不同的序列格式，并创建相应的对象，例如输入fasta，SeqIO会创建一个<a title="Module:Bio::Seq" href="http://www.bioperl.org/wiki/Module:Bio::Seq">Bio::Seq</a>对象，而输入Genbank或EMBL这种包含注释信息的序列文件，SeqIO则会创建一个<a title="Module:Bio::Seq::RichSeq" href="http://www.bioperl.org/wiki/Module:Bio::Seq::RichSeq">Bio::Seq::RichSeq</a>对象。

至于SeqIO针对不同格式的序列文件，到底创建了哪种对象，我们并不需要关心。SeqIO会把自动这些细节问题处理好。

<a id="10_second_overview" name="10_second_overview"></a>
<h2>十秒速览</h2>
生物信息学的工作会接触到各种格式的序列。而又有几乎同样多的程序来处理这些序列。SeqIO的优势是可以通过创建和输出序列对象的方式来处理很多不同格式的序列。可以将SeqIO想象成一个智能的文件控制系统。

<a id="Background_Information" name="Background_Information"></a>
<h2>背景</h2>
SeqIO系统可以处理很多复杂的序列格式。提供给Bioperl输入序列（序列可以是普通文件、标准输入输出（<tt>STDIN<span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;">和</span></tt><tt>STDOUT）、变量等等</tt>）以及序列格式，Bioperl即可从序列中提取所有可以提取的信息。有时候并不需要说明序列格式。SeqIO可通过文件扩展名或文件内容来猜测出序列格式。如果文件没有扩展名或者文件内容不完整甚至压根输入的就不是一个文件，Bioperl直接默认是fasta格式（译者注：而这样就很可能出错）。除非明确知道所用的序列就是fasta格式，最好还是明确告知Bioperl你所输入序列的格式。

SeqIO可以接受多种形式的输入。唯一的要求是序列必须包含在Perl所规定的“句柄”中（详见<a title="http://search.cpan.org/perldoc?IO::Handle" href="http://search.cpan.org/perldoc?IO::Handle" rel="nofollow">IO::Handle</a>）。大多数人使用文件句柄或者标准输入/输出（STDIN/STDOUT）。Perl还提供了如何将一段字符串转为句柄（见下文）。这样一来，几乎所有东西都可以作为SeqIO的输入，只要其中含有序列信息。SeqIO的主要工作流程就是获取一个句柄，然后依次将一条条序列信息转化为SeqI对象，若有需要则创建一个句柄以输出序列文件。SeqIO可以识别多个序列之间的分隔符，如genbank格式中的“// ”，fasta格式中的“&gt;”，也能识别用关键字或符号标识的其他序列信息。

<a id="Formats" name="Formats"></a>
<h2>格式</h2>
BioPerl的SeqIO模块能识别很多序列格式并且互相转换. 表1是最新版本的SeqIO所支持的格式。（译者注：表格见<a href="http://www.bioperl.org/wiki/HOWTO:SeqIO#Formats" rel="nofollow">原文</a>。如前所述，SeqIO将输入的不同格式序列用相应的模块转换成相应的序列对象）

<strong>注:</strong> <a title="Module:Bio::SeqIO" href="http://www.bioperl.org/wiki/Module:Bio::SeqIO">Bio::SeqIO</a>需要<a title="Bioperl-ext" href="http://www.bioperl.org/wiki/Bioperl-ext">bioperl-ext</a>包来和<a title="http://staden.sourceforge.net/" href="http://staden.sourceforge.net/" rel="nofollow">Staden</a>包中的<tt>io_lib库<span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;">才能读取</span></tt><tt>scf, abi, alf, pln, exp, ctf,和ztr格式的序列</tt>.

也许有些人会对上面提到的不同序列格式对应不同序列对象产生疑问，如“为了转换序列格式，如何才能把一个<em>PrimarySeq</em>对象转换为<em>RichSeq</em>对象？”答案是：这种问题压根就不用担心，SeqIO会自动转换。之所以不同的格式对应不同的对象，因为有些序列有很少信息，而有些格式又包含很多信息。（译者注：可能是避免大炮打蚊子似的浪费） 你并不需要关心SeqIO是如何转换的。列出表2，展示一下常见的序列格式和对应的序列对象，也可满足一些人的好奇心。（表格见<a href="http://www.bioperl.org/wiki/HOWTO:SeqIO#Formats" rel="nofollow">原文</a>。）

<a id="Working_Examples" name="Working_Examples"></a>
<h2>举例</h2>
先举个最简单的例子，如何从序列文件中提取<a title="Accession number" href="http://www.bioperl.org/wiki/Accession_number">accession number</a>。

[perl]
# first, bring in the SeqIO module
 
use Bio::SeqIO;
 
# Notice that you do not have to use any Bio:SeqI
# objects, because SeqIO does this for you. In fact, it
# even knows which SeqI object to use for the provided
# format.
 
# Bring in the file and format, or die with a nice
# usage statement if one or both arguments are missing.
my $usage  = &quot;getaccs.pl file format\n&quot;;
my $file   = shift or die $usage;
my $format = shift or die $usage;
 
# Now create a new SeqIO object to bring in the input
# file. The new method takes arguments in the format
# key =&gt; value, key =&gt; value. The basic keys that it
# can accept values for are '-file' which expects some
# information on how to access your data, and '-format'
# which expects one of the Bioperl-format-labels mentioned
# above. Although it is optional, it is good
# programming practice to provide &gt; and &lt; in front of any
# filenames provided in the -file parameter. This makes the
# resulting filehandle created by SeqIO explicitly read (&lt;)
# or write(&gt;).  It will definitely help others reading your
# code understand the function of the SeqIO object.
 
my $inseq = Bio::SeqIO-&gt;new(
                            -file   =&gt; &quot;&lt;$file&quot;,
                            -format =&gt; $format,
                            );
# Now that we have a seq stream,
# we need to tell it to give us a $seq.
# We do this using the 'next_seq' method of SeqIO.
 
while (my $seq = $inseq-&gt;next_seq) {
    print $seq-&gt;accession_number,&quot;\n&quot;;
}
[/perl]

运行此脚本需要两个参数，输入序列的文件名和文件格式。上例显示了最基本的处理genbank文件的方式。其他格式，如<tt>fasta</tt>,<tt>swissprot</tt>, <tt>ace</tt>都是类似的，需要给bioperl提供其所支持的格式名称。（译者注：一般情况下bioperl可以自己猜测出来序列的格式，而不需提供format参数，为保险期间最好说明格式类型。）

需要注意的是，SeqIO默认是处理多个序列的。每一次调用next_seq时，返回的是下一个序列，直到返回一个undef，即文件末尾。 <span style="font-family: monospace;">脚本是一个一个序列依次读取，相比一次性把所有序列读取后再处理更节省内存。undef的重要性在于，当文件达到末尾的时候，undef可终止while循环。</span>

下例是把<a title="EMBL sequence format" href="http://www.bioperl.org/wiki/EMBL_sequence_format">EMBL</a>文件中的所有序列信息都放先在一个数组里，然后从数组里提取所需信息。

[perl]
use strict;
use Bio::SeqIO;
 
my $input_file = shift;
 
my $seq_in  = Bio::SeqIO-&gt;new(
                              -format =&gt; 'embl',
                              -file   =&gt; $input_file,
                              );
 
# loads the whole file into memory - be careful
# if this is a big file, then this script will
# use a lot of memory
 
my $seq;
my @seq_array;
while( $seq = $seq_in-&gt;next_seq() ) {
    push(@seq_array,$seq);
}
 
# now do something with these. First sort by length,
# find the average and median lengths and print them out
 
@seq_array = sort { $a-&gt;length &lt;=&gt; $b-&gt;length } @seq_array;
 
my $total = 0;
my $count = 0;
foreach my $seq ( @seq_array ) {
    $total += $seq-&gt;length;
    $count++;
}
 
print &quot;Mean length &quot;,$total/$count,
      &quot; Median &quot;,$seq_array[$count/2]-&gt;length,&quot;\n&quot;;
[/perl]

现在来看如何转换序列格式。当你从一个序列文件创建一个<a title="Module:Bio::SeqIO" href="http://www.bioperl.org/wiki/Module:Bio::SeqIO">Bio::SeqIO</a>对象后，每次调用next_seq，Bioperl都会通过运行很多相关的脚本，来提取下一条序列的信息，并记录到一个SeqI对象中。神奇的是，next_seq一次性提取整条序列的所有信息，因为Bioperl能够理解序列的起始和终止位置，当提取完一条序列信息后自动停止，等待下一次next_seq的调用。同时，Bioperl也能识别出序列的注释信息，例如在genbank序列 <tt><a href="http://www.ncbi.nlm.nih.gov/Sitemap/samplerecord#LocusB" target="_blank">LOCUS</a>行中的</tt><a href="http://www.ncbi.nlm.nih.gov/Sitemap/samplerecord#GenBankDivisionB" target="_blank">DIVISION</a>信息。 要转换格式，就是把存储序列信息的一个<a title="Module:Bio::SeqI" href="http://www.bioperl.org/wiki/Module:Bio::SeqI">Bio::SeqI</a>对象以另一种格式输出到新文件中。 这时就要用<a title="Module:Bio::SeqIO" href="http://www.bioperl.org/wiki/Module:Bio::SeqIO">Bio::SeqIO</a>中的另一个方法，write_seq。write_seq的工作原理与刚才所说的读取序列的过程正好相反，并通过next_seq将输入和输出的过程连接起来。Bioperl可以将一个SeqI对象按照所需格式输出到新的序列文件中。看下面的示例会更清楚一些：

[perl]use Bio::SeqIO;
# get command-line arguments, or die with a usage statement
my $usage         = &quot;x2y.pl infile infileformat outfile outfileformat\n&quot;;
my $infile        = shift or die $usage;
my $infileformat  = shift or die $usage;
my $outfile       = shift or die $usage;
my $outfileformat = shift or die $usage;
 
# create one SeqIO object to read in,and another to write out
my $seq_in = Bio::SeqIO-&gt;new(
                             -file   =&gt; &quot;&lt;$infile&quot;,
                             -format =&gt; $infileformat,
                             );
my $seq_out = Bio::SeqIO-&gt;new(
                              -file   =&gt; &quot;&gt;$outfile&quot;,
                              -format =&gt; $outfileformat,
                              );
 
# write each entry in the input file to the output file
while (my $inseq = $seq_in-&gt;next_seq) {
    $seq_out-&gt;write_seq($inseq);
}
[/perl]

可以将$seq_in和$seq_out想象成两个特殊的文件句柄，并且这个文件句柄“知道”序列及其格式。用文件句柄时一般用类似&lt;F&gt;的操作符，而$seq_in和$seq_out则使用next_seq()方法来读取或输出序列对象，如用“$seqio-&gt;write_seq($seq_object)”相对于“print F $line”。

注：<a title="Module:Bio::SeqIO" href="http://www.bioperl.org/wiki/Module:Bio::SeqIO">Bio::SeqIO</a>允许使用一种办法来模仿文件句柄的输入输出（也不知道用这种方法是傻还是聪明），让<code>&lt;F&gt;存储序列，“</code><code>print F”则是输出序列。但这种方式对很多人来说是一种非主流想法，看起来很别扭，有时候也会引起一些不必要的困惑。</code>

这个可通用与序列格式转换的脚本只比前面例子里提取accession号和计算序列平均长度的脚本多了几行代码。（主要增加的部分是为了从命令行获取参数）这就是Bioperl的优势所在，可以用很少的代码完成很复杂的任务。

接着，我们来看通过简单修改上面例子中的代码来展示一下SeqIO的灵活性。例如，用其他程序输出一段内容，然后用Bioperl来接受其输出的内容，处理后输出到新文件中。这里需要明确亮点，一个和Perl有关，另一个是Bioperl特有的。Perl可以通过在一个句柄的名字前加“*”号将其转换（GLOB）成一个文件句柄，以便于后面使用。 另外，<a title="Module:Bio::SeqIO" href="http://www.bioperl.org/wiki/Module:Bio::SeqIO">Bio::SeqIO</a>可以将前面转换后的文件句柄作为<code>-fh的参数，以代替</code><code>-file参数。下面展示的例子中，all2y.pl可以从其他程序的输出端获取内容，使用时类似于：</code>
<pre>    &gt;cat myseqs.fa | all2y.pl fasta newseqs.gb genbank</pre>
其代码如下：

[perl]use Bio::SeqIO;
use Bio::SeqIO;
# get command-line arguments, or die with a usage statement
my $usage     = &quot;all2y.pl informat outfile outfileformat\n&quot;;
my $informat  = shift or die $usage;
my $outfile   = shift or die $usage;
my $outformat = shift or die $usage;
 
# create one SeqIO object to read in, and another to write out
# *STDIN is a 'globbed' filehandle with the contents of Standard In
my $seqin = Bio::SeqIO-&gt;new(
                            -fh     =&gt; \*STDIN,
                            -format =&gt; $informat,
                            );
my $seqout = Bio::SeqIO-&gt;new(
                             -file   =&gt; &quot;&gt;$outfile&quot;,
                             -format =&gt; $outformat,
                             );
 
# write each entry in the input file to the output file
while (my $inseq = $seqin-&gt;next_seq) {
    $seqout-&gt;write_seq($inseq);
}
[/perl]

有时候可能根本就用不着文件。可以直接使用 <tt>STDIN<span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;">和</span></tt><tt>STDOUT，将输出序列做为另一程序的输入，比如：</tt>
<pre>    cat *.seq | in2out.pl EMBL Genbank | someother program</pre>
代码如下：

[perl]use Bio::SeqIO;
# get command-line arguments, or die with a usage statement
my $usage     = &quot;in2out.pl informat outformat\n&quot;;
my $informat  = shift or die $usage;
my $outformat = shift or die $usage;
 
# create one SeqIO object to read in, and another to write out
my $seqin = Bio::SeqIO-&gt;new(
                            -fh     =&gt; \*STDIN,
                            -format =&gt; $informat,
                            );
my $outseq = Bio::SeqIO-&gt;new(
                             -fh     =&gt; \*STDOUT,
                             -format =&gt; $outformat,
                             );
 
# write each entry in the input to the output
while (my $inseq = $seqin-&gt;next_seq) {
    $outseq-&gt;write_seq($inseq);
}
[/perl]

<a id="To_and_From_a_String" name="To_and_From_a_String"></a>
<h2>字符串相关</h2>
一个很常见的问题是：“如果我有一个字符串，其中包含了一系列的某格式的序列，我该如何才能把这些序列转换成Bio::Seq对象？”比如有些时候，需要用户在网页表格内输入一段序列，然后对这段序列做一些处理。可以通过把用户输入的一段字符串转化成符合Perl标准的句柄(Perl 5.8.0以后可以直接用open来完成），然后-fh参数就可设置成这个句柄，而不用设置成文件名。

下面的两个例子都不是完整的程序，只是给个基本的示例。假设通过<a title="wp:CGI" href="http://en.wikipedia.org/wiki/CGI">CGI</a>脚本获取到用户输入的序列和序列格式，并分别放到两个字符串变量中。刚才提到Bio::seqIO可通过文件后缀名识别序列格式，这里输入的序列不是文件，所以必须告知Bioperl文件格式。

[perl]use IO::String;   # only needed for Perl versions previous to 5.8.0
use Bio::SeqIO;
 
## get a string into $string somehow,
## with its format in $format, say from a web form.
my $string   = &quot;&gt;SEQ1\nacgt\n&gt;revseq1\ntgca\n&quot;;           
my $format   = &quot;fasta&quot;;
 
my $stringfh = IO::String-&gt;new($string);  # Use this for Perl BEFORE 5.8.0
open($stringfh,&quot;&lt;&quot;,\$string) or die &quot;Could not open string for reading:$!&quot;;
# Use this for Perl AFTER 5.8.0 (inclusive)
 
my $seqio = Bio::SeqIO-&gt; new(
                             -fh     =&gt; $stringfh,
                             -format =&gt; $format,
                             );
 
while( my $seq = $seqio-&gt;next_seq ) {
    # process each seq
    print $seq-&gt;id . ' = '.$seq-&gt;seq().&quot;\n&quot;;
}[/perl]

同样道理，也可以将一个序列对象以一字符串的形式输出。示例（注意open函数内“&lt;”和“&gt;”的区别，“&lt;”用于输入，“&gt;”用于输出）：

[perl]use IO::String;   # only needed for Perl versions BEFORE 5.8.0
use Bio::SeqIO;
 
my $string;
my $stringfh = IO::String-&gt;new(\$string); # Use this for Perl BEFORE 5.8.0
open($stringfh,&quot;&gt;&quot;,\$string) or die &quot;Could not open string for writing:$!&quot;;
# Use this for Perl AFTER 5.8.0 (inclusive)
 
my $seqOut = Bio::SeqIO-&gt;new(
                             -format =&gt; 'swiss',
                             -fh     =&gt; $io,
                             );
$seqOut-&gt;write_seq($seq_obj);
print $string;
[/perl]

<a id="And_more_examples..." name="And_more_examples..."></a>
<h2>更多示例</h2>
<a title="Module:Bio::SeqIO" href="http://www.bioperl.org/wiki/Module:Bio::SeqIO">Bio::SeqIO</a>中的<code>-file</code>参数可以是多个文件。也可以是一段字符串，用于表明从<a title="wp:Pipe (Unix)" href="http://en.wikipedia.org/wiki/Pipe_(Unix)">管道</a>输入的内容。格式是<code>'-file' =&gt; '命令 |'。注意后面的“|”符号。当需要处理很大的压缩文件而又没有足够空间解压缩的时候，这种办法很管用。这里给出一个从gzip压缩的genbank文件中提取序列并转换成新的fasta格式的文件，使用方法如下：</code>
<pre>     gzip2fasta.pl gbpri1.seq.gz Genbank gbpri1.fa</pre>
下面是gzip2fasta.pl的代码：

[perl]use Bio::SeqIO;
# get command-line arguments, or die with a usage statement
my $usage    = &quot;gzip2fasta.pl infile informat outfile\n&quot;;
my $infile   = shift or die $usage;
my $informat = shift or die $usage;
my $outfile  = shift or die $usage;
 
# create one SeqIO object to read in, and another to write out
my $seqin = Bio::SeqIO-&gt;new(
                            -file   =&gt; &quot;/usr/local/bin/gunzip -c $infile |&quot;,
                            -format =&gt; $informat,
                            );
 
my $seqout = Bio::SeqIO-&gt;new(
                             -file   =&gt; &quot;&gt;$outfile&quot;,
                             -format =&gt; 'Fasta',
                             );
 
# write each entry in the input to the output file
while (my $inseq = $seqin-&gt;next_seq) {
    $seqout-&gt;write_seq($inseq);
}[/perl]

当然Bioperl也可一“管道输出”。使用格式是：<code>'-file' =&gt; "| 命令"。这个时候“|”变到了命令的前面。下面举个例子，用Bioperl将一个genbank序列文件转为fasta格式的序列，但不输出文件，直接传递给WashU Blast，让其建立序列数据库。用法：</code>
<pre>    any2wublastable.pl myfile.gb Genbank mywublastable p</pre>
<tt>any2wublastable.pl的代码：</tt>

[perl]use Bio::SeqIO;
 
# get command-line arguments, or die with a usage statement
my $usage     = &quot;any2wublastable.pl infile informat outdbname outdbtype\n&quot;;
my $infile    = shift or die $usage;
my $informat  = shift or die $usage;
my $outdbname = shift or die $usage;
my $outdbtype = shift or die $usage;
 
# create one SeqIO object to read in, and another to write out
my $seqin = Bio::SeqIO-&gt;new(
                            -file   =&gt; &quot;&lt;$infile&quot;,
                            -format =&gt; $informat,
                            );
my $seqout = Bio::SeqIO-&gt;new(
   -file =&gt; &quot;| /usr/local/bin/xdformat -o $outdbname -${outdbtype} -- -&quot;,
   -format =&gt; 'Fasta',
                             );
 
# write each entry in the input to the output
while (my $inseq = $seqin-&gt;next_seq) {
    $seqout-&gt;write_seq($inseq);
}[/perl]

可能一些有经验的读者已经意识到new方法返回的是一个引用变量（reference），引用的可以是任意格式的数据。现在来看一个用引用变量存储序列信息的例子。任务是要从一个genbank序列文件中提取出人类的序列并输出到human.gb文件，剩下的序列输出到other.gb文件。这里需要用到两个哈希数组（hash），并分别以“human”和“other”作为下标（key）。
<pre>     splitgb.pl inseq.gb</pre>
<tt>splitgb.pl</tt>的代码:

[perl]use Bio::SeqIO;
 
# get command-line argument, or die with a usage statement
my $usage  = &quot;splitgb.pl infile\n&quot;;
my $infile = shift or die $usage;
 
my $inseq = Bio::SeqIO-&gt;new(
                            -file   =&gt; &quot;&lt;$infile&quot;,
                            -format =&gt; 'Genbank',
                            );
 
my %outfiles = (
                'human' =&gt; Bio::SeqIO-&gt;new(
                                           -file   =&gt; '&gt;human.gb',
                                           -format =&gt; 'Genbank',
                                           ),
                'other' =&gt; Bio::SeqIO-&gt;new(
                                           -file   =&gt; '&gt;other.gb',
                                           -format =&gt; 'Genbank',
                                           ),
                );
 
while (my $seqin = $inseq-&gt;next_seq) {
    # here we make use of the species attribute, which returns a
    # species object, which has a binomial attribute that
    # holds the binomial species name of the source of the sequence
    if ($seqin-&gt;species-&gt;binomial =~ m/Homo sapiens/) {
        $outfiles{'human'}-&gt;write_seq($seqin);
    } else {
        $outfiles{'other'}-&gt;write_seq($seqin);
    }
}
[/perl]

现在来看用更复杂的多维hash来存储Genbank和fasta的序列信息。

[perl]use Bio::SeqIO;
# get command-line argument, or die with a usage statement
my $usage  = &quot;splitgb.pl infile\n&quot;;
my $infile = shift or die $usage;
 
my $inseq = Bio::SeqIO-&gt;new(
                            -file   =&gt; &quot;&lt;$infile&quot;,
                            -format =&gt; 'Genbank',
                            );
 
my %outfiles = (
                human =&gt; {
                          Genbank =&gt; Bio::SeqIO-&gt;new(
                                                     -file   =&gt; '&gt;human.gb',
                                                     -format =&gt; 'Genbank',
                                                     ),
                          Fasta   =&gt; Bio::SeqIO-&gt;new(
                                                     -file   =&gt; '&gt;human.fa',
                                                     -format =&gt; 'Fasta',
                                                     ),
                          },
                other =&gt; {
                          Genbank =&gt; Bio::SeqIO-&gt;new(
                                                     -file   =&gt; '&gt;other.gb',
                                                     -format =&gt; 'Genbank',
                                                     ),
                          Fasta   =&gt; Bio::SeqIO-&gt;new(
                                                     -file =&gt; '&gt;other.fa',
                                                     -format =&gt; 'Fasta',
                                                     ),
                          }
                );
 
while (my $seqin = $inseq-&gt;next_seq) {
    if ($seqin-&gt;species-&gt;binomial =~ m/Homo sapiens/) {
        $outfiles{'human'}-&gt;{'Genbank'}-&gt;write_seq($seqin);
        $outfiles{'human'}-&gt;{'Fasta'}-&gt;write_seq($seqin);
    } else {
        $outfiles{'other'}-&gt;{'Genbank'}-&gt;write_seq($seqin);
        $outfiles{'other'}-&gt;{'Fasta'}-&gt;write_seq($seqin);
    }
}[/perl]

最后要说的是<a href="http://en.wikipedia.org/wiki/One-liner_program" target="_blank">单行</a>程序。Perl允许在命令行里用单行程序的方式编写脚本，而不需要放在脚本文件中。如下所示，-e后面用单引号括住脚本代码，<tt>-M后面跟所调用的模块。（译者注：-M后面没有空格，-e后面可有可无，多个模块则写多个-M。）当脚本内部也需要使用单引号时必须用q()来代替，防止混淆。下面举的例子是要找出在一个压缩的序列文件中有多少GSS序列。注：为了便于阅读，下面的代码有分行，但在命令行中一般没有写完代码不分行。（译者注：有单引号存在的时候，也可以分行，直到单引号结束再回车才会运行命令。）</tt>
<pre>perl -MBio::SeqIO -e 'my $gss=0;
my $in=Bio::SeqIO-&gt;new(q(-file)=&gt;q(/usr/local/bin/gunzip -c gbpri1.seq.gz |), q(-format)=&gt;q(Genbank));
while (my $seq = $in-&gt;next_seq) { $gss++ if ($seq-&gt;keywords =~ m/GSS/);}
 print "There are $gss GSS sequences in gbpri1.seq.gz\n";'</pre>
<a id="Caveats" name="Caveats"></a>
<h2>警告</h2>
因为<a title="BioPerl" href="http://www.bioperl.org/wiki/BioPerl">BioPerl</a>用一个单一而通用的数据接口来存取所有支持格式的文件，有时候Bioperl就会或多或少改变原本文件的数据结构。例如，从<a title="GenBank" href="http://www.bioperl.org/wiki/GenBank">GenBank</a>数据库中下载到一个genbank格式的序列，然后用bioperl转换成一个新的genbank格式的序列。用"<tt>diff origfile newfile</tt>"后会惊奇地发现两者有所不同，这时你就应该明白我第一句说的是什么了。需要记住Bioperl并不提供“往返行程”，它只是通过一个通用的数据接口来获取多种多样序列的信息，并用于其他脚本或程序从中提取所需信息。

<a id="Error_Handling" name="Error_Handling"></a>
<h2>纠错</h2>
如果所给定的文件不存在，脚本会运行出错并给出相应的错误信息。这用编程术语叫做“<a href="http://en.wikipedia.org/wiki/Exception_handling" target="_blank">抛出异常</a>”。例如：
<pre>      user@localhost ~/src/bioperl-live&gt; perl t.pl bollocks silly

      ------------- EXCEPTION  -------------
      MSG: Could not open bollocks for reading: No such file or directory
      STACK Bio::Root::IO::_initialize_io Bio/Root/IO.pm:259
      STACK Bio::SeqIO::_initialize Bio/SeqIO.pm:441
      STACK Bio::SeqIO::genbank::_initialize Bio/SeqIO/genbank.pm:122
      STACK Bio::SeqIO::new Bio/SeqIO.pm:359
      STACK Bio::SeqIO::new Bio/SeqIO.pm:372
      STACK toplevel t.pl:9
      --------------------------------------</pre>
这种错误信息非常有用。因为可以从中可以找出出错的地方，也叫“<a href="http://en.wikipedia.org/wiki/Stack_trace" target="_blank">堆栈追踪</a>”。如上例中给出了出错的文件和与错误相关的行号。（译者注：上例中t.pl是用户自己的脚本，出错是在t.pl文件的第9行。其他都是bioperl包含的一些相关模块文件，所列行号只是和错误相关，但一般不会是bioperl本身出错。）

Bioperl会自动识别出类似的错误并终止程序运行。但最好是自己就在脚本中设置一些纠错机制。 可以通过类似下例来“捕获异常”。

[perl]use strict;
use Bio::SeqIO;
 
my $input_file  = shift;
my $output_file = shift;
 
# we have to declare $seq_in and $seq_out before
# the eval block as we want to use them afterwards
 
my $seq_in;
my $seq_out;
 
eval {
    $seq_in   = Bio::SeqIO-&gt;new(
                                -format =&gt; 'genbank',
                                -file   =&gt; $input_file,
                                );
 
    $seq_out  = Bio::SeqIO-&gt;new(
                                -format =&gt; 'fasta',
                                -file   =&gt; &quot;&gt;$output_file&quot;,
                                );
};
if( $@ ) { # an error occurred
    print &quot;Was not able to open files, sorry!\n&quot;;
    print &quot;Full error is\n\n$@\n&quot;;
    exit(-1);
}
my $seq;
while( $seq = $seq_in-&gt;next_seq() ) {
    $seq_out-&gt;write_seq($seq);
}[/perl]

eval是perl的一种纠错机制，不止是<a title="BioPerl" href="http://www.bioperl.org/wiki/BioPerl">BioPerl</a>才有。如果eval {BLOCK}中的一段程序出错后，回将错误信息返回到$@变量。需要注意的是：必须提前声明变量 <code>$seq_in<span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif;">和</span></code><code>$seq_out。如果在eval {}内用my声明变量，此变量只被设定在eval{}中，当在eval{}之后调用此变量是就会出错（用use strict时会提示错误并终止运行）。</code>

<a id="Speed.2C_Bio::Seq::SeqBuilder" name="Speed.2C_Bio::Seq::SeqBuilder"></a>
<h2>提速, <a title="Module:Bio::Seq::SeqBuilder" href="http://www.bioperl.org/wiki/Module:Bio::Seq::SeqBuilder">Bio::Seq::SeqBuilder</a></h2>
如果需要处理大批量的序列，且只需要从中提取很少部分信息（如只提取genbank文件中的序列），可以使用<a title="Module:Bio::Seq::SeqBuilder" href="http://www.bioperl.org/wiki/Module:Bio::Seq::SeqBuilder">Bio::Seq::SeqBuilder</a>来设定<a title="Module:Bio::SeqIO" href="http://www.bioperl.org/wiki/Module:Bio::SeqIO">Bio::SeqIO</a>只提取需要的部分信息。这样能够节省很多时间从而提升脚本的运行速度。

例如，只需要genbank文件中三类注释信息，可提升大约6倍的速度。

[perl]#!/usr/bin/perl
 
use strict;
use Bio::SeqIO;
use Benchmark qw(:all);
 
my $file = &quot;gbbct10.seq&quot;;
 
timethis(1, sub {
   my $in = Bio::SeqIO-&gt;new(-file =&gt; $file, -format =&gt; &quot;genbank&quot;);
   for (1..1000) {
      my $seq = $in-&gt;next_seq;
   }
});
 
timethis(1, sub {
   my $in = Bio::SeqIO-&gt;new(-file =&gt; $file, -format =&gt; &quot;genbank&quot;);
   my $builder = $in-&gt;sequence_builder();
   $builder-&gt;want_none();
   $builder-&gt;add_wanted_slot('display_id','desc','seq');
   for (1..1000) {
      my $seq = $in-&gt;next_seq;
   }
});
[/perl]

结果：
<pre>timethis 1: 10 wallclock secs ( 9.64 usr +  0.02 sys =  9.66 CPU) @  0.10/s (n=1)
            (warning: too few iterations for a reliable count)
timethis 1:  1 wallclock secs ( 1.63 usr +  0.00 sys =  1.63 CPU) @  0.61/s (n=1)
            (warning: too few iterations for a reliable count)</pre>
更多相关内容见<a title="HOWTO:Feature-Annotation" href="http://www.bioperl.org/wiki/HOWTO:Feature-Annotation#Customizing_Sequence_Object_Construction">HOWTO:Feature-Annotation</a>（译者注：等翻译到此部分时会将链接定向到翻译后的博客内容。）
<div id="catlinks"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1295</wp:post_id>
		<wp:post_date>2012-03-19 22:32:14</wp:post_date>
		<wp:post_date_gmt>2012-03-20 02:32:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>bioperl-howto-seqio</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioperl"><![CDATA[Bioperl]]></category>
		<category domain="category" nicename="bioperl-howto-translation"><![CDATA[Bioperl HOWTO翻译]]></category>
		<category domain="post_tag" nicename="howto"><![CDATA[HOWTO]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="seqio"><![CDATA[SeqIO]]></category>
		<category domain="post_tag" nicename="translation"><![CDATA[Translation]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[767]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[bioperl-howto-seqi]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2016年下一代测序技术的全球市场总额将达23.43亿刀</title>
		<link>http://128.192.66.53/wordpress/?p=1445</link>
		<pubDate>Mon, 09 Apr 2012 17:08:53 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1445</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.marketsandmarkets.com/" target="_blank">MarketsandMarkets</a>新发布了一个比较系统的关于下一代测序技术的<a href="http://www.marketsandmarkets.com/Market-Reports/next-generation-sequencing-ngs-technologies-market-546.html" target="_blank">报告</a>，总结现状，更主要的是为了预测未来。

2011年，下一代测序技术的全球市场总额是8.425亿刀，预计会按照每年22.7%的速度递增，2016年将达到23.43亿刀。北美地区现占51.8%的市场份额，欧洲31.1%。

市场增长的主要驱动力来自于越来越便宜的测序技术以及测序被应用于越来越多的领域，如癌症、生物能源、海洋生物学，畜牧业、农业以及兽医药学。即将来临的个人基因组测序的普及，将更大地刺激对测序设备的需求。

现阶段这个领域主要的公司有 <a href="http://www.illumina.com/" target="_blank">Illumina</a> (美帝)、<a href="http://www.lifetechnologies.com/" target="_blank">Life Technologies</a> (美帝)、<a href="http://www.454.com/" target="_blank">454 Roche </a>(瑞士)、<a href="http://www.nanoporetech.com/" target="_blank">Oxford Nanopore Technologies</a> (英帝)、 and <a href="http://www.pacificbiosciences.com/" target="_blank">Pacific Biosciences</a> (美帝)。在目前以大规模短片段测序占主流的情况下，Illumina和Life Technologies在这一技术上<a href="http://128.192.66.53/wordpress/2012/01/life-technologies-illumina-new-machine-competitio/" target="_blank">竞争非常激烈</a>。以后大片段的测序是趋势，而454 Roche和Pacific Biosciences又占有优势。当然更少不了新兴的Oxford Nanopore Technologies，利用纳米测序技术能够长片段、单细胞测序且设备非常小，有很大的潜力。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1445</wp:post_id>
		<wp:post_date>2012-04-09 13:08:53</wp:post_date>
		<wp:post_date_gmt>2012-04-09 17:08:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>next-generation-sequencing-ngs-technologies-market</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="454"><![CDATA[454]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="illumina"><![CDATA[Illumina]]></category>
		<category domain="post_tag" nicename="life-tech"><![CDATA[Life Tech]]></category>
		<category domain="post_tag" nicename="nanopore"><![CDATA[Nanopore]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="pacbio"><![CDATA[PacBio]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[399]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[2016%e5%b9%b4%e4%b8%8b%e4%b8%80%e4%bb%a3%e6%b5%8b%e5%ba%8f%e6%8a%80%e6%9c%af%e7%9a%84%e5%85%a8%e7%90%83%e5%b8%82%e5%9c%ba%e6%80%bb%e9%a2%9d%e5%b0%86%e8%be%be23-43%e4%ba%bf%e5%88%80]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wellcome Trust即将推出开放期刊eLife</title>
		<link>http://128.192.66.53/wordpress/?p=1457</link>
		<pubDate>Tue, 10 Apr 2012 12:51:38 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1457</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.wellcome.ac.uk/" target="_blank">Wellcome Trust</a>基金会去年<a href="http://wellcometrust.wordpress.com/2011/11/07/elife-a-journal-by-scientists-for-scientists/">宣布</a>计划出版一个新的可开放获取的顶尖的学术期刊系列，eLife。基金会的主管Mark Walport<a href="http://www.guardian.co.uk/science/2012/apr/09/wellcome-trust-academic-spring">现在宣称</a>eLife的发布工作已经到了最后的阶段，并希望eLife成为能和Nature和Science竞争但可免费获取的期刊系列。

eLife的发布将给“学术之春”（<a href="http://americanlibrariesmagazine.org/features/04042012/academic-spring" target="_blank">academic spring</a>）活动注入一股强心剂。本来该活动是由于Elsevier高昂的订阅费而导致数学家Timothy Gowers<a href="https://gowers.wordpress.com/2012/01/21/elsevier-my-part-in-its-downfall/" target="_blank">号召</a>学术界联合抵制Elsevier，不发表，不审核，不编辑。现在已经有<a href="http://thecostofknowledge.com/" target="_blank">9000</a>多人签名支持，并引起了关于学术期刊免费开放的广泛讨论。

Wellcome Trust是仅次于Bill &amp; Melinda Gates Foundation（盖茨夫妇）对科研投资最大的非政府组织，每年投入超过600万欧。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1457</wp:post_id>
		<wp:post_date>2012-04-10 08:51:38</wp:post_date>
		<wp:post_date_gmt>2012-04-10 12:51:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>wellcome-trust-academic-spring</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="elife"><![CDATA[eLife]]></category>
		<category domain="post_tag" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[272]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>李恒获得2012年Benjamin Franklin奖</title>
		<link>http://128.192.66.53/wordpress/?p=1462</link>
		<pubDate>Tue, 10 Apr 2012 13:57:34 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1462</guid>
		<description></description>
		<content:encoded><![CDATA[旧闻了，但觉得有必要拿出来分享一下。

<a href="http://lh3lh3.users.sourceforge.net/" target="_blank">李恒</a>因在下一代测序技术的软件开发与应用上的突出贡献，<a href="http://www.bio-itworld.com/2012/03/14/broads-heng-li-wins-2012-benjamin-franklin-award.html" target="_blank">获得</a>了<a href="http://www.bioinformatics.org/" target="_blank">Bioinformatics.Org</a>颁发的2012年<a href="http://www.bioinformatics.org/franklin/" target="_blank">Benjamin Franklin奖</a>。
<p style="text-align: left;">李恒算是生物信息学界的一个牛人了。南大生物物理本科毕业，2006年在中科院理论物理研究所获得博士学位。读博期间师从<a href="http://power.itp.ac.cn/~zheng/" target="_blank">郑伟谋</a>，但貌似是在Sanger的<a href="http://www.sanger.ac.uk/research/faculty/rdurbin/" target="_blank">Richard Durbin</a>的指导下与BGI的<a href="http://www.weibo.com/n/%E7%8E%8B%E4%BF%8A%E5%8D%8E%E5%A4%A7%E5%9F%BA%E5%9B%A0" target="_blank">王俊</a>等人合作搞<a href="http://www.treefam.org/" target="_blank">TreeFam</a>数据库。博士毕业后理所应当地到了Richard Durbin实验室做博士后，并在此期间开发了后来名震天下的<a href="http://samtools.sourceforge.net/" target="_blank">SAMtools</a>、<a href="http://bio-bwa.sourceforge.net/" target="_blank">BWA</a>和<a href="http://maq.sourceforge.net/" target="_blank">MAQ</a>。而Richard Durbin也培养了另外一个Benjamin Franklin奖获得者，2005年获该奖的<a href="http://www.ebi.ac.uk/~birney/" target="_blank">Ewan Birney</a>。他工作于EBI，领导了<a href="http://www.bioperl.org/">Bioperl</a>和<a href="http://www.ensembl.org/">Ensembl</a>的开发，以及<a href="http://encodeproject.org/ENCODE/" target="_blank">ENCODE</a>工程。李恒后来又转到<a href="http://www.broadinstitute.org/">Broad Institute</a>与<a href="http://genepath.med.harvard.edu/~reich/" target="_blank">David Reich</a>和<a href="http://www.broadinstitute.org/about/bios/bio-altshuler.html">David Altshuler</a>共事，进行人类群体遗传学方面的研究，并经常在Nature和Science灌水。他在<a href="http://seqanswers.com/" target="_blank">SEQanswers</a>和<a href="http://www.biostars.org/" target="_blank">BioStars</a>上也很活跃（两个论坛上的id应该都是lh3）。</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1462</wp:post_id>
		<wp:post_date>2012-04-10 09:57:34</wp:post_date>
		<wp:post_date_gmt>2012-04-10 13:57:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>heng-li-2012-benjamin-franklin-award</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="resequencing"><![CDATA[Resequencing]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[833]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1551</wp:comment_id>
			<wp:comment_author><![CDATA[ygc]]></wp:comment_author>
			<wp:comment_author_email>guangchuangyu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ygc.name</wp:comment_author_url>
			<wp:comment_author_IP>113.105.10.55</wp:comment_author_IP>
			<wp:comment_date>2012-05-17 04:11:05</wp:comment_date>
			<wp:comment_date_gmt>2012-05-17 08:11:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[牛B啊。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1337242265.77";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1337257318.63";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>三种小型测序仪的比较</title>
		<link>http://128.192.66.53/wordpress/?p=1484</link>
		<pubDate>Mon, 23 Apr 2012 13:27:41 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1484</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://pathogenomics.bham.ac.uk/staff/nloman.html" target="_blank">Nicholas Loman</a>在Nature Biotechnology发了一篇<a href="http://www.nature.com/nbt/journal/vaop/ncurrent/full/nbt.2198.html" target="_blank">文章</a>，综合比较了三个小型测序仪，<a href="http://www.gsjunior.com/" target="_blank">454 GS Junior</a> (Roche), <a href="http://www.illumina.com/systems/miseq.ilmn" target="_blank">MiSeq</a> (Illumina) and <a href="http://www.iontorrent.com/ion-personal-genome-machine-sequencer/" target="_blank">Ion Torrent PGM </a>(Life Technologies)，并且接受了Nature的<a href="http://www.nature.com/news/next-generation-genome-sequencers-compared-1.10497" target="_blank">采访</a>。

小型测序仪一般只有台式电脑大小，价格便宜、操作简单，但通量相对较小，一般用于重测序和小基因组或基因组片段的<em>de novo</em>测序。（BTW, 我们实验室有一台MiSeq）

正如Nicholas Loman所说，这三个测序仪都有各自的优缺点。PGM单位时间内通量高；MiSeq每个run通量高；MiSeq错误率低，454可读取最长的序列片段但通量低；PGM和454在测重复序列时容易出错，且多次重复测序仍然无法消除；MiSeq整体稳定性和质量较好。价格方面没有透露。我所了解到的是MiSeq比PGM高一点，454最贵，但PGM更新换代花费少，只需要更新一个芯片。

但是话又说回来了，现在测序技术发展非常快，远远<a href="http://medgadget.com/2011/05/dna-sequencing-beating-moores-law.html" target="_blank">超过</a>了电脑行业的所谓摩尔定律。别看现在Illumina笑傲群雄，Ion Torrent正快速追赶，加上Nanopore技术的异军突起，估计会各领风骚几年。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1484</wp:post_id>
		<wp:post_date>2012-04-23 09:27:41</wp:post_date>
		<wp:post_date_gmt>2012-04-23 13:27:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>desktop-sequencers-comparison</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="454"><![CDATA[454]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="illumina"><![CDATA[Illumina]]></category>
		<category domain="post_tag" nicename="ion-torrent"><![CDATA[Ion Torrent]]></category>
		<category domain="post_tag" nicename="life-tech"><![CDATA[Life Tech]]></category>
		<category domain="post_tag" nicename="miseq"><![CDATA[MiSeq]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[535]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[desktopsequencers-compared]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[desktop-sequencers-compared]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>真核基因组注释</title>
		<link>http://128.192.66.53/wordpress/?p=1496</link>
		<pubDate>Mon, 23 Apr 2012 14:16:37 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1496</guid>
		<description></description>
		<content:encoded><![CDATA[测一个未知基因组（<em>de nove</em> sequence），要进行测序、拼接及注释。关于测序仪和拼接软件已经讲的很多了，很少有关于基因组注释的文章。一篇最近在Nature Review Genetics上的<a href="http://www.nature.com/nrg/journal/v13/n5/full/nrg3174.html" target="_blank">文章</a>，A beginner's guide to eukaryotic genome annotation，非常详细地讲解了如何做基因组注释，是一篇非常好的入门文章。

基因组拼接好后，一般要先进行重复序列的检测和注释，然后mask掉这些重复序列，再进行编码基因的预测（有时候也预测非编码RNA），最后一步是整合。因为要通过不同的方法和参考来源来预测，会得到不同的结果，整合时综合考虑预测错误和可变剪接，得到可靠的注释，这一步要一个个手工检测。

有很多软件可以做注释（可见文章内的列表），主要分为ab initio和evidence-driven两种预测方法。

现在RNA-seq技术也很成熟了，一般都是在测基因组时也要做RNA-seq，这些RNA-seq既可用于分析基因的表达，也是非常好的基因注释的参考资源。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1496</wp:post_id>
		<wp:post_date>2012-04-23 10:16:37</wp:post_date>
		<wp:post_date_gmt>2012-04-23 14:16:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>guide-to-eukaryoticgenome-annotation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="annotation"><![CDATA[Annotation]]></category>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="transcriptome"><![CDATA[Transcriptome]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[503]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>上了火的RNA-seq</title>
		<link>http://128.192.66.53/wordpress/?p=1521</link>
		<pubDate>Wed, 25 Apr 2012 18:31:43 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1521</guid>
		<description></description>
		<content:encoded><![CDATA[Nature News今天的一篇<a href="http://www.nature.com/news/rna-studies-under-fire-1.10502" target="_blank">评论</a>，说是现在越来越多人使用高通量的RNA数据，但忽略了统计分析的严密性和重要性，而得到了一些值得怀疑的结论。

举了两个例子。

第一个，2010年，Harvard的<a href="http://www.hms.harvard.edu/dms/neuroscience/fac/dulac.php">Catherine Dulac</a>和<a href="http://www.neuro.utah.edu/people/faculty/gregg.html">Christopher Gregg</a>在Science上发了一篇<a href="http://www.sciencemag.org/content/329/5992/643.long" target="_blank">文章</a>，号称1300多个小鼠的基因都属于烙印基因（<a href="http://en.wikipedia.org/wiki/Genomic_imprinting" target="_blank">imprinted gene</a>：两个等位基因，一个表达一个沉默）。但是Standford的Tomas Babak用同样的数据得到了不同的结果，并于2012年3月将其<a href="http://www.plosgenetics.org/article/info%3Adoi%2F10.1371%2Fjournal.pgen.1002600" target="_blank">分析结果</a>发表在PLoS  Genetics上。Babak认为原文章所用的统计方法会有很高的假阳性。

另一个例子就是前段时间引起巨大争议的关于RNA编辑广泛存在的那篇<a href="http://www.sciencemag.org/content/333/6038/53" target="_blank">文章</a>。后来又有多篇评论发表在Science上，强烈置疑该文章分析方法的可靠性。

造成这种争议的原因是什么呢？

一是RNA-Seq还没有像DNA测序一样建立起一个标准化的、错误偏差少的分析方法。

二是这些文章一般号称在生物学上某一点上取得了突破，所以一般是搞生物的来审核，缺少搞数学和统计的人把关。

个人觉得：很少有懂统计的人把生物理解的很清楚，更少有搞生物的把统计学好的，现在生物大数据时代，都需要补补课了。这两篇文章因为是有了“突破性的发现”，所以很多双眼睛在盯着，引起了怀疑。至于其他灌水文章，也不知道能有多少篇把统计方法用对的。这算是方法论的问题，只要提出来了，多探索一般能有个定论。更可怕的是搞科研的为了发文章，不惜更改数据或忽略负面数据，前几天不是有人<a href="http://online.wsj.com/article/SB10001424052970204571404577257513760102538.html" target="_blank">抱怨</a>癌症治疗的研究大部分都是在骗人么？！

希望以后有所改观，至少做到自重吧。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1521</wp:post_id>
		<wp:post_date>2012-04-25 14:31:43</wp:post_date>
		<wp:post_date_gmt>2012-04-25 18:31:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>rna-studies-under-fire</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="rna-seq"><![CDATA[RNA-Seq]]></category>
		<category domain="post_tag" nicename="statistics"><![CDATA[Statistics]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[750]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1544</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.53</wp:comment_author_IP>
			<wp:comment_date>2012-04-28 15:50:34</wp:comment_date>
			<wp:comment_date_gmt>2012-04-28 19:50:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[test]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1335642634.45";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1545</wp:comment_id>
			<wp:comment_author><![CDATA[Test]]></wp:comment_author>
			<wp:comment_author_email>testaaa@test.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>126.121.103.6</wp:comment_author_IP>
			<wp:comment_date>2012-04-28 19:06:27</wp:comment_date>
			<wp:comment_date_gmt>2012-04-28 23:06:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[貌似和当年的microarray刚出一样]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1335654387.17";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1335659940.69";s:7:"message";s:45:"bioops changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Nature: 染色体镶嵌性、年龄和癌症之间的关系</title>
		<link>http://128.192.66.53/wordpress/?p=1555</link>
		<pubDate>Tue, 08 May 2012 14:41:39 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1555</guid>
		<description></description>
		<content:encoded><![CDATA[5月6日的Nature同时发布了两篇研究方向非常相似的论文，揭示了染色体镶嵌性会随着年龄的增长而增加，并与癌症发生有一定关联。

<a href="http://www.nature.com/ng/journal/vaop/ncurrent/full/ng.2270.html" target="_blank">一篇</a>由<a href="http://www.cancer.gov/" target="_blank">National Cancer Institute (NCI)</a>的<a href="http://dceg.cancer.gov/about/staff-bios/chanock-stephen" target="_blank">Stephen Chanock</a>领导完成。将 31,717个癌症患者和26,136健康人血液或口腔拭子的SNP芯片数据分析比较。健康人中染色体复制异常的比率随着年龄而增长，50岁以下0.23%，到了70多岁就飙到了1.91%。平均下来，癌症患者中染色体复制异常的比率比健康者高一些（0.97% VS 0.74%）。有些白血病患者被诊断出来前一年的血液样本中的染色体复制异常也比健康人普遍。

从<a href="http://www.nature.com/ng/journal/vaop/ncurrent/full/ng.2271.html" target="_blank">另一篇</a>来自<a href="https://www.genevastudy.org/" target="_blank">Gene Environment Association Studies Consortium (GENEVA)</a>。他们分析了超5万人血液样本的SNP芯片数据，发现50岁以下人的基因组样本中，复制异常低于0.5%，而在50岁之后的人中迅速增长至2–3%。有很多复制异常都在以前发现的和血液癌症有关的位点上。虽然这些有“污点记录”的位点只占所发现的异常位点的3%，统计学分析表明，有复制异常的人得血液癌症的概率是正常人的十倍。

笔记：上面涉及到一些概率，我没仔细看文章，可能理解有错。人体细胞复制不可靠。年老的人更容易得癌症。50岁是个坎儿。生孩子要趁早。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1555</wp:post_id>
		<wp:post_date>2012-05-08 10:41:39</wp:post_date>
		<wp:post_date_gmt>2012-05-08 14:41:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>relationship-of-clonal-mosaicism-aging-cancer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cancer"><![CDATA[Cancer]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[486]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>String-graph based next-generation sequencing assemblers</title>
		<link>http://128.192.66.53/wordpress/?p=1563</link>
		<pubDate>Tue, 08 May 2012 16:02:01 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1563</guid>
		<description></description>
		<content:encoded><![CDATA[Please read <a href="http://www.homolog.us/blogs/2012/02/11/string-graph-assembler/" target="_blank">this article</a> or the following linked papers for the reason using <a href="http://en.wikipedia.org/wiki/String_graph">string-graph</a> algorithm.

<a href="http://www.zbh.uni-hamburg.de/?id=349" target="_blank">Readjoiner</a> (<a href="http://www.biomedcentral.com/1471-2105/13/82/abstract" target="_blank">Gonnella and Kurtz 2012</a>) Readjoiner is a sequence assembler based on the assembly string graph framework (<a href="http://bioinformatics.oxfordjournals.org/content/21/suppl_2/ii79.abstract" target="_blank">Myers 2005</a>). It is faster and uses less memory than previous string graph-based assemblers.

<a href="https://github.com/jts/sga" target="_blank">SGA</a> (<a href="http://genome.cshlp.org/content/22/3/549" target="_blank">Simpson and Durbin 2012</a>) SGA is a de novo genome assembler based on the concept of string graphs. The major goal of SGA is to be very memory efficient, which is achieved by using a compressed representation of DNA sequence reads.

<a href="http://www.genomic.ch/edena.php" target="_blank">Edena</a> (<a href="http://genome.cshlp.org/content/18/5/802" target="_blank">Hernandez et al 2008</a>) The program is under development. Edena is based on the classical overlap layout assembly framework. In addition, it includes two features to improve the assembly of very short sequences: exact matching and detection of spurious reads.

<a href="http://www.engr.uconn.edu/~htd06001/assembler/" target="_blank">LEAP</a> (<a href="http://bioinformatics.oxfordjournals.org/content/27/14/1901.long" target="_blank">Dinh and Rajasekaran 2011</a>) LEAP incorporates a memory-efficient data structure for the overlap graph. This data structure requires only linear time to construct and and linear memory to store.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1563</wp:post_id>
		<wp:post_date>2012-05-08 12:02:01</wp:post_date>
		<wp:post_date_gmt>2012-05-08 16:02:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>string-graph-based-next-generation-sequencing-assembler</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[690]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>微博存档05062012-06212012</title>
		<link>http://128.192.66.53/wordpress/?p=1724</link>
		<pubDate>Fri, 22 Jun 2012 14:17:52 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1724</guid>
		<description></description>
		<content:encoded><![CDATA[Thu Jun 21 03:25:30 +0800 2012
Nobel fight over African HIV centre  http://t.cn/zWw5m7q

Thu Jun 21 03:25:05 +0800 2012
Genomics: The breast cancer landscape  http://t.cn/zWw5nuU

Thu Jun 21 03:24:06 +0800 2012
The landscape of cancer genes and mutational processes in breast cancer  http://t.cn/zWw5n65

Thu Jun 21 03:22:23 +0800 2012
The genomic and transcriptomic architecture of 2,000 breast tumours reveals novel subgroups  http://t.cn/zWw5ECT

Thu Jun 21 03:22:12 +0800 2012
Sequence analysis of mutations and translocations across breast cancer subtypes  http://t.cn/zWw5EKy

Wed Jun 20 08:17:12 +0800 2012
An Update on Using Pacific Bio Sequences for Genome Assembly  Homologus  http://t.cn/zWZHLvc

Wed Jun 20 04:51:59 +0800 2012
法国故意散步，想打西班牙？,又是法国对西班牙……一说起这个我就肝颤，2000的点球，2006的被逆转——除了02年冤死在棒子手上，这两场是人生看球最痛经历，没有之一……被最痛恨球队淘汰最喜欢球队的事情，不想再发生第三次了，板鸭会给力么？说实话，心里没底。

Wed Jun 20 04:48:27 +0800 2012
皇马十一人全部进入淘汰赛。不过法国遭遇西班牙，全部十一人不可能同时出现在四强了。

Wed Jun 20 04:40:46 +0800 2012
皇马十一人全部进入淘汰赛。不过本泽马走不远

Wed Jun 20 01:40:48 +0800 2012
转发微博,抱歉，此微博不适宜对外公开。如需帮助，请联系客服。http://t.cn/z0D6ZaQ

Tue Jun 19 23:02:12 +0800 2012
@ewanbirney For genomics lovers: Biology of Genomes 2013 is going from Tue May 7th to Sat May 11th CSHL. Save the date + your best genomics abstracts :)

Tue Jun 19 20:50:09 +0800 2012
Cancer genomics: Indicators for drug response from sequencing  <a href="http://t.cn/zWZoWaU">http://t.cn/zWZoWaU</a>

Tue Jun 19 08:05:15 +0800 2012
complete list http://t.cn/zWzQ2EJ,国际超级电脑组织公布最新全球超级电脑500强名单，IBM最新研制的超级计算机“红杉”为美国夺得全球最快超级计算机宝座，其持续运算速度达每秒16324万亿次，峰值运算速度高达每秒20132万亿次，令其他计算机望尘莫及。中国超级电脑排名第五。http://t.cn/zWzDcuU

Tue Jun 19 06:55:41 +0800 2012
Using Galaxy to Perform Large‐Scale Interactive Data Analyses - Current Protocols  http://t.cn/zWZv4bD

Tue Jun 19 06:55:38 +0800 2012
Using Cloud Computing Infrastructure with CloudBioLinux, CloudMan, and Galaxy - Current Protocols  http://t.cn/zWZv4LY

Fri Jun 15 02:50:02 +0800 2012
托雷斯！

Thu Jun 14 23:02:21 +0800 2012
实例：Contrail - A de Bruijn Genome Assembler that uses Hadoop http://t.cn/zWhaImo,NOSQL Databases for Bioinformatics  http://t.cn/zWhaZtR

Thu Jun 14 22:55:39 +0800 2012
NOSQL Databases for Bioinformatics  http://t.cn/zWhaZtR

Thu Jun 14 22:33:35 +0800 2012
算法上的东西还是拼不过google,据媒体报道，3D地图推出后，不少开发者想要尝鲜进行试用，不料却发现苹果地图犯下了一些明显的错误。比如说，该地图应用因位置标记错误“引导”车主跳桥。而且，在苹果的3D地图中，亚洲和澳洲居然是被北冰洋隔开！辽阔的非洲大陆居然成了“北太平洋”，格陵兰岛成了印度洋！  http://t.cn/zWPrSGl

Thu Jun 14 20:08:50 +0800 2012
//@基因组:[good]@土摩托: 吴孔明团队花了20多年的时间，研究了150万平方公里的农田，这才得出了上述结论。这篇文章刚刚发表在最新一期《Nature》上...。http://t.cn/zWhwlTv 补充一句：看到有些人质疑这个结论，可你难道没想过，你花一秒钟想出来的质疑，人家当然早就想到了。你太自信了。,《卫报》报道了中国农科院植保所所长吴孔明的最新研究，证明转基因Bt抗虫棉不但能杀死害虫，减少农药的使用，还能保护环境，让其他不能被Bt杀死的害虫的天敌们得以繁衍。http://t.cn/zWhwvf2 不少人指责我为孟山都说话，我的回答是：孟山都是一家环保企业，我为什么不能为它说话？

Wed Jun 13 04:39:52 +0800 2012
谈“历史”没用，拳头才是硬货,【英国阿根廷争议岛屿将公投决定主权归属】福克兰群岛(阿根廷称马尔维纳斯群岛)政府12日宣布，该岛居民将在明年举行全民公投，以决定其主权归属，从而结束英、阿两国在其主权归属问题上的争议。英国首相卡梅伦称，英国政府将支持公投的结果，支持和捍卫岛民的选择。http://t.cn/zWPqoT7

Tue Jun 12 04:06:55 +0800 2012
舍瓦牛逼！

Tue Jun 12 03:57:56 +0800 2012
瑞典胜之不武

Tue Jun 12 00:48:14 +0800 2012
英格兰难道就一直这样让法国放开攻么？

Mon Jun 11 23:23:27 +0800 2012
Google 梦回大唐 奋力一战 | 谷奥——探寻谷歌的奥秘  http://t.cn/zWv9ePp  原文：http://t.cn/zWvipNo

Mon Jun 11 21:20:46 +0800 2012
转发微博,《C++程序员的阅读清单》多读一些优秀的书籍，对于开发者稳固编程基础、提高编程技能有很大帮助。但是，大多时候，初学者不知道应该读什么书入门，有一定基础的开发者不知道如何进阶。本文总结了一个C++优秀书籍清单，希望能够为你带来一定的帮助……http://t.cn/zWvwYZl

Sat Jun 09 01:28:10 +0800 2012
下半场风云突变

Fri Jun 08 23:41:59 +0800 2012
ESPN终于转播足球了。可以在电视上看了！,2012年欧洲杯完全赛程，准备好过这个夏天……喜欢的朋友收藏吧~

Fri Jun 08 23:03:03 +0800 2012
牛逼的flame病毒 http://t.cn/zOey5jv http://t.cn/zOFsvIv http://t.cn/zOFIcg1 http://t.cn/zOFjuvl

Fri Jun 08 03:17:03 +0800 2012
Deciphering the plant splicing code  http://t.cn/zOFaRMT

Fri Jun 08 01:56:26 +0800 2012
Lafayette is #2! America's Brainiest Cities http://t.cn/zOFXgUP

Thu Jun 07 20:37:40 +0800 2012
若发现有某种严重疾病的可能性,生还是不生? Sequencing the Unborn http://t.cn/zOFceD6

Wed Jun 06 21:13:19 +0800 2012
Nothing worth doing is easy

Wed Jun 06 10:59:09 +0800 2012
妙,【美不反对中国发布美城市空气质量数据 称未干涉中国内政】针对中国环保部指责外国使馆发布中国空气质量数据不合规定，美国国务院回应称，美国发布的数据只是为在中国的美国公民提供信息，没有干涉中国内政，因此不会停止发布。如果中国也发布美国城市空气质量数据，美国不反对。http://t.cn/zOkJ3lU

Wed Jun 06 01:08:49 +0800 2012
奇文共赏,上月20日，沈阳皇姑区一名男子以切菜刀劫持路过女子，荷枪实弹的警察与男子对峙，因恐伤害人质不敢轻动。歹徒占据上风押着人质转移，发现一炸鸡柳的小摊碍事，他一脚踢飞。这下可惹祸了，愤怒的小贩手持大勺冲上去，当场将歹徒制服。[哈哈][哈哈]http://t.cn/zO3GYSh

Tue Jun 05 08:36:25 +0800 2012
今天沪指跌的有水平！

Mon Jun 04 23:59:03 +0800 2012
真后悔看了那个视频。,【加拿大杀害中国留学生嫌犯在德国被捕】加拿大“残肢邮寄案”嫌犯、29岁色情男星马尼奥塔今晚在德国柏林一家网吧被捕。马尼奥塔涉嫌将在蒙特利尔留学的33岁武汉学生林俊杀害并猥亵，整个过程被录像并上传网络，部分尸块还被邮寄至加拿大两大政党总部。http://t.cn/zODTgoi

Mon Jun 04 04:34:46 +0800 2012
西班牙要变第二个法国么？,我开始担心今天的剧本要成＂吊丝的逆袭＂了。。。

Sat Jun 02 00:39:41 +0800 2012
RIP,【视频：客车司机被飞来铁块击中忍痛停车救乘客】5月29日，浙江杭州长运快客公司有一辆客车从无锡返回杭州时候，在途中遭到对向车道突然飞来铁块的袭击，当事司机吴斌被迎面击中，但他并没有让客车失控而是忍痛将车停好确保车上24名乘客安全，而他自己因肝脏多处破裂献出生命。http://t.cn/zOeqEcO

Fri Jun 01 21:58:21 +0800 2012
Next Steps in the Sequence: The Implications of Whole Genome Sequencing for Health in the UK (PHG Foundation, Cambridge, 2011)http://t.cn/zOeURjF @BGI华大基因 @王俊华大基因

Fri Jun 01 21:55:40 +0800 2012
给全基因组测序浇点冷水，清醒一下。[Science: Policy Forum] Medicine: Whole-Genome Sequencing: The New Standard of Care?  http://t.cn/zOeUjL7

Fri Jun 01 20:30:35 +0800 2012
转发微博。,抱歉，此微博不适宜对外公开。如需帮助，请联系客服。http://t.cn/z0D6ZaQ

Fri Jun 01 12:15:07 +0800 2012
转发微博。,【BGI求贤令】加入我们，与华大共享未来!华大基因诚聘“药物基因组高级项目负责人”，请投递简历至：recruiting@genomics.org.cn 更多职位信息，敬请关注：http://t.cn/zOCnFgC [lb嘿嘿]

Thu May 31 21:32:50 +0800 2012
RIP,【红学家周汝昌逝世,享年95岁】5月31日凌晨，著名红学家周汝昌先生于家中去世，终年95岁。周汝昌先生留有遗愿，要求子女不开追悼会，不设灵堂，让他安安静静地走。周汝昌一生有60多部学术著作问世，代表作《红楼梦新证》是近代红学研究的奠基之作。http://t.cn/zOg0YcA

Thu May 31 02:15:33 +0800 2012
托雷斯后仰头球！

Thu May 31 02:02:22 +0800 2012
文章配图都是怎么画出来的？,The tomato genome sequence provides insights into fleshy fruit evolution  http://t.cn/zOg5b1Y

Thu May 31 01:53:56 +0800 2012
The tomato genome sequence provides insights into fleshy fruit evolution  http://t.cn/zOg5b1Y

Wed May 30 22:38:51 +0800 2012
http://t.cn/zOgvmmt

Wed May 30 09:49:39 +0800 2012
转发微博,【中国青年报：可怜之刃刺向可怜之胸】贵州德江县执法人员拆除违建被农妇刺死，记者调查发现该农妇今年27岁，随丈夫在外打工10年，在丈夫去年去世后回老家，花掉近10万积蓄修建两间平房，但因属违建被拆除。村民称她没有丈夫依靠，还要抚养刚9岁的女儿，房子没了，被逼入了绝境。http://t.cn/zOdm5S5

Tue May 29 04:31:57 +0800 2012
转发微博,【阿扎尔宣布今夏加盟切尔西】http://t.cn/zOdVNC9 北京时间5月29日凌晨，法甲最佳球员比利时国脚阿扎尔个人推特正式宣布今夏将加盟新科欧冠冠军切尔西，这场旷日持久且引众豪门加入的转会大戏，随着阿扎尔的亲自宣布落下帷幕，法甲小天王将于今夏正式转战英超。

Tue May 29 04:29:16 +0800 2012
LOL | How Not To Be A Bioinformatician  http://t.cn/zOdVnlW

Tue May 29 00:55:40 +0800 2012
转发微博,等爸有钱了给你办美国户口---------转自北京大学法学博士，中国政法大学法学民商经济法学院教师翟继光。亲爱的女儿：爸爸是个无能的人。很多事情都办不好，请你原谅。爸爸把你带到这个(详见长微博)

Sat May 26 01:28:57 +0800 2012
BBC News - Station grabs SpaceX Dragon ship  http://t.cn/zOBSe7P

Sat May 26 00:15:26 +0800 2012
Revolution Analytics - Commercial Software &amp; Support for the R Statistics Language  http://t.cn/hbqgZ1

Fri May 25 07:27:52 +0800 2012
//@BGI华大基因: [围观]看测序仪器市场风云变幻[微风][浮云],#ICG-Europe# NGS &amp; 3GS comparison by Sanger. Ion Torrent performs better, Oxford Nanopore still promising [围观] @BGI华大基因

Fri May 25 02:14:03 +0800 2012
a data-driven approach [Perspective] Cancer: Systems Biology, Metabolomics, and Cancer Metabolism  http://t.cn/zOB4tJj

Fri May 25 02:11:11 +0800 2012
测序新趋势。[News Focus] The Biology of Genomes: Single-Cell Sequencing Tackles Basic and Biomedical Questions  http://t.cn/zOB4q7R

Fri May 25 02:06:09 +0800 2012
牙齿变坏，是因为吃的太好了。[News Focus] Evolutionary Biology: An Evolutionary Theory of Dentistry  http://t.cn/zOB4Up1

Fri May 25 00:43:02 +0800 2012
The Emergence of lncRNA  http://t.cn/zOBUh4S

Thu May 24 21:35:41 +0800 2012
LOL,4月30日，有位朋友@ 我，大意说：“要是国内 IT 公司能像Google等奖励漏洞提交人，国内产品会更加牛叉”。今日很高兴在微博上看到有公司这样表姿态了，于是有白帽子跟进。据@Joey_Yin 微博显示，他提交了一个 XSS 漏洞，结果对方的奖励规则变了，XSS 漏洞不在奖励范围之内了。[衰] 请见大图。

Thu May 24 10:51:59 +0800 2012
能完成这些就已经很＂出格＂了。几个人能做到。换一种角度看，这是一种幸福,#非诚勿扰语录#我相信每个人身边都会有这样的人：在学校念书的时候成绩很好、家庭环境很好、上了一好的中学又考了一好的大学，念了一个好的专业，毕业之后通过自己的努力或者家里关系，去了一个好单位，从来不做那些出格的事，如果不出意外的话，59岁就会退下来。你觉得这叫靠谱的人吗？——@孟非

Thu May 24 10:03:39 +0800 2012
Amino acid coevolution induces an evolutionary Stokes shift http://t.cn/zO1QvRs

Thu May 24 09:51:27 +0800 2012
google reader几天不看就堆积成山了。

Thu May 24 08:32:58 +0800 2012
一个困扰众多大牛的问题，谁能给个准确的模型？Humans riddled with rare genetic variants http://t.cn/zO1Yce8

Thu May 24 08:17:54 +0800 2012
2012 Next-Gen Sequencing Conferences http://t.cn/zO1jsMz

Thu May 24 08:05:45 +0800 2012
黑色素瘤基因组http://t.cn/zO1jnHc

Tue May 22 08:36:13 +0800 2012
也许是因为作者是EBI的吧，竟然能发到nature上。http://t.cn/zO3iRDg

Sun May 20 02:05:01 +0800 2012
NYU的那个fellowship是临时给的还是有个固定名字来源的？连飞机票都报。

Sat May 19 00:07:46 +0800 2012
转发微博,家宴，证明一下上得厅堂下得厨房，杀得了木马斗得了流氓。  @薛蛮子 ，等你那量@韩寒 身高的照片。我家墙上刻着韩少的印记，我证明他还不够精确，171.5。

Fri May 18 21:31:02 +0800 2012
Cell: The Life History of 21 Breast Cancershttp://t.cn/zOmSHZ3 Mutational Processes Molding the Genomes of 21 Breast Cancers http://t.cn/zOmSHZu

Fri May 18 09:00:12 +0800 2012
转发微博。,《X，你想怎样》——《赛德克.巴莱》，《复仇者联盟》⋯⋯几个电影的影评。博客链接http://t.cn/zOm6rkB

Fri May 18 04:16:22 +0800 2012
占前排 ——看到韩寒的博文《影评一篇》有感而发的评论。http://t.cn/zOm6rkB

Wed May 16 08:16:33 +0800 2012
转发微博,哈佛医学院遗传系的厕所标志很有特色[嘻嘻]。

Wed May 16 06:39:32 +0800 2012
好文！   陈平原：中国大学唯哈佛剑桥马首是瞻 误尽苍生_资讯频道_凤凰网  http://t.cn/zOnXLaH

Wed May 16 06:25:06 +0800 2012
转发微博,【坐在路边鼓掌的人】接到了女儿班主任的电话。首先得知，女儿的成绩，仍是中等。不过他说，有一件奇怪的事，他从教30年，第一次遇见。语文试卷上有一道附加题：你最欣赏班上的哪位同学，请说出理由。 除女儿之外，全班同学，竟然都写上了女儿的名字... 值得天下父母认真读一读的好文！ by@周伯通招聘

Tue May 15 22:31:38 +0800 2012
转发微博,针对方舟子同学对韩寒同学不断挖墙角的行为。本人作出了一个重大决定。我决定与方舟子这位秃顶老男人结婚。用我的后半身来守住他。并在每晚面对方舟子的时候，把他想象成欧美高富帅年轻男。

Tue May 15 21:20:39 +0800 2012
我手贱，点了恒大的比赛。

Tue May 15 01:08:41 +0800 2012
Durbin写的，次品概率不大,我认为最好的一本生物信息书。

Mon May 14 23:31:02 +0800 2012
有点像基因水平上的趋同进化。Parallel domestication of the Shattering1 genes in cereals : Nature Genetics : Nature Publishing Group  http://t.cn/zOEBl01

Mon May 14 20:42:03 +0800 2012
BGI和UGA同时发布谷子基因组。对比一下！http://t.cn/zOEoM9Y http://t.cn/zOEn01Y @BGI华大基因

Mon May 14 20:28:04 +0800 2012
谷子基因组，通讯作者是我的committee member。Reference genome sequence of the model plant Setaria : Nature Biotechnology : Nature Publishing Group  http://t.cn/zOEnH84

Mon May 14 03:07:56 +0800 2012
解说真不错！ 一半狂欢一半落寞 曼城曼联争冠诠释足球魅力|英超联赛聚焦|英超_新浪视频  http://t.cn/zOEilxo

Sun May 13 05:37:19 +0800 2012
转发微博,今天是母亲节，我终于完成了这幅创作了两年多的油画「母亲」。记得1979年，我考上大学时，曾向自己的母亲发誓：＂从今天开始，您就不要怕了，我一定要让您过上衣食无忧的生活，绝不能让您下半辈子再在街头流浪＂。应该说，我做到了。但今天我们敢对那些被冤的母亲说：我们一定要为您伸张正义吗？！

Wed May 09 18:46:38 +0800 2012
转发微博。,2012年欧洲杯完全赛程，准备好过这个夏天……喜欢的朋友收藏吧~

Wed May 09 16:15:25 +0800 2012
Nature: 染色体镶嵌性、年龄和癌症之间的关系 http://t.cn/zO8CACs

Wed May 09 16:15:25 +0800 2012
String-graph based next-generation sequencing assemblers http://t.cn/zO8CANA

Wed May 09 03:49:52 +0800 2012
卡罗尔也太贱了！

Wed May 09 00:03:37 +0800 2012
String-graph based next-generation sequencing assembler | Bioops  http://t.cn/zO8cNFN

Tue May 08 22:48:41 +0800 2012
Nature: 染色体镶嵌性、年龄和癌症之间的关系 | Bioops  http://t.cn/zO85uRu  评论：人体细胞复制不可靠。年老的人更容易得癌症。50岁是个坎儿。生孩子要趁早。

Mon May 07 12:52:02 +0800 2012
难得的是来自媒体的微博。我转成图片，以防河蟹。

Mon May 07 12:33:53 +0800 2012
恭喜！,是地，你们都猜对了！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1724</wp:post_id>
		<wp:post_date>2012-06-22 10:17:52</wp:post_date>
		<wp:post_date_gmt>2012-06-22 14:17:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>weibo-archive-05062012-06212012</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="weibo"><![CDATA[Weibo]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[338]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_179e7a4adafab742ade7d18c5ad1a462</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0c7d59f22090a20cd387a007f06db34c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Revolution R Enterprise</title>
		<link>http://128.192.66.53/wordpress/?p=1736</link>
		<pubDate>Tue, 17 Jul 2012 15:16:18 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1736</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.revolutionanalytics.com/products/enterprise-performance.php" target="_blank">http://www.revolutionanalytics.com/products/enterprise-performance.php</a>

<a href="http://www.revolutionanalytics.com/products/revolution-r.php" target="_blank">DOWNLOAD</a>
<h2><strong>NEED MORE SPEED?</strong></h2>
Benchmarks show Revolution R Enterprise is significantly faster than open source R for many real-world computations. Linked with high-performance multi-threaded math libraries, Revolution R Enterprise automatically reduces computation times when using multi-core and multi-processor hardware.
<div>

Quick Links:
<ul>
	<li><a href="http://www.revolutionanalytics.com/why-revolution-r/benchmarks.php">Revolutionary Performance — Speed Up Your Performance with Revolution R!</a></li>
	<li><a href="http://info.revolutionanalytics.com/bigdata.html">Revolution R Enterprise 'Big Data' Benchmarks Whitepaper</a></li>
</ul>
</div>
<h2>Take immediate advantage of:</h2>
<ul>
	<li>Significant speed enhancements over open source R.</li>
	<li>64-Bit Scalability: Analyze larger data sets on 64-bit Windows and Linux systems.</li>
	<li>Parallel Processing Power: Reduce computation time for simulations, optimizations, segmented data analysis and more.</li>
</ul>
<h2>Revolution R 5.0 Performance Benchmarks</h2>
The benchmarks on this page demonstrate the performance of Revolution R 6.0 compared to the base version of R-2.14.2, available from<a href="http://www.r-project.org/"> the R Project</a>. The test system was an Intel® Xeon® Processor X3440 (2.53 GHz) with 8GB System RAM running 32-bit Windows Server 2008 R2 SP1.

One of the differences between Revolution R products and base R is the ability to leverage multithreading and processor capabilities on all x86 platforms to increase performance. Thus, the more cores available to Revolution R, the higher your performance for many operations.

Revolution Analytics has created these tests to simulate common real-world computations.
<table width="100%" border="0" cellspacing="1" cellpadding="5">
<tbody>
<tr>
<td bgcolor="#E9E9E9"></td>
<td bgcolor="#CCDDFF"><strong>Base R 2.14.2</strong></td>
<td bgcolor="#FFD9B3"><strong>Revolution R (1-core)</strong></td>
<td bgcolor="#FFAC75"><strong>Revolution R (4-core)</strong></td>
<td bgcolor="#E9E9E9"><strong>Speedup (4 core)</strong></td>
</tr>
<tr>
<td bgcolor="#DDDDDD">Matrix Multiply</td>
<td bgcolor="#B9CFFF">175.4 sec</td>
<td bgcolor="#FFC58A">28.9 sec</td>
<td bgcolor="#FF9751">9.3 sec</td>
<td bgcolor="#DDDDDD">17.9x</td>
</tr>
<tr>
<td bgcolor="#DDDDDD">Cholesky Factorization</td>
<td bgcolor="#B9CFFF">25.5 sec</td>
<td bgcolor="#FFC58A">4.6 sec</td>
<td bgcolor="#FF9751">1.3 sec</td>
<td bgcolor="#DDDDDD">18.7x</td>
</tr>
<tr>
<td bgcolor="#DDDDDD">Singular Value Decomposition</td>
<td bgcolor="#B9CFFF">58.7 sec</td>
<td bgcolor="#FFC58A">16.8 sec</td>
<td bgcolor="#FF9751">7.2 sec</td>
<td bgcolor="#DDDDDD">7.1x</td>
</tr>
<tr>
<td bgcolor="#DDDDDD">Principal Components Analysis</td>
<td bgcolor="#B9CFFF">228.4 sec</td>
<td bgcolor="#FFC58A">50.8 sec</td>
<td bgcolor="#FF9751">19.4 sec</td>
<td bgcolor="#DDDDDD">10.8x</td>
</tr>
<tr>
<td bgcolor="#DDDDDD">Linear Discriminant Analysis</td>
<td bgcolor="#B9CFFF">189.1 sec</td>
<td bgcolor="#FFC58A">73.7 sec</td>
<td bgcolor="#FF9751">52.3 sec</td>
<td bgcolor="#DDDDDD">2.6x</td>
</tr>
</tbody>
</table>
Speedup = Slower time / Faster Time - 1

More information:
<ul>
	<li><a href="http://www.revolutionanalytics.com/why-revolution-r/benchmarks.php">Additional benchmarks and details</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1736</wp:post_id>
		<wp:post_date>2012-07-17 11:16:18</wp:post_date>
		<wp:post_date_gmt>2012-07-17 15:16:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>revolution-r-enterprise</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cluster"><![CDATA[Cluster]]></category>
		<category domain="post_tag" nicename="high-performance-computing"><![CDATA[High-performance computing]]></category>
		<category domain="post_tag" nicename="parallel"><![CDATA[Parallel]]></category>
		<category domain="category" nicename="r"><![CDATA[R]]></category>
		<category domain="post_tag" nicename="r"><![CDATA[R]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[180]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tools for cross-species biological network comparison</title>
		<link>http://128.192.66.53/wordpress/?p=1747</link>
		<pubDate>Mon, 23 Jul 2012 21:01:22 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1747</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>GraphAlignment</strong>: GraphAlignment is an extension package for the R programming environment which provides functions for finding an alignment between two networks based on link and node similarity scores. This package implements the Bayesian scoring methods and the alignment algorithm introduced in the paper J. Berg and M. Lässig, <a href="http://www.pnas.org/cgi/content/full/103/29/10967">"Cross-species analysis of biological networks by Bayesian alignment"</a>, PNAS 103 (29), 10967-10972 (2006). Documentation and installation guide are available <a href="http://www.thp.uni-koeln.de/~berg/GraphAlignment/" target="_blank">here</a>.

<strong>PathBLAST</strong>: PathBLAST is a network alignment and search tool for comparing protein interaction networks across species to identify protein pathways and complexes that have been conserved by evolution. PathBLAST is now available at <a href="http://www.pathblast.org/" target="_blank">http://www.pathblast.org/</a> as a web-based query. (<a href="http://www.pathblast.org/docs/publications.html" target="_blank">publications</a>)

<strong>IsoRankN</strong>: IsoRankN (IsoRank-Nibble) is a global multiple-network alignment tool based on spectral clustering on the induced graph of pairwise alignment scores. IsoRankN outperforms existing algorithms for global network alignment in coverage and consistency on multiple alignments of the five available eukaryotic networks. Being based on spectral methods, IsoRankN is both error-tolerant and computationally efficient. More information is available <a href="http://groups.csail.mit.edu/cb/mna/" target="_blank">here</a>.

<strong>NetworkBLAST &amp; NetworkBLAST-M</strong>: NetworkBLAST analyzes protein interaction networks across species to infer protein complexes that are conserved in evolution.
For comparing multiple networks use <a href="http://www.cs.tau.ac.il/%7Ebnet/License-nbm.htm">Networkblast-M</a>; for an executable of NetworkBLAST please refer to <a href="http://www.cs.tau.ac.il/%7Ebnet/License.htm">here</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1747</wp:post_id>
		<wp:post_date>2012-07-23 17:01:22</wp:post_date>
		<wp:post_date_gmt>2012-07-23 21:01:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>tools-for-cross-species-biological-network-comparison</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="comparative-genomics"><![CDATA[Comparative Genomics]]></category>
		<category domain="post_tag" nicename="network"><![CDATA[Network]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<category domain="category" nicename="systems-biology"><![CDATA[Systems Biology]]></category>
		<category domain="post_tag" nicename="systems-biology"><![CDATA[Systems Biology]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[245]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[tools-for-cross-species-comparison-of-biological-networks]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[genome] The genome of melon (Cucumis melo L.)</title>
		<link>http://128.192.66.53/wordpress/?p=1753</link>
		<pubDate>Tue, 24 Jul 2012 17:11:32 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1753</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.pnas.org/content/109/29/11872.short" target="_blank">http://www.pnas.org/content/109/29/11872.short</a>
<h2>Abstract</h2>
We report the genome sequence of melon, an important horticultural crop worldwide. We assembled 375 Mb of the double-haploid line DHL92, representing 83.3% of the estimated melon genome. We predicted 27,427 protein-coding genes, which we analyzed by reconstructing 22,218 phylogenetic trees, allowing mapping of the orthology and paralogy relationships of sequenced plant genomes. We observed the absence of recent whole-genome duplications in the melon lineage since the ancient eudicot triplication, and our data suggest that transposon amplification may in part explain the increased size of the melon genome compared with the close relative cucumber. A low number of nucleotide-binding site–leucine-rich repeat disease resistance genes were annotated, suggesting the existence of specific defense mechanisms in this species. The DHL92 genome was compared with that of its parental lines allowing the quantification of sequence variability in the species. The use of the genome sequence in future investigations will facilitate the understanding of evolution of cucurbits and the improvement of breeding strategies.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1753</wp:post_id>
		<wp:post_date>2012-07-24 13:11:32</wp:post_date>
		<wp:post_date_gmt>2012-07-24 17:11:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-the-genome-of-melon-cucumis-melo-l</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[191]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[paper] A Whole-Cell Computational Model Predicts Phenotype from Genotype</title>
		<link>http://128.192.66.53/wordpress/?p=1755</link>
		<pubDate>Tue, 24 Jul 2012 17:15:49 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1755</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.cell.com/abstract/S0092-8674%2812%2900776-3" target="_blank">http://www.cell.com/abstract/S0092-8674%2812%2900776-3</a>
<h2>Highlights</h2>
<ul>
	<li>An entire organism is modeled in terms of its molecular components</li>
	<li>Complex phenotypes can be modeled by integrating cell processes into a single model</li>
	<li>Unobserved cellular behaviors are predicted by model of <em>M. genitalium</em></li>
	<li>New biological processes and parameters are predicted by model of <em>M</em>. <em>genitalium</em></li>
</ul>
<h2>Summary</h2>
Understanding how complex phenotypes arise from individual molecules and their interactions is a primary challenge in biology that computational approaches are poised to tackle. We report a whole-cell computational model of the life cycle of the human pathogen <em>Mycoplasma genitalium</em> that includes all of its molecular components and their interactions. An integrative approach to modeling that combines diverse mathematics enabled the simultaneous inclusion of fundamentally different cellular processes and experimental measurements. Our whole-cell model accounts for all annotated gene functions and was validated against a broad range of data. The model provides insights into many previously unobserved cellular behaviors, including in vivo rates of protein-DNA association and an inverse relationship between the durations of DNA replication initiation and replication. In addition, experimental analysis directed by model predictions identified previously undetected kinetic parameters and biological functions. We conclude that comprehensive whole-cell models can be used to facilitate biological discovery.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1755</wp:post_id>
		<wp:post_date>2012-07-24 13:15:49</wp:post_date>
		<wp:post_date_gmt>2012-07-24 17:15:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-a-whole-cell-computational-model-predicts-phenotype-from-genotype</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="modeling"><![CDATA[Modeling]]></category>
		<category domain="post_tag" nicename="network"><![CDATA[Network]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="category" nicename="systems-biology"><![CDATA[Systems Biology]]></category>
		<category domain="post_tag" nicename="systems-biology"><![CDATA[Systems Biology]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[413]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1620</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.211.251.24</wp:comment_author_IP>
			<wp:comment_date>2012-07-24 13:26:20</wp:comment_date>
			<wp:comment_date_gmt>2012-07-24 17:26:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这篇文章是我入行生物信息以来就有的梦想！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1343150780.1";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[genome] Insights into salt tolerance from the genome of Thellungiella salsuginea</title>
		<link>http://128.192.66.53/wordpress/?p=1799</link>
		<pubDate>Wed, 25 Jul 2012 02:19:42 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1799</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.pnas.org/content/109/30/12219.short" target="_blank">http://www.pnas.org/content/109/30/12219.short</a>
<h2>Abstract</h2>
<em>Thellungiella salsuginea,</em> a close relative of <em>Arabidopsis</em>, represents an extremophile model for abiotic stress tolerance studies. We present the draft sequence of the <em>T. salsuginea</em> genome, assembled based on ∼134-fold coverage to seven chromosomes with a coding capacity of at least 28,457 genes. This genome provides resources and evidence about the nature of defense mechanisms constituting the genetic basis underlying plant abiotic stress tolerance. Comparative genomics and experimental analyses identified genes related to cation transport, abscisic acid signaling, and wax production prominent in <em>T. salsuginea</em> as possible contributors to its success in stressful environments.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1799</wp:post_id>
		<wp:post_date>2012-07-24 22:19:42</wp:post_date>
		<wp:post_date_gmt>2012-07-25 02:19:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-insights-into-salt-tolerance-from-the-genome-of-thellungiella-salsuginea</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[255]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>transfering to github</title>
		<link>http://128.192.66.53/wordpress/?p=1804</link>
		<pubDate>Thu, 26 Jul 2012 12:39:16 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1804</guid>
		<description></description>
		<content:encoded><![CDATA[受<a href="http://kyle.xlau.org/posts/blogging-like-a-hacker.html">《像黑客一样写博客》</a>的启发和<a href="http://www.soimort.org/tech-blog/2011/11/19/introduction-to-jekyll_zh.html">《像黑客一样写博客——Jekyll入门》</a>的技术指导，打算把<a href="http://128.192.66.53/wordpress/">bioops</a>迁移到<a href="http://github.com/">github</a>上。不怎么懂github和jekyll。搞了半天，基本上follow <a href="http://jekyllbootstrap.com/">jekyllbootstrap</a>上的文档。模版用<a href="http://themes.jekyllbootstrap.com/preview/mark-reid/">make-reid</a>；代码高亮用<a href="https://code.google.com/p/google-code-prettify/">google-code-prettify</a>；参照<a href="http://wowubuntu.com/markdown/">Markdown语法说明</a>开始写博客。暂不打算整站迁移，先练练手。

<strong>补充：</strong>github+jekyll太nerdy了。现在的处理办法是两个都保留，但github只发原创，欢迎<a href="http://baihezimu.github.com/" target="_blank">访问</a>（<a href="http://baihezimu.github.com/atom.xml" target="_blank">RSS</a>）。

大部分时间在折腾这个代码高亮，走了很多弯路，现将最后简易可行的方法记录如下：
<ol>
	<li>在<code>/_includes/themes/mark-reid/default.html</code>中的<code>&lt;/head&gt;</code>前加入</li>
<script src="https://gist.github.com/bioops/4946613.js"></script>
	<li>在<code>&lt;body&gt;</code> tag中加入<code>onload="prettyPrint()"</code></li>
	<li>在代码前后加<code>&lt;pre class="prettyprint"&gt;...&lt;/pre&gt;</code>标识高亮</li>
	<li>貌似对javascript代码无效，总是出错。所以用<a href="https://gist.github.com">gist</a>代替（如上所示）。</li>
</ol>
看<a href="http://baihezimu.github.com/" target="_blank">效果</a>。

另外，按照<a href="https://github.com/mojombo/jekyll/wiki/Blog-Migrations">jekyll wiki</a>上迁移wordpress文档的时候在安装mysqlplus会报错
<pre>ERROR:  Error installing mysqlplus:
    ERROR: Failed to build gem native extension.

        /usr/bin/ruby1.8 extconf.rb
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lm... yes
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lz... yes
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lsocket... no
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lnsl... yes
checking for mysql_query() in -lmysqlclient... no
checking for main() in -lmygcc... no
checking for mysql_query() in -lmysqlclient... no
*** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of
necessary libraries and/or headers.  Check the mkmf.log file for more
details.  You may need configuration options.

Provided configuration options:
    --with-opt-dir
    --without-opt-dir
    --with-opt-include
    --without-opt-include=${opt-dir}/include
    --with-opt-lib
    --without-opt-lib=${opt-dir}/lib
    --with-make-prog
    --without-make-prog
    --srcdir=.
    --curdir
    --ruby=/usr/bin/ruby1.8
    --with-mysql-config
    --without-mysql-config
    --with-mysql-dir
    --without-mysql-dir
    --with-mysql-include
    --without-mysql-include=${mysql-dir}/include
    --with-mysql-lib
    --without-mysql-lib=${mysql-dir}/lib
    --with-mysqlclientlib
    --without-mysqlclientlib
    --with-mlib
    --without-mlib
    --with-mysqlclientlib
    --without-mysqlclientlib
    --with-zlib
    --without-zlib
    --with-mysqlclientlib
    --without-mysqlclientlib
    --with-socketlib
    --without-socketlib
    --with-mysqlclientlib
    --without-mysqlclientlib
    --with-nsllib
    --without-nsllib
    --with-mysqlclientlib
    --without-mysqlclientlib
    --with-mygcclib
    --without-mygcclib
    --with-mysqlclientlib
    --without-mysqlclientlib

Gem files will remain installed in /var/lib/gems/1.8/gems/mysqlplus-0.1.2 for inspection.
Results logged to /var/lib/gems/1.8/gems/mysqlplus-0.1.2/ext/gem_make.out</pre>
解决办法参照<a href="https://github.com/lorensr/mysqlplus/tree/">https://github.com/lorensr/mysqlplus/tree/</a>及自己琢磨：
<pre>sudo apt-get install libmysql++-dev
sudo gem install hpricot</pre>
转换成功后生成的是html文件，并且换行符显示的是^M（dos下的回车符），为了让转换后的文章正确分段，可先将html后缀变成md，然后批量去掉^M
<pre>rename -v s/\.html/\.md/ *
dos2unix *.md</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1804</wp:post_id>
		<wp:post_date>2012-07-26 08:39:16</wp:post_date>
		<wp:post_date_gmt>2012-07-26 12:39:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>transfering-to-github</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[312]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[genome] The banana (Musa acuminata) genome and the evolution of monocotyledonous plants</title>
		<link>http://128.192.66.53/wordpress/?p=1825</link>
		<pubDate>Thu, 09 Aug 2012 14:32:44 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1825</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dx.doi.org/10.1038/nature11241" target="_blank">http://dx.doi.org/10.1038/nature11241</a>

Bananas (<em>Musa spp.</em>), including dessert and cooking types, are giant perennial monocotyledonous herbs of the order Zingiberales, a sister group to the well-studied Poales, which include cereals. Bananas are vital for food security in many tropical and subtropical countries and the most popular fruit in industrialized countries1. The Musa domestication process started some 7,000 years ago in Southeast Asia. It involved hybridizations between diverse species and subspecies, fostered by human migrations2, and selection of diploid and triploid seedless, parthenocarpic hybrids thereafter widely dispersed by vegetative propagation. Half of the current production relies on somaclones derived from a single triploid genotype (Cavendish)1. Pests and diseases have gradually become adapted, representing an imminent danger for global banana production3, 4. Here we describe the draft sequence of the 523-megabase genome of a <em>Musa acuminata</em> doubled-haploid genotype, providing a crucial stepping-stone for genetic improvement of banana. We detected three rounds of whole-genome duplications in the Musa lineage, independently of those previously described in the Poales lineage and the one we detected in the Arecales lineage. This first monocotyledon high-continuity whole-genome sequence reported outside Poales represents an essential bridge for comparative genome analysis in plants. As such, it clarifies commelinid-monocotyledon phylogenetic relationships, reveals Poaceae-specific features and has led to the discovery of conserved non-coding sequences predating monocotyledon–eudicotyledon divergence.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1825</wp:post_id>
		<wp:post_date>2012-08-09 10:32:44</wp:post_date>
		<wp:post_date_gmt>2012-08-09 14:32:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-banana-genome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[284]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Next-generation sequencing quality control tools</title>
		<link>http://128.192.66.53/wordpress/?p=1829</link>
		<pubDate>Wed, 22 Aug 2012 02:56:21 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1829</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://hannonlab.cshl.edu/fastx_toolkit/" target="_blank"><strong>FASTX-Toolkit</strong></a>: The FASTX-Toolkit is a collection of command line tools for Short-Reads FASTA/ FASTQ files preprocessing, including:
<ul>
	<li>FASTQ-to-FASTA converter
<div>Convert FASTQ files to FASTA files.</div></li>
	<li>FASTQ Information
<div>Chart Quality Statistics and Nucleotide Distribution</div></li>
	<li>FASTQ/A Collapser
<div>Collapsing identical sequences in a FASTQ/A file into a single sequence (while maintaining reads counts)</div></li>
	<li>FASTQ/A Trimmer
<div>Shortening reads in a FASTQ or FASTQ files (removing barcodes or noise).</div></li>
	<li>FASTQ/A Renamer
<div>Renames the sequence identifiers in FASTQ/A file.</div></li>
	<li>FASTQ/A Clipper
<div>Removing sequencing adapters / linkers</div></li>
	<li>FASTQ/A Reverse-Complement
<div>Producing the Reverse-complement of each sequence in a FASTQ/FASTA file.</div></li>
	<li>FASTQ/A Barcode splitter
<div>Splitting a FASTQ/FASTA files containning multiple samples</div></li>
	<li>FASTA Formatter
<div>changes the width of sequences line in a FASTA file</div></li>
	<li>FASTA Nucleotide Changer
<div>Convets FASTA sequences from/to RNA/DNA</div></li>
	<li>FASTQ Quality Filter
<div>Filters sequences based on quality</div></li>
	<li>FASTQ Quality Trimmer
<div>Trims (cuts) sequences based on quality</div></li>
	<li>FASTQ Masker
<div>Masks nucleotides with 'N' (or other character) based on quality</div></li>
</ul>
<strong><a href="https://main.g2.bx.psu.edu/" target="_blank">Galaxy NGS QC and manipulation tools</a> (<a href="http://bioinformatics.oxfordjournals.org/content/26/14/1783.short" target="_blank">citation</a>)</strong>: Galaxy provides a tool suite that functions on all of the commonly known FASTQ format variants and provides a pipeline for manipulating next generation sequencing data taken from a sequencing machine all the way through the quality filtering steps.

<strong><a href="http://brainarray.mbni.med.umich.edu/brainarray/ngsqc/" target="_blank">NGSQC</a> (<a href="http://www.biomedcentral.com/1471-2164/11/S4/S7/" target="_blank">citation</a>)</strong>:The NGSQC pipeline provides a set of novel quality control measures for quickly detecting a wide variety of quality issues in deep sequencing data derived from two dimensional surfaces, regardless of the assay technology used. It also enables researchers to determine whether sequencing data related to their most interesting biological discoveries are caused by sequencing quality issues. NGSQC can help to ensure that biological conclusions, in particular those based on relatively rare sequences, are not caused by low quality sequencing.

<strong><a href="http://www.nipgr.res.in/ngsqctoolkit.html" target="_blank">NGS QC Toolkit</a> (<a href="http://www.plosone.org/article/info:doi/10.1371/journal.pone.0030619#abstract0" target="_blank">citation</a>)</strong>: A toolkit for the quality control (QC) of next generation sequencing (NGS) data. The toolkit comprises of user-friendly stand alone tools for quality control of the sequence data generated using Illumina and Roche 454 platforms with detailed results in the form of tables and graphs, and filtering of high-quality sequence data. It also includes few other tools, which are helpful in NGS data quality control and analysis.

<strong><a href="http://prinseq.sourceforge.net/" target="_blank">PRINSEQ</a> (<a href="http://bioinformatics.oxfordjournals.org/content/27/6/863" target="_blank">citation</a>)</strong>: PRINSEQ can be used to filter, reformat, or trim your genomic and metagenomic sequence data. It generates summary statistics of your sequences in graphical and tabular format. It is easily configurable and provides a user-friendly interface.

<strong><a href="http://solexaqa.sourceforge.net/" target="_blank">SolexaQA</a> (<a href="http://www.biomedcentral.com/1471-2105/11/485" target="_blank">citation</a>)</strong>: SolexaQA is a Perl-based software package that calculates quality statistics and creates visual representations of data quality from FASTQ files generated by Illumina second-generation sequencing technology (“Solexa”).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1829</wp:post_id>
		<wp:post_date>2012-08-21 22:56:21</wp:post_date>
		<wp:post_date_gmt>2012-08-22 02:56:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ngs-qc-tools</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="qc"><![CDATA[QC]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[796]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[genome] The draft genome of a diploid cotton Gossypium raimondii</title>
		<link>http://128.192.66.53/wordpress/?p=1839</link>
		<pubDate>Mon, 27 Aug 2012 01:21:51 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1839</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dx.doi.org/10.1038/ng.2371" target="_blank">http://dx.doi.org/10.1038/ng.2371</a>

We have sequenced and assembled a draft genome of <em>G. raimondii</em>, whose progenitor is the putative contributor of the D subgenome to the economically important fiber-producing cotton species <em>Gossypium hirsutum</em> and <em>Gossypium barbadense</em>. Over 73% of the assembled sequences were anchored on 13 <em>G. raimondii</em> chromosomes. The genome contains 40,976 protein-coding genes, with 92.2% of these further confirmed by transcriptome data. Evidence of the hexaploidization event shared by the eudicots as well as of a cotton-specific whole-genome duplication approximately 13–20 million years ago was observed. We identified 2,355 syntenic blocks in the <em>G. raimondii</em> genome, and we found that approximately 40% of the paralogous genes were present in more than 1 block, which suggests that this genome has undergone substantial chromosome rearrangement during its evolution. Cotton, and probably Theobroma cacao, are the only sequenced plant species that possess an authentic CDN1 gene family for gossypol biosynthesis, as revealed by phylogenetic analysis.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1839</wp:post_id>
		<wp:post_date>2012-08-26 21:21:51</wp:post_date>
		<wp:post_date_gmt>2012-08-27 01:21:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-cotton-genome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[510]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[genome] The oyster genome reveals stress adaptation and complexity of shell formation</title>
		<link>http://128.192.66.53/wordpress/?p=1851</link>
		<pubDate>Wed, 03 Oct 2012 19:34:20 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1851</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://dx.doi.org/10.1038/nature11413" target="_blank">http://dx.doi.org/10.1038/nature11413</a>

The Pacific oyster Crassostrea gigas belongs to one of the most species-rich but genomically poorly explored phyla, the Mollusca. Here we report the sequencing and assembly of the oyster genome using short reads and a fosmid-pooling strategy, along with transcriptomes of development and stress response and the proteome of the shell. The oyster genome is highly polymorphic and rich in repetitive sequences, with some transposable elements still actively shaping variation. Transcriptome studies reveal an extensive set of genes responding to environmental stress. The expansion of genes coding for heat shock protein 70 and inhibitors of apoptosis is probably central to the oyster’s adaptation to sessile life in the highly stressful intertidal zone. Our analyses also show that shell formation in molluscs is more complex than currently understood and involves extensive participation of cells and their exosomes. The oyster genome sequence fills a void in our understanding of the Lophotrochozoa.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1851</wp:post_id>
		<wp:post_date>2012-10-03 15:34:20</wp:post_date>
		<wp:post_date_gmt>2012-10-03 19:34:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paperoyster-genome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="post_tag" nicename="bgi"><![CDATA[BGI]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[317]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[oyster-genome]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>关于砖家叫兽和科研创新</title>
		<link>http://128.192.66.53/wordpress/?p=1863</link>
		<pubDate>Mon, 19 Nov 2012 03:36:59 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1863</guid>
		<description></description>
		<content:encoded><![CDATA[<sub>（注：这是几天前发在qq空间上的，以评论的方式，想一句写一句。在这里只做转发，保持原貌，只是少了时间戳。）</sub>

作为一个可能的下一代砖家叫兽，不得不考虑什么创新什么是科研这个早就被嚼烂的问题，旧瓶装新酒才能忽悠来名和利。

。。。。。。

看评论]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1863</wp:post_id>
		<wp:post_date>2012-11-18 22:36:59</wp:post_date>
		<wp:post_date_gmt>2012-11-19 03:36:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>stream-of-consciousness-creativity-research</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="stupid"><![CDATA[Stupid]]></category>
		<category domain="post_tag" nicename="weibo"><![CDATA[Weibo]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1090]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[yishiliu-chuangxin]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1703</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:37:18</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:37:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[“意识流”来了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296238.29";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1704</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:37:55</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:37:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[前些天饶毅说华大不是在做科研，说王俊等人没有自己的idea不是科学家，买别人的测序仪和别人合作搞大项目然后在nature、science和cell灌水。什么是创新？
从一定程度上说，测序仪不是自己的，生物信息学软件虽然是自己开发的，但算法都是别人提出来的，侧一个物种的基因组，是不是创新？不是：生物界的富士康。是：别人没测过，且此物种很重要（比如尼安德特人的基因组，人想知道自己是怎么进化来的，比如大豆基因组，为作物育种和理解根瘤机理提供强大支持，对于某一物种，有基因组和没有基因组，研究课题会非常不一样。）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1353296275.5";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1705</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:38:04</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:38:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[前段时间在cell上发的测肿瘤单细胞的基因组，是不是创新？不是：有钱+测序仪谁都会干。是：揭示肿瘤发生演化机理，发现相关突变基因，为诊断和治疗提供依据。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296284.73";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1706</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:38:14</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:38:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[不说华大，说Craig Venter，算是科学界的狂人了吧，天马行空放荡不羁。上月说要把测序仪放在火星上，来看火星上有没有生命迹象，这是创新？？？
还有，他的手下用计算机完整地模拟了一支原体的生命过程。（我决定转行生物信息时，最重要的一个动力就是计算机模拟生命过程。4年之后终于有人做出了一个像样的东西。可喜可贺！） 但是，这是创新么？有人会说：不是，他们的模型理论都是别人的，实验数据基本也是别人的，只不过把整个细胞活动分成几个部分（module），然后每一个部分分别用已有的模型去模拟学习预测，然后把各个部分联系起来。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296294.53";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1707</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:38:22</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:38:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好吧。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296302.88";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1708</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:38:30</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:38:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[黑梅球王“没有在其他多个球队和联赛证明自己”，黑吕奉先“三姓家奴”。欲加之罪，何患无辞。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296310.95";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1709</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:38:52</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:38:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[也许可以折衷一些，量化一下“创新性”吧，简单的就以期刊的影响因子来算吧。那就又陷入了另外一个怪圈：发文章才有钱，有钱才能做东西发文章，一切都是文章。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296332.33";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1710</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:39:01</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:39:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[现在在小部分人中流行preprint，不发期刊，没有影响因子，发在arXiv上甚至自己的博客上，靠口口相传增加影响力。太佩服这些人了！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296341.67";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1711</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:39:11</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:39:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[再说说自己。做非模式植物基因组。跟其他做模式动植物、人以及相当一部分微生物的根本没法比。方法技术几乎全是从模式动植物来的。其实他们也好不到哪去，生物大数据时代用到的大量统计学模型也没啥新东西，不是Fisher的就是Bayes的。
炮灰+分母,够悲催。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296351.92";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1712</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:39:20</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:39:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[“科研”听着光鲜，就是一个普通的工作：基于前人大量的工作基础，自己做一些重复性的工作外加微小的新东西。我不大愿意背负这些沉重的“创新”包袱和负面的情绪。省去这些假大空，做一点自己喜欢的东西。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296360.17";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1713</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:39:32</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:39:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[昨天写了个perl脚本，把几个软件和相关参数整合到一起，以后跑起来方便；
今天开始接受committee member的建议，看了几篇关于nodulation的paper，稍微修整了一下原来proposal里的一些想法。
明天可能就是上课，学习一下某个流行的统计学模型在生物数据上的应用，然后就是写作业，晚上饭局。
后天的计划，没定，明天再说吧。
零点36了，已经到了“明天了”，睡了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296372.95";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1714</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:39:41</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:39:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[有时候觉得写网络日志是个很sb的事情，尤其是在看别人日志的时候 :-(
又有时候不吐不快。
（画外音：这个sb，又在装逼，no one cares !）]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296381.47";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1715</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:39:59</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:39:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[接着7楼的话题说。其实我自己心里还是有一个创新与灌水的红线的。如果按文章发表的期刊来说，典型的“创新”：Nature，部分nature子刊如nature genetics，biotech，mol sys bio，Science，Cell，cell子刊，所有冷泉港出版的。典型的灌水：部分plos系列，相当一部分牛津出版社的，大部分bmc系列，绝大部分wiley系列，几乎所有springer系列。
只说自己的领域，并向躺枪的道歉。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296400.01";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1716</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:41:11</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:41:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[“2012年XXX专业2011级博士生XX以第一作者发表SCI 文章11篇，总影响因子达39.1。”。
。。。。。。（省略一千酸文）
这几乎颠覆了我的三观，也许真像老罗说的“只有偏执狂才能生存”。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296471.27";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1717</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:41:20</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:41:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[越来越喜欢这种方式来写日志了。同样的内容都可以发在回复里。不用像一般博客那样整理思路，也没有微博那么零碎（虽然可以用tag分类）。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296480.29";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1718</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:41:29</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:41:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[那就补上一个以前说过的：”虽然两年前就在国内上完了所谓的博士课程，但现在越发觉得，那时根本达不到博士应有的学术素养。知识的匮乏倒是其次，缺少将已有知识应用于实际问题、对实际问题进行抽象转化的能力才真是致命的缺陷。”]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296489.22";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1719</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:41:36</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:41:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[这种想法起源于看到的很多算法软件应用于genomics上的文章。一般解决一个新问题最初始的算法非常简单，不需要很高深的统计或数学知识。这些人牛就牛在把一个看似很复杂的问题转化成很简单的模型。至于后人用的各种fancy的算法号称比前人的好很多，多数也只是跟跟风发个文章。虽然以前也搞过数学建模，做的就是把实际问题抽象化。但那个时候（当然现在也是），就是先学习大量的算法以及算法应用的例子，然后把数模竞赛题和算法一一对应起来。这种长久以来形成的“做题式”的思路是创新的最大桎梏。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296496.83";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1720</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.66.197</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:41:43</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:41:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[总觉得应该学习，不断的学习，才能“厚积薄发”。知识的积累本身就是很痛苦的过程，更痛苦的是学了这么多跟白痴没什么两样。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296503.94";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1721</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>198.137.20.120</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:44:09</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:44:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[“教育就是把所学的所有知识都忘记后剩下的东西。”]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296649.79";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1722</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>198.137.20.120</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:44:21</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:44:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[“福利”来了。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296661.34";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1723</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>198.137.20.120</wp:comment_author_IP>
			<wp:comment_date>2012-11-18 22:44:34</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 03:44:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[忍受我自说自话到现在的人有福了。
分享一些博客，一窥paper展示不出来的思维过程和模式。
http://ivory.idyll.org/blog/
http://www.homolog.us/blogs/
http://highlyscalable.wordpress.com/
http://genomeinformatician.blogspot.com/
http://bcbio.wordpress.com/
http://www.genomesunzipped.org/
http://www.homolog.us/blogs/2012/07/27/how-to-stay-current-in-bioinformaticsgenomics/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353296674.07";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1727</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>70.33.90.138</wp:comment_author_IP>
			<wp:comment_date>2012-11-19 01:14:56</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 06:14:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[最近一起“科研苗子逃离科研”事件引发了大讨论。
起因：一“很牛的”博士要去当中学教师，导师发文惋惜：
http://blog.sciencenet.cn/blog-660333-632151.html
然后学生自己回应：
http://blog.sciencenet.cn/blog-662228-633685.html
后来的大讨论：
http://news.sciencenet.cn/news/sub26.aspx?id=1263]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1353305696.24";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[genome] the pig genome</title>
		<link>http://128.192.66.53/wordpress/?p=1867</link>
		<pubDate>Mon, 19 Nov 2012 03:55:54 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1867</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Analyses of pig genomes provide insight into porcine demography and evolution</h1>
Nature 491, 7424 (2012). <a href="http://dx.doi.org/10.1038/nature11622" target="_blank">doi:10.1038/nature11622</a>

For 10,000 years pigs and humans have shared a close and complex relationship. From domestication to modern breeding practices, humans have shaped the genomes of domestic pigs. Here we present the assembly and analysis of the genome sequence of a female domestic Duroc pig (<em>Sus scrofa</em>) and a comparison with the genomes of wild and domestic pigs from Europe and Asia. Wild pigs emerged in South East Asia and subsequently spread across Eurasia. Our results reveal a deep phylogenetic split between European and Asian wild boars ~1 million years ago, and a selective sweep analysis indicates selection on genes involved in RNA processing and regulation. Genes associated with immune response and olfaction exhibit fast evolution. Pigs have the largest repertoire of functional olfactory receptor genes, reflecting the importance of smell in this scavenging animal. The pig genome sequence provides an important resource for further improvements of this important livestock species, and our identification of many putative disease-causing variants extends the potential of the pig as a biomedical model.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1867</wp:post_id>
		<wp:post_date>2012-11-18 22:55:54</wp:post_date>
		<wp:post_date_gmt>2012-11-19 03:55:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-pig-genome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="post_tag" nicename="bgi"><![CDATA[BGI]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[228]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[paper-pig-genom]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Painful experience on building local UCSC genome browser</title>
		<link>http://128.192.66.53/wordpress/?p=1882</link>
		<pubDate>Thu, 22 Nov 2012 01:15:17 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1882</guid>
		<description></description>
		<content:encoded><![CDATA[I want to install a UCSC genome browser on my ubuntu workstation, to integrate and display the genomes , mostly plant genomes, with related annotations and NGS data, e.g. RNA-seq, methylation, SNPs, synteny, genome alignment, and etc.. There are also <a href="http://genomewiki.ucsc.edu/index.php/Other_genome_browsers" target="_blank">other genome browsers</a>, but UCSC is my favorite and can meet my needs.

I spent a couple of workdays building from sources and adding custom genomes. The browser is based on mysql and apache which I don't know much about, so It's not surprising I encountered tons of problems. Thank google and other kind people who posted their experiences. I feel sorry that I cannot do the same thing as them, but at least I would like to share some resources and tips.

1) Read the <a href="http://genome-source.cse.ucsc.edu/gitweb/?p=kent.git;a=tree;f=src/product;hb=HEAD" target="_blank">README files</a> in the sources, and follow the instructions. (You'd better understand them.)

2) The <a href="http://genomewiki.ucsc.edu/index.php/Main_Page" target="_blank">wiki site</a> is very helpfull.

3) Other people's experiences. (<a href="http://bergmanlab.smith.man.ac.uk/?p=1111" target="_blank">1</a> and <a href="http://enotacoes.wordpress.com/2009/09/03/installing-a-minimal-ucsc-mirror-in-ubuntu-jaunty-64-bits/" target="_blank">2</a>)

4) If top bar is not showing, add the following code in apach2 conf file. (/etc/apache2/apache2.conf on my machine)
<script src="https://gist.github.com/bioops/4946649.js"></script>
5) Mysql loading local file issue in hgLOAD* scripts. I tried different solutions, but only one worked for me. I logged into mysql and run the loading command if the error appears.

6) Stop mysql before rsync mysql files from UCSC server.

7) Most mysql problems were caused by permission settings.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1882</wp:post_id>
		<wp:post_date>2012-11-21 20:15:17</wp:post_date>
		<wp:post_date_gmt>2012-11-22 01:15:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>local-ucsc-genome-browser</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="genome-browser"><![CDATA[Genome Browser]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="software"><![CDATA[Software]]></category>
		<category domain="post_tag" nicename="ucsc"><![CDATA[UCSC]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[205]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[genome] sweet orange and watermelon genomes</title>
		<link>http://128.192.66.53/wordpress/?p=1902</link>
		<pubDate>Mon, 26 Nov 2012 14:04:26 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1902</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>The draft genome of sweet orange (<em>Citrus sinensis</em>)</strong>
<a href="http://dx.doi.org/10.1038/ng.2472" target="_blank">http://dx.doi.org/10.1038/ng.2472</a>
Oranges are an important nutritional source for human health and have immense economic value. Here we present a comprehensive analysis of the draft genome of sweet orange (<em>Citrus sinensis</em>). The assembled sequence covers 87.3% of the estimated orange genome, which is relatively compact, as 20% is composed of repetitive elements. We predicted 29,445 protein-coding genes, half of which are in the heterozygous state. With additional sequencing of two more citrus species and comparative analyses of seven citrus genomes, we present evidence to suggest that sweet orange originated from a backcross hybrid between pummelo and mandarin. Focused analysis on genes involved in vitamin C metabolism showed that <em>GalUR</em>, encoding the rate-limiting enzyme of the galacturonate pathway, is significantly upregulated in orange fruit, and the recent expansion of this gene family may provide a genomic basis. This draft genome represents a valuable resource for understanding and improving many important citrus traits in the future.

<strong>The draft genome of watermelon (<em>Citrullus lanatus</em>) and resequencing of 20 diverse accessions</strong>
<a href="http://dx.doi.org/10.1038/ng.2470" target="_blank">http://dx.doi.org/10.1038/ng.2470</a>
Watermelon, <em>Citrullus lanatu</em>s, is an important cucurbit crop grown throughout the world. Here we report a high-quality draft genome sequence of the east Asia watermelon cultivar 97103 (2n = 2× = 22) containing 23,440 predicted protein-coding genes. Comparative genomics analysis provided an evolutionary scenario for the origin of the 11 watermelon chromosomes derived from a 7-chromosome paleohexaploid eudicot ancestor. Resequencing of 20 watermelon accessions representing three different <em>C. lanatus</em> subspecies produced numerous haplotypes and identified the extent of genetic diversity and population structure of watermelon germplasm. Genomic regions that were preferentially selected during domestication were identified. Many disease-resistance genes were also found to be lost during domestication. In addition, integrative genomic and transcriptomic analyses yielded important insights into aspects of phloem-based vascular signaling in common between watermelon and cucumber and identified genes crucial to valuable fruit-quality traits, including sugar accumulation and citrulline metabolism.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1902</wp:post_id>
		<wp:post_date>2012-11-26 09:04:26</wp:post_date>
		<wp:post_date_gmt>2012-11-26 14:04:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>orange-watermelon-genome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="orange"><![CDATA[Orange]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="watermelon"><![CDATA[Watermelon]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[229]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Get intron sizes from gff3 files using Perl</title>
		<link>http://128.192.66.53/wordpress/?p=1907</link>
		<pubDate>Wed, 28 Nov 2012 19:53:51 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1907</guid>
		<description></description>
		<content:encoded><![CDATA[Normally, there is no 'intron' feature in gff3 files, but the information can be obtained by calculating the interval sizes between CDS regions. Here I wrote a simple perl script for getting intron sizes from gff3 files. The script can print out each intron sizes, one gene per line. You can customize the script based on your gff3 files or demands.

PS: I rank the exon positions before calculating the intron size to avoid the +/- strand issues
<script src="https://gist.github.com/bioops/4946546.js"></script>
An example of gff3 file from soybean genome annotation:
<pre>##gff-version 3
Gm01    phytozome8_0    gene    51481   61502   .       -       .       ID=Glyma01g00270;Name=Glyma01g00270
Gm01    phytozome8_0    mRNA    51481   61502   .       -       .       ID=PAC:16242891;Name=Glyma01g00270.1;pacid=16242891;longest=1;Parent=Glyma01g00270
Gm01    phytozome8_0    CDS     61437   61502   .       -       0       ID=PAC:16242891.CDS.1;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     61167   61305   .       -       0       ID=PAC:16242891.CDS.2;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     60722   60780   .       -       2       ID=PAC:16242891.CDS.3;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     60339   60533   .       -       0       ID=PAC:16242891.CDS.4;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     59699   59814   .       -       0       ID=PAC:16242891.CDS.5;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     59420   59547   .       -       1       ID=PAC:16242891.CDS.6;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     59176   59284   .       -       2       ID=PAC:16242891.CDS.7;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     56878   56879   .       -       1       ID=PAC:16242891.CDS.8;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     55013   55069   .       -       2       ID=PAC:16242891.CDS.9;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     54390   54500   .       -       2       ID=PAC:16242891.CDS.10;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     54218   54320   .       -       2       ID=PAC:16242891.CDS.11;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     53902   53966   .       -       1       ID=PAC:16242891.CDS.12;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     52608   52639   .       -       2       ID=PAC:16242891.CDS.13;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     52517   52571   .       -       0       ID=PAC:16242891.CDS.14;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     52362   52465   .       -       2       ID=PAC:16242891.CDS.15;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     51828   51925   .       -       0       ID=PAC:16242891.CDS.16;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    CDS     51481   51625   .       -       1       ID=PAC:16242891.CDS.17;Parent=PAC:16242891;pacid=16242891
Gm01    phytozome8_0    gene    90693   95580   .       -       .       ID=Glyma01g00300;Name=Glyma01g00300
Gm01    phytozome8_0    mRNA    90693   94401   .       -       .       ID=PAC:16242894;Name=Glyma01g00300.1;pacid=16242894;longest=1;Parent=Glyma01g00300
Gm01    phytozome8_0    CDS     92970   94401   .       -       0       ID=PAC:16242894.CDS.1;Parent=PAC:16242894;pacid=16242894
Gm01    phytozome8_0    CDS     92083   92084   .       -       2       ID=PAC:16242894.CDS.2;Parent=PAC:16242894;pacid=16242894
Gm01    phytozome8_0    CDS     90693   90860   .       -       0       ID=PAC:16242894.CDS.3;Parent=PAC:16242894;pacid=16242894
Gm01    phytozome8_0    mRNA    94388   95580   .       -       .       ID=PAC:16242895;Name=Glyma01g00300.2;pacid=16242895;longest=0;Parent=Glyma01g00300
Gm01    phytozome8_0    CDS     95467   95469   .       -       0       ID=PAC:16242895.CDS.1;Parent=PAC:16242895;pacid=16242895
Gm01    phytozome8_0    five_prime_UTR  95470   95580   .       -       .       ID=PAC:16242895.five_prime_UTR.1;Parent=PAC:16242895;pacid=16242895
Gm01    phytozome8_0    CDS     95277   95356   .       -       0       ID=PAC:16242895.CDS.2;Parent=PAC:16242895;pacid=16242895
Gm01    phytozome8_0    CDS     94388   94475   .       -       1       ID=PAC:16242895.CDS.3;Parent=PAC:16242895;pacid=16242895
Gm01    phytozome8_0    gene    116300  127990  .       +       .       ID=Glyma01g00320;Name=Glyma01g00320
Gm01    phytozome8_0    mRNA    116300  127990  .       +       .       ID=PAC:16242897;Name=Glyma01g00320.1;pacid=16242897;longest=1;Parent=Glyma01g00320
Gm01    phytozome8_0    five_prime_UTR  116300  116467  .       +       .       ID=PAC:16242897.five_prime_UTR.1;Parent=PAC:16242897;pacid=16242897
Gm01    phytozome8_0    CDS     116468  117077  .       +       0       ID=PAC:16242897.CDS.1;Parent=PAC:16242897;pacid=16242897
Gm01    phytozome8_0    CDS     117156  118627  .       +       2       ID=PAC:16242897.CDS.2;Parent=PAC:16242897;pacid=16242897
Gm01    phytozome8_0    CDS     125732  125982  .       +       0       ID=PAC:16242897.CDS.3;Parent=PAC:16242897;pacid=16242897
Gm01    phytozome8_0    CDS     127537  127567  .       +       1       ID=PAC:16242897.CDS.4;Parent=PAC:16242897;pacid=16242897
Gm01    phytozome8_0    three_prime_UTR 127568  127990  .       +       .       ID=PAC:16242897.three_prime_UTR.1;Parent=PAC:16242897;pacid=16242897
Gm01    phytozome8_0    mRNA    116300  127990  .       +       .       ID=PAC:16242898;Name=Glyma01g00320.2;pacid=16242898;longest=0;Parent=Glyma01g00320
Gm01    phytozome8_0    five_prime_UTR  116300  116467  .       +       .       ID=PAC:16242898.five_prime_UTR.1;Parent=PAC:16242898;pacid=16242898
Gm01    phytozome8_0    CDS     116468  117077  .       +       0       ID=PAC:16242898.CDS.1;Parent=PAC:16242898;pacid=16242898
Gm01    phytozome8_0    CDS     117156  118627  .       +       2       ID=PAC:16242898.CDS.2;Parent=PAC:16242898;pacid=16242898
Gm01    phytozome8_0    CDS     127537  127707  .       +       0       ID=PAC:16242898.CDS.3;Parent=PAC:16242898;pacid=16242898
Gm01    phytozome8_0    three_prime_UTR 127708  127990  .       +       .       ID=PAC:16242898.three_prime_UTR.1;Parent=PAC:16242898;pacid=16242898
Gm01    phytozome8_0    mRNA    127557  127707  .       +       .       ID=PAC:16242899;Name=Glyma01g00320.4;pacid=16242899;longest=0;Parent=Glyma01g00320
Gm01    phytozome8_0    CDS     127557  127707  .       +       1       ID=PAC:16242899.CDS.1;Parent=PAC:16242899;pacid=16242899
Gm01    phytozome8_0    gene    170877  193446  .       +       .       ID=Glyma01g00380;Name=Glyma01g00380</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1907</wp:post_id>
		<wp:post_date>2012-11-28 14:53:51</wp:post_date>
		<wp:post_date_gmt>2012-11-28 19:53:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>intron-size-gff3-perl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gff3"><![CDATA[GFF3]]></category>
		<category domain="category" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="post_tag" nicename="perl"><![CDATA[Perl]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[352]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>世界末日</title>
		<link>http://128.192.66.53/wordpress/?p=1936</link>
		<pubDate>Fri, 30 Nov 2012 19:25:30 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1936</guid>
		<description></description>
		<content:encoded><![CDATA[我特别希望世界末日是真的！
。。。。。。
看评论。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1936</wp:post_id>
		<wp:post_date>2012-11-30 14:25:30</wp:post_date>
		<wp:post_date_gmt>2012-11-30 19:25:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>the-end-of-the-world</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="stupid"><![CDATA[Stupid]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[651]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1840</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.7.230</wp:comment_author_IP>
			<wp:comment_date>2012-11-30 14:25:43</wp:comment_date>
			<wp:comment_date_gmt>2012-11-30 19:25:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[继续＂意识流＂。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1354303543.6";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1841</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.7.230</wp:comment_author_IP>
			<wp:comment_date>2012-11-30 14:29:51</wp:comment_date>
			<wp:comment_date_gmt>2012-11-30 19:29:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[第一个主要原因是跟进化有关。最近一篇nature文章确认了一个长久以来的＂常识＂：人类基因组已经积累了太多的有害突变。 Past 5,000 years prolific for changes to human genome:http://www.nature.com/news/past-5-000-years-prolific-for-changes-to-human-genome-1.11912]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1354303551.66";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1842</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.7.230</wp:comment_author_IP>
			<wp:comment_date>2012-11-30 14:29:58</wp:comment_date>
			<wp:comment_date_gmt>2012-11-30 19:29:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[集体生存能力极强的人类在5000年前开始摆脱了自然选择的束缚。加上人口爆炸，基因组内的有害突变越来越多。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1354303558.8";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1843</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.7.230</wp:comment_author_IP>
			<wp:comment_date>2012-11-30 14:34:05</wp:comment_date>
			<wp:comment_date_gmt>2012-11-30 19:34:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[来一次像电影2012那样的世界末日，扫除绝大部分有害突变。剩下的这些人当然也会带着，并且会造成bottleneck。如果现代文明也被摧毁，这些有限量的有害突变应该可以通过日后在残酷自然环境中被消灭一部分。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1354303565.88";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1844</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.7.230</wp:comment_author_IP>
			<wp:comment_date>2012-11-30 14:37:14</wp:comment_date>
			<wp:comment_date_gmt>2012-11-30 19:37:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[另一个原因和人性有关。和蝙蝠侠前传里那些反角的想法一模一样：人性已经堕落到无法救赎的地步，屠杀式的革命或者世界末日才能让人类清醒，人性回归。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1354303574.52";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1845</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.7.230</wp:comment_author_IP>
			<wp:comment_date>2012-11-30 14:48:42</wp:comment_date>
			<wp:comment_date_gmt>2012-11-30 19:48:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[再一个原因个自己有关。一个能有上面两种想法的人的人生观能好到哪去。不过，也不多说这个了。反正太阳的寿命是有限的，人类终究是要灭绝的。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1354303602.61";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1846</wp:comment_id>
			<wp:comment_author><![CDATA[bioops]]></wp:comment_author>
			<wp:comment_author_email>bioops.info@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://128.192.66.53/wordpress/</wp:comment_author_url>
			<wp:comment_author_IP>128.192.7.230</wp:comment_author_IP>
			<wp:comment_date>2012-11-30 14:49:52</wp:comment_date>
			<wp:comment_date_gmt>2012-11-30 19:49:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[“反正太阳的寿命是有限的，人类终究是要灭绝的。”一想到这个，我就释然了。Nothing matters.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1354303612.74";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"bioops";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>[genome] the wheat and barley genome</title>
		<link>http://128.192.66.53/wordpress/?p=1940</link>
		<pubDate>Fri, 30 Nov 2012 20:14:01 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1940</guid>
		<description></description>
		<content:encoded><![CDATA[Due to the polyploid of wheat genome and the repetitive nature of barley genome, the "sequenced" <a href="http://dx.doi.org/10.1038/nature11650" target="_blank">wheat</a> and <a href="http://dx.doi.org/10.1038/nature11543" target="_blank">barley</a> genomes are not as good as other reference genomes or even other draft genomes, but it's still a great news for wheat and barley community.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1940</wp:post_id>
		<wp:post_date>2012-11-30 15:14:01</wp:post_date>
		<wp:post_date_gmt>2012-11-30 20:14:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-wheat-and-barle-genome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="barley"><![CDATA[Barley]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="wheat"><![CDATA[Wheat]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[212]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sequencing cost (2013 Feb)</title>
		<link>http://128.192.66.53/wordpress/?p=1978</link>
		<pubDate>Wed, 20 Feb 2013 19:45:16 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1978</guid>
		<description></description>
		<content:encoded><![CDATA[<div><section>
<h2><a href="http://www.nature.com/news/gene-sequencing-leaves-the-laboratory-1.12454" target="_blank">Reasonably priced genomes</a></h2>
<section></section><section>Although no reports of big innovations in DNA sequencing are expected at a major conference this week, the current cost and capabilities of the technology now make medical applications worthwhile.</section>
<table>
<thead>
<tr>
<th scope="col">Name</th>
<th scope="col">Machine cost</th>
<th scope="col">Read length (bases)</th>
<th scope="col">Cost per megabase</th>
</tr>
</thead>
<tbody>
<tr>
<td>Illumina MiSeq</td>
<td>US$125,000</td>
<td>500</td>
<td>14–70 cents</td>
</tr>
<tr>
<td>Illumina HiSeq</td>
<td>US$690,000</td>
<td>300</td>
<td>4–5 cents</td>
</tr>
<tr>
<td>PacBio RS</td>
<td>US$695,000</td>
<td>4,575</td>
<td>$2–17</td>
</tr>
<tr>
<td>Ion Torrent PGM</td>
<td>US$49,000</td>
<td>400</td>
<td>60 cents–$5</td>
</tr>
<tr>
<td>Ion Torrent Proton</td>
<td>US$224,000</td>
<td>200</td>
<td>1–9 cents</td>
</tr>
</tbody>
</table>
Source: The companies; Travis Glenn

</section></div>
<div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1978</wp:post_id>
		<wp:post_date>2013-02-20 14:45:16</wp:post_date>
		<wp:post_date_gmt>2013-02-20 19:45:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>sequencing-cost</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="illumina"><![CDATA[Illumina]]></category>
		<category domain="post_tag" nicename="life-tech"><![CDATA[Life Tech]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<category domain="category" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="pacbio"><![CDATA[PacBio]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[126]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[genome] The lamprey genome</title>
		<link>http://128.192.66.53/wordpress/?p=1987</link>
		<pubDate>Sun, 24 Mar 2013 15:58:24 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1987</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Sequencing of the sea lamprey (<em>Petromyzon marinus</em>) genome provides insights into vertebrate evolution</h1>
<a href="http://dx.doi.org/10.1038/ng.2568" target="_blank">doi:10.1038/ng.2568</a>  and some <a href="http://ivory.idyll.org/blog/the-lamprey-genome.html" target="_blank">Titus Brown's comments</a>

Lampreys are representatives of an ancient vertebrate lineage that diverged from our own ~500 million years ago. By virtue of this deeply shared ancestry, the sea lamprey (<em>P. marinus</em>) genome is uniquely poised to provide insight into the ancestry of vertebrate genomes and the underlying principles of vertebrate biology. Here, we present the first lamprey whole-genome sequence and assembly. We note challenges faced owing to its high content of repetitive elements and GC bases, as well as the absence of broad-scale sequence information from closely related species. Analyses of the assembly indicate that two whole-genome duplications likely occurred before the divergence of ancestral lamprey and gnathostome lineages. Moreover, the results help define key evolutionary events within vertebrate lineages, including the origin of myelin-associated proteins and the development of appendages. The lamprey genome provides an important resource for reconstructing vertebrate origins and the evolutionary events that have shaped the genomes of extant organisms.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1987</wp:post_id>
		<wp:post_date>2013-03-24 11:58:24</wp:post_date>
		<wp:post_date_gmt>2013-03-24 15:58:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>lamprey-genome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="lamprey"><![CDATA[lamprey]]></category>
		<category domain="post_tag" nicename="nature"><![CDATA[Nature]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[28]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[paper-the-lamprey-genome]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[genome] The bamboo genome</title>
		<link>http://128.192.66.53/wordpress/?p=1992</link>
		<pubDate>Sun, 24 Mar 2013 16:02:38 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1992</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>The draft genome of the fast-growing non-timber forest species moso bamboo (<em>Phyllostachys heterocycla</em>)</h1>
<a href="http://dx.doi.org/10.1038/ng.2569" target="_blank">doi:10.1038/ng.2569</a>

Bamboo represents the only major lineage of grasses that is native to forests and is one of the most important non-timber forest products in the world. However, no species in the Bambusoideae subfamily has been sequenced. Here, we report a high-quality draft genome sequence of moso bamboo (<em>P. heterocycla var. pubescens</em>). The 2.05-Gb assembly covers 95% of the genomic region. Gene prediction modeling identified 31,987 genes, most of which are supported by cDNA and deep RNA sequencing data. Analyses of clustered gene families and gene collinearity show that bamboo underwent whole-genome duplication 7–12 million years ago. Identification of gene families that are key in cell wall biosynthesis suggests that the whole-genome duplication event generated more gene duplicates involved in bamboo shoot development. RNA sequencing analysis of bamboo flowering tissues suggests a potential connection between drought-responsive and flowering genes.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1992</wp:post_id>
		<wp:post_date>2013-03-24 12:02:38</wp:post_date>
		<wp:post_date_gmt>2013-03-24 16:02:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>paper-the-bamboo-genome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="post_tag" nicename="bamboo"><![CDATA[bamboo]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="nature"><![CDATA[Nature]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[34]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[genome] Wheat AA and DD genomes</title>
		<link>http://128.192.66.53/wordpress/?p=1994</link>
		<pubDate>Sun, 24 Mar 2013 18:23:42 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=1994</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>AA-genome:</h1>
<h2>Draft genome of the wheat A-genome progenitor Triticum urartu</h2>
<div><a href="http://dx.doi.org/10.1038/nature11997" target="_blank">doi:10.1038/nature11997</a></div>
<div>

Bread wheat (Triticum aestivum, AABBDD) is one of the most widely cultivated and consumed food crops in the world. However, the complex polyploid nature of its genome makes genetic and functional analyses extremely challenging. The A genome, as a basic genome of bread wheat and other polyploid wheats, for example, T. turgidum (AABB), T. timopheevii (AAGG) and T. zhukovskyi (AAGGAmAm), is central to wheat evolution, domestication and genetic improvement. The progenitor species of the A genome is the diploid wild einkorn wheat T. urartu, which resembles cultivated wheat more extensively than do Aegilops speltoides (the ancestor of the B genome) and Ae. tauschii (the donor of the D genome), especially in the morphology and development of spike and seed. Here we present the generation, assembly and analysis of a whole-genome shotgun draft sequence of the T. urartu genome. We identified protein-coding gene models, performed genome structure analyses and assessed its utility for analysing agronomically important genes and for developing molecular markers. Our T. urartu genome assembly provides a diploid reference for analysis of polyploid wheat genomes and is a valuable resource for the genetic improvement of wheat.
<h1>DD-genome:</h1>
<h2>Aegilops tauschii draft genome sequence reveals a gene repertoire for wheat adaptation</h2>
<div><a href="http://dx.doi.org/10.1038/nature12028" target="_blank">doi:10.1038/nature12028</a></div>
<div>

About 8,000 years ago in the Fertile Crescent, a spontaneous hybridization of the wild diploid grass Aegilops tauschii (2n = 14; DD) with the cultivated tetraploid wheat Triticum turgidum (2n = 4x = 28; AABB) resulted in hexaploid wheat (T. aestivum; 2n = 6x = 42; AABBDD). Wheat has since become a primary staple crop worldwide as a result of its enhanced adaptability to a wide range of climates and improved grain quality for the production of baker’s flour. Here we describe sequencing the Ae. tauschii genome and obtaining a roughly 90-fold depth of short reads from libraries with various insert sizes, to gain a better understanding of this genetically complex plant. The assembled scaffolds represented 83.4% of the genome, of which 65.9% comprised transposable elements. We generated comprehensive RNA-Seq data and used it to identify 43,150 protein-coding genes, of which 30,697 (71.1%) were uniquely anchored to chromosomes with an integrated high-density genetic map<strong>. Whole-genome analysis revealed gene family expansion in Ae. tauschii of agronomically relevant gene families that were associated with disease resistance, abiotic stress tolerance and grain quality.</strong> This draft genome sequence provides insight into the environmental adaptation of bread wheat and can aid in defining the large and complicated genomes of wheat species.

</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1994</wp:post_id>
		<wp:post_date>2013-03-24 14:23:42</wp:post_date>
		<wp:post_date_gmt>2013-03-24 18:23:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>wheat-aa-and-dd-genome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="post_tag" nicename="bgi"><![CDATA[BGI]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="nature"><![CDATA[Nature]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="wheat"><![CDATA[Wheat]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[50]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[genome] The peach genome</title>
		<link>http://128.192.66.53/wordpress/?p=2007</link>
		<pubDate>Sun, 24 Mar 2013 20:34:32 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=2007</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>The high-quality draft genome of peach (<em>Prunus persica</em>) identifies unique patterns of genetic diversity, domestication and genome evolution</h1>
<a href="http://dx.doi.org/10.1038/ng.2586" target="_blank">doi:10.1038/ng.2586</a>

Rosaceae is the most important fruit-producing clade, and its key commercially relevant genera (<em>Fragaria</em>, <em>Rosa, Rubus</em> and <em>Prunus</em>) show broadly diverse growth habits, fruit types and compact diploid genomes. Peach, a diploid <em>Prunus</em> species, is one of the best genetically characterized deciduous trees. Here we describe the high-quality genome sequence of peach obtained from a completely homozygous genotype. We obtained a complete chromosome-scale assembly using Sanger whole-genome shotgun methods. We predicted 27,852 protein-coding genes, as well as noncoding RNAs. We investigated the path of peach domestication through whole-genome resequencing of 14 <em>Prunus</em> accessions. The analyses suggest major genetic bottlenecks that have substantially shaped peach genome diversity. Furthermore, comparative analyses showed that peach has not undergone recent whole-genome duplication, and even though the ancestral triplicated blocks in peach are fragmentary compared to those in grape, all seven paleosets of paralogs from the putative paleoancestor are detectable.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2007</wp:post_id>
		<wp:post_date>2013-03-24 16:34:32</wp:post_date>
		<wp:post_date_gmt>2013-03-24 20:34:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>peach-genome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="nature"><![CDATA[Nature]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[31]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[genome] The peregrine and saker falcon genomes</title>
		<link>http://128.192.66.53/wordpress/?p=2011</link>
		<pubDate>Sun, 24 Mar 2013 20:37:15 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=2011</guid>
		<description></description>
		<content:encoded><![CDATA[BBC report:  <a href="http://www.bbc.co.uk/nature/21885659" target="_blank">Falcons 'rapidly evolved' hunting skills</a>
<h1>Peregrine and saker falcon genome sequences provide insights into evolution of a predatory lifestyle</h1>
<a href="http://dx.doi.org/10.1038/ng.2588" target="_blank">doi:10.1038/ng.2588</a>

As top predators, falcons possess unique morphological, physiological and behavioral adaptations that allow them to be successful hunters: for example, the peregrine is renowned as the world's fastest animal. To examine the evolutionary basis of predatory adaptations, we sequenced the genomes of both the peregrine (<em>Falco peregrinus</em>) and saker falcon (<em>Falco cherrug</em>), and we present parallel, genome-wide evidence for evolutionary innovation and selection for a predatory lifestyle. The genomes, assembled using Illumina deep sequencing with greater than 100-fold coverage, are both approximately 1.2 Gb in length, with transcriptome-assisted prediction of approximately 16,200 genes for both species. Analysis of 8,424 orthologs in both falcons, chicken, zebra finch and turkey identified consistent evidence for genome-wide rapid evolution in these raptors. SNP-based inference showed contrasting recent demographic trajectories for the two falcons, and gene-based analysis highlighted falcon-specific evolutionary novelties for beak development and olfaction and specifically for homeostasis-related genes in the arid environment–adapted saker.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2011</wp:post_id>
		<wp:post_date>2013-03-24 16:37:15</wp:post_date>
		<wp:post_date_gmt>2013-03-24 20:37:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>peregrine-and-saker-falcon-genomes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[72]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NGS startups</title>
		<link>http://128.192.66.53/wordpress/?p=2015</link>
		<pubDate>Tue, 26 Mar 2013 16:52:16 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=2015</guid>
		<description></description>
		<content:encoded><![CDATA[<h1><a href="https://www.23andme.com/" target="_blank">23andme</a></h1>
<h3><a href="http://en.wikipedia.org/wiki/23andMe" target="_blank">Wiki</a>:</h3>
23andMe is a privately held personal genomics and biotechnology company based in Mountain View, California that provides rapid genetic testing. The company is named for the 23 pairs of chromosomes in a normal human cell. Their personal genome test kit was named "Invention of the Year" by <em>Time</em> magazine in 2008.
<h3><a href="https://www.23andme.com/about/jobs/" target="_blank">Jobs</a>:</h3>
<strong>Engineering:</strong>
HPC Systems Administrator
Senior Software Engineer
Software Engineer
Storage Systems Architect/Engineer
<strong>Science:</strong>
Backend Software Engineer
Health Content Scientist
Research Assistant
Scientist
Statistical Geneticist
Statistical Geneticist focusing on Parkinson's Disease
Survey Methodologist
User Interface Designer
<h1><a href="http://www.binatechnologies.com/" target="_blank">Bina</a></h1>
<h3><a href="http://www.binatechnologies.com/company" target="_blank">About</a>:</h3>
Bina is the big data science platform accelerating personalized medicine for researchers and clinicians requiring fast, accurate and scalable genomic analysis. The word "Bina" means "knowledge" or "insight", translated from both Persian and Hebrew. We use cutting-edge big data technologies to dramatically reduce the amount of time and money required to process raw genetic data in order to generate insights for personalized medicine. Bina was started by a team of Stanford and Berkeley researchers and entrepreneurs, with the vision that whole genome sequencing (WGS) is just the beginning of a brighter future. Bina is accelerating personalized medicine, one genome at a time.
<h3><a href="http://www.binatechnologies.com/company/joinus" target="_blank">Jobs:</a></h3>
Big Data Software Architect
Senior Software Engineer
Senior Computational Biologist
Senior Data Scientist
Senior Applications Support Scientist
Senior Bioinformatics Scientist

<a href="http://techcrunch.com/2013/03/25/with-6-5m-in-tow-bina-technologies-wants-to-bring-big-data-insight-to-genomic-sequencing/" target="_blank">TechCrunch: With $6.25M In Tow, Bina Technologies Wants To Bring Big Data Insight To Genomic Sequencing</a>

<strong><em>(to be continued)</em></strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2015</wp:post_id>
		<wp:post_date>2013-03-26 12:52:16</wp:post_date>
		<wp:post_date_gmt>2013-03-26 16:52:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ngs-startups</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="company"><![CDATA[Company]]></category>
		<category domain="post_tag" nicename="job"><![CDATA[Job]]></category>
		<category domain="category" nicename="news"><![CDATA[News]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[62]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[genome] The platyfish genome</title>
		<link>http://128.192.66.53/wordpress/?p=2026</link>
		<pubDate>Sun, 31 Mar 2013 21:35:43 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=2026</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>The genome of the platyfish, <em>Xiphophorus maculatus</em>, provides insights into evolutionary adaptation and several complex traits</h1>
Nature Genetics. <a href="http://dx.doi.org/10.1038/ng.2604" target="_blank">doi:10.1038/ng.2604</a>

Authors: Manfred Schartl, Ronald B Walter, Yingjia Shen, Tzintzuni Garcia, Julian Catchen, Angel Amores, Ingo Braasch, Domitille Chalopin, Jean-Nicolas Volff, Klaus-Peter Lesch, Angelo Bisazza, Pat Minx, LaDeana Hillier, Richard K Wilson, Susan Fuerstenberg, Jeffrey Boore, Steve Searle, John H Postlethwait &amp; Wesley C Warren

Several attributes intuitively considered to be typical mammalian features, such as complex behavior, live birth and malignant disease such as cancer, also appeared several times independently in lower vertebrates. The genetic mechanisms underlying the evolution of these elaborate traits are poorly understood. The platyfish, X. maculatus, offers a unique model to better understand the molecular biology of such traits. We report here the sequencing of the platyfish genome. Integrating genome assembly with extensive genetic maps identified an unexpected evolutionary stability of chromosomes in fish, in contrast to in mammals. Genes associated with viviparity show signatures of positive selection, identifying new putative functional domains and rare cases of parallel evolution. We also find that genes implicated in cognition show an unexpectedly high rate of duplicate gene retention after the teleost genome duplication event, suggesting a hypothesis for the evolution of the behavioral complexity in fish, which exceeds that found in amphibians and reptiles.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2026</wp:post_id>
		<wp:post_date>2013-03-31 17:35:43</wp:post_date>
		<wp:post_date_gmt>2013-03-31 21:35:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>platyfish-genome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="nature"><![CDATA[Nature]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[41]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[genome] The zebrafish genome</title>
		<link>http://128.192.66.53/wordpress/?p=2031</link>
		<pubDate>Thu, 18 Apr 2013 04:25:36 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=2031</guid>
		<description></description>
		<content:encoded><![CDATA[<p dir="ltr"><strong>The zebrafish reference genome sequence and its relationship to the human genome</strong></p>
Nature: <a href="http://dx.doi.org/10.1038/nature12111">doi:10.1038/nature12111</a>

Zebrafish have become a popular organism for the study of vertebrate gene function. The virtually transparent embryos of this species, and the ability to accelerate genetic studies by gene knockdown or overexpression, have led to the widespread use of zebrafish in the detailed investigation of vertebrate gene function and increasingly, the study of human genetic disease. However, for effective modelling of human genetic disease it is important to understand the extent to which zebrafish genes and gene structures are related to orthologous human genes. To examine this, we generated a high-quality sequence assembly of the zebrafish genome, made up of an overlapping set of completely sequenced large-insert clones that were ordered and oriented using a high-resolution high-density meiotic map. Detailed automatic and manual annotation provides evidence of more than 26,000 protein-coding genes, the largest gene set of any vertebrate so far sequenced. Comparison to the human reference genome shows that approximately 70% of human genes have at least one obvious zebrafish orthologue. In addition, the high quality of this genome assembly provides a clearer understanding of key genomic features such as a unique repeat content, a scarcity of pseudogenes, an enrichment of zebrafish-specific genes on chromosome 4 and chromosomal regions that influence sex determination.

<strong>A systematic genome-wide analysis of zebrafish protein-coding gene function</strong>
<p dir="ltr">Nature: <a href="http://dx.doi.org/10.1038/nature11992">doi:10.1038/nature11992</a></p>
Since the publication of the human reference genome, the identities of specific genes associated with human diseases are being discovered at a rapid rate. A central problem is that the biological activity of these genes is often unclear. Detailed investigations in model vertebrate organisms, typically mice, have been essential for understanding the activities of many orthologues of these disease-associated genes. Although gene-targeting approaches and phenotype analysis have led to a detailed understanding of nearly 6,000 protein-coding genes, this number falls considerably short of the more than 22,000 mouse protein-coding genes. Similarly, in zebrafish genetics, one-by-one gene studies using positional cloning, insertional mutagenesis, antisense morpholino oligonucleotides, targeted re-sequencing, and zinc finger and TAL endonucleases have made substantial contributions to our understanding of the biological activity of vertebrate genes, but again the number of genes studied falls well short of the more than 26,000 zebrafish protein-coding genes. Importantly, for both mice and zebrafish, none of these strategies are particularly suited to the rapid generation of knockouts in thousands of genes and the assessment of their biological activity. Here we describe an active project that aims to identify and phenotype the disruptive mutations in every zebrafish protein-coding gene, using a well-annotated zebrafish reference genome sequence, high-throughput sequencing and efficient chemical mutagenesis. So far we have identified potentially disruptive mutations in more than 38% of all known zebrafish protein-coding genes. We have developed a multi-allelic phenotyping scheme to efficiently assess the effects of each allele during embryogenesis and have analysed the phenotypic consequences of over 1,000 alleles. All mutant alleles and data are available to the community and our phenotyping scheme is adaptable to phenotypic analysis beyond embryogenesis.

<strong>Genomics: Zebrafish earns its stripes</strong>

Nature: <a href="http://dx.doi.org/10.1038/nature12094">doi:10.1038/nature12094</a>

The reported sequence of the zebrafish genome, together with the production of mutant strains representing more than one-third of all its protein-coding regions, will accelerate the characterization of human genes.
<div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2031</wp:post_id>
		<wp:post_date>2013-04-18 00:25:36</wp:post_date>
		<wp:post_date_gmt>2013-04-18 04:25:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>genome-the-zebrafish-genome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="nature"><![CDATA[Nature]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="category" nicename="paper"><![CDATA[Paper]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>[genome] The African coelacanth (a ‘living fossil’) genome</title>
		<link>http://128.192.66.53/wordpress/?p=2033</link>
		<pubDate>Thu, 18 Apr 2013 04:26:49 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=2033</guid>
		<description></description>
		<content:encoded><![CDATA[<p dir="ltr"><strong>The African coelacanth genome provides insights into tetrapod evolution</strong></p>
Nature: <a href="http://dx.doi.org/10.1038/nature12027">doi:10.1038/nature12027</a>

The discovery of a living coelacanth specimen in 1938 was remarkable, as this lineage of lobe-finned fish was thought to have become extinct 70 million years ago. The modern coelacanth looks remarkably similar to many of its ancient relatives, and its evolutionary proximity to our own fish ancestors provides a glimpse of the fish that first walked on land. Here we report the genome sequence of the African coelacanth, Latimeria chalumnae. Through a phylogenomic analysis, we conclude that the lungfish, and not the coelacanth, is the closest living relative of tetrapods. Coelacanth protein-coding genes are significantly more slowly evolving than those of tetrapods, unlike other genomic features. Analyses of changes in genes and regulatory elements during the vertebrate adaptation to land highlight genes involved in immunity, nitrogen excretion and the development of fins, tail, ear, eye, brain and olfaction. Functional assays of enhancers involved in the fin-to-limb transition and in the emergence of extra-embryonic tissues show the importance of the coelacanth genome as a blueprint for understanding tetrapod evolution.

<strong>‘Living fossil’ genome unlocked</strong>

Nature:  <a href="http://www.nature.com/doifinder/10.1038/496283a">http://www.nature.com/doifinder/10.1038/496283a</a>

The genes of an ancient fish, the coelacanth, have much to reveal about our distant past.

“It will allow us to identify the genetic drivers of tetrapod evolution, the genes and regulatory elements that are responsible for the vertebrate land transition.” - James Noonan]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2033</wp:post_id>
		<wp:post_date>2013-04-18 00:26:49</wp:post_date>
		<wp:post_date_gmt>2013-04-18 04:26:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>african-coelacanth-genome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="category" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="category" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="genomics"><![CDATA[Genomics]]></category>
		<category domain="post_tag" nicename="nature"><![CDATA[Nature]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<category domain="post_tag" nicename="paper"><![CDATA[Paper]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[genome-the-african-coelacanth-a-living-fossil-genome]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Common job requirements for senior/mid-senior Bioinformatician and Computational Biologist</title>
		<link>http://128.192.66.53/wordpress/?p=2035</link>
		<pubDate>Thu, 18 Apr 2013 04:28:21 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=2035</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
	<li>Degree: Phd (=MS+“n” years experience)</li>
	<li>NGS data processing experience</li>
	<li>Biology + Statistics knowledge</li>
	<li>Programming: Statistics (R/Matlab/SAS), Script language (Python/Perl), OOP (C++/Java), Database (SQL)</li>
	<li>Linux/Unix</li>
	<li>Written and oral communication skills</li>
</ul>
(Note: Based on an incomplete and unprofessional survey on US job market in April 2013)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2035</wp:post_id>
		<wp:post_date>2013-04-18 00:28:21</wp:post_date>
		<wp:post_date_gmt>2013-04-18 04:28:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>job-requirements-for-bioinformatician</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bioinformatics"><![CDATA[Bioinformatics]]></category>
		<category domain="post_tag" nicename="company"><![CDATA[Company]]></category>
		<category domain="post_tag" nicename="job"><![CDATA[Job]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="next-generation-sequencing"><![CDATA[NGS]]></category>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[14]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>test</title>
		<link>http://128.192.66.53/wordpress/?p=2060</link>
		<pubDate>Fri, 24 May 2013 13:23:15 +0000</pubDate>
		<dc:creator>bioops</dc:creator>
		<guid isPermaLink="false">http://128.192.66.53/wordpress/?p=2060</guid>
		<description></description>
		<content:encoded><![CDATA[test]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2060</wp:post_id>
		<wp:post_date>2013-05-24 09:23:15</wp:post_date>
		<wp:post_date_gmt>2013-05-24 13:23:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>test</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>views</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
